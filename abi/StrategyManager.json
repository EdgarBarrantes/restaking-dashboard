{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IDelegationManager",
          "name": "_delegation",
          "type": "address"
        },
        {
          "internalType": "contract IEigenPodManager",
          "name": "_eigenPodManager",
          "type": "address"
        },
        {
          "internalType": "contract ISlasher",
          "name": "_slasher",
          "type": "address"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "Deposit",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint8",
          "name": "version",
          "type": "uint8"
        }
      ],
      "name": "Initialized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Paused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "nonce",
          "type": "uint96"
        },
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "name": "ShareWithdrawalQueued",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyAddedToDepositWhitelist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        }
      ],
      "name": "StrategyRemovedFromDepositWhitelist",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "previousAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "newAddress",
          "type": "address"
        }
      ],
      "name": "StrategyWhitelisterChanged",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "account",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "Unpaused",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "nonce",
          "type": "uint96"
        },
        {
          "indexed": true,
          "internalType": "address",
          "name": "withdrawer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "withdrawalRoot",
          "type": "bytes32"
        }
      ],
      "name": "WithdrawalCompleted",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "previousValue",
          "type": "uint256"
        },
        {
          "indexed": false,
          "internalType": "uint256",
          "name": "newValue",
          "type": "uint256"
        }
      ],
      "name": "WithdrawalDelayBlocksSet",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": false,
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "uint96",
          "name": "nonce",
          "type": "uint96"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "withdrawer",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "address",
          "name": "delegatedAddress",
          "type": "address"
        },
        {
          "indexed": false,
          "internalType": "bytes32",
          "name": "withdrawalRoot",
          "type": "bytes32"
        }
      ],
      "name": "WithdrawalQueued",
      "type": "event"
    },
    {
      "inputs": [],
      "name": "DEPOSIT_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_SEPARATOR",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "DOMAIN_TYPEHASH",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "MAX_WITHDRAWAL_DELAY_BLOCKS",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy[]",
          "name": "strategiesToWhitelist",
          "type": "address[]"
        }
      ],
      "name": "addStrategiesToDepositWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "beaconChainETHSharesToDecrementOnWithdrawal",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "beaconChainETHStrategy",
      "outputs": [
        {
          "internalType": "contract IStrategy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "shares",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "depositor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "nonce",
                  "type": "uint96"
                }
              ],
              "internalType": "struct IStrategyManager.WithdrawerAndNonce",
              "name": "withdrawerAndNonce",
              "type": "tuple"
            },
            {
              "internalType": "uint32",
              "name": "withdrawalStartBlock",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "delegatedAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IStrategyManager.QueuedWithdrawal",
          "name": "queuedWithdrawal",
          "type": "tuple"
        }
      ],
      "name": "calculateWithdrawalRoot",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "pure",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "shares",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "depositor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "nonce",
                  "type": "uint96"
                }
              ],
              "internalType": "struct IStrategyManager.WithdrawerAndNonce",
              "name": "withdrawerAndNonce",
              "type": "tuple"
            },
            {
              "internalType": "uint32",
              "name": "withdrawalStartBlock",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "delegatedAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IStrategyManager.QueuedWithdrawal",
          "name": "queuedWithdrawal",
          "type": "tuple"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256",
          "name": "middlewareTimesIndex",
          "type": "uint256"
        },
        {
          "internalType": "bool",
          "name": "receiveAsTokens",
          "type": "bool"
        }
      ],
      "name": "completeQueuedWithdrawal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "components": [
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "shares",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "depositor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "nonce",
                  "type": "uint96"
                }
              ],
              "internalType": "struct IStrategyManager.WithdrawerAndNonce",
              "name": "withdrawerAndNonce",
              "type": "tuple"
            },
            {
              "internalType": "uint32",
              "name": "withdrawalStartBlock",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "delegatedAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IStrategyManager.QueuedWithdrawal[]",
          "name": "queuedWithdrawals",
          "type": "tuple[]"
        },
        {
          "internalType": "contract IERC20[][]",
          "name": "tokens",
          "type": "address[][]"
        },
        {
          "internalType": "uint256[]",
          "name": "middlewareTimesIndexes",
          "type": "uint256[]"
        },
        {
          "internalType": "bool[]",
          "name": "receiveAsTokens",
          "type": "bool[]"
        }
      ],
      "name": "completeQueuedWithdrawals",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "delegation",
      "outputs": [
        {
          "internalType": "contract IDelegationManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositBeaconChainETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "depositIntoStrategy",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy",
          "name": "strategy",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        },
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "expiry",
          "type": "uint256"
        },
        {
          "internalType": "bytes",
          "name": "signature",
          "type": "bytes"
        }
      ],
      "name": "depositIntoStrategyWithSignature",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "shares",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "eigenPodManager",
      "outputs": [
        {
          "internalType": "contract IEigenPodManager",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        }
      ],
      "name": "getDeposits",
      "outputs": [
        {
          "internalType": "contract IStrategy[]",
          "name": "",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "",
          "type": "uint256[]"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "initialOwner",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "initialStrategyWhitelister",
          "type": "address"
        },
        {
          "internalType": "contract IPauserRegistry",
          "name": "_pauserRegistry",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "initialPausedStatus",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "_withdrawalDelayBlocks",
          "type": "uint256"
        }
      ],
      "name": "initialize",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "nonces",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "name": "numWithdrawalsQueued",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "pause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauseAll",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint8",
          "name": "index",
          "type": "uint8"
        }
      ],
      "name": "paused",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "paused",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "pauserRegistry",
      "outputs": [
        {
          "internalType": "contract IPauserRegistry",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256[]",
          "name": "strategyIndexes",
          "type": "uint256[]"
        },
        {
          "internalType": "contract IStrategy[]",
          "name": "strategies",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "shares",
          "type": "uint256[]"
        },
        {
          "internalType": "address",
          "name": "withdrawer",
          "type": "address"
        },
        {
          "internalType": "bool",
          "name": "undelegateIfPossible",
          "type": "bool"
        }
      ],
      "name": "queueWithdrawal",
      "outputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "overcommittedPodOwner",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "beaconChainETHStrategyIndex",
          "type": "uint256"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "recordOvercommittedBeaconChainETH",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy[]",
          "name": "strategiesToRemoveFromWhitelist",
          "type": "address[]"
        }
      ],
      "name": "removeStrategiesFromDepositWhitelist",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "renounceOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newStrategyWhitelister",
          "type": "address"
        }
      ],
      "name": "setStrategyWhitelister",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "_withdrawalDelayBlocks",
          "type": "uint256"
        }
      ],
      "name": "setWithdrawalDelayBlocks",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "components": [
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "shares",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "depositor",
              "type": "address"
            },
            {
              "components": [
                {
                  "internalType": "address",
                  "name": "withdrawer",
                  "type": "address"
                },
                {
                  "internalType": "uint96",
                  "name": "nonce",
                  "type": "uint96"
                }
              ],
              "internalType": "struct IStrategyManager.WithdrawerAndNonce",
              "name": "withdrawerAndNonce",
              "type": "tuple"
            },
            {
              "internalType": "uint32",
              "name": "withdrawalStartBlock",
              "type": "uint32"
            },
            {
              "internalType": "address",
              "name": "delegatedAddress",
              "type": "address"
            }
          ],
          "internalType": "struct IStrategyManager.QueuedWithdrawal",
          "name": "queuedWithdrawal",
          "type": "tuple"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "indicesToSkip",
          "type": "uint256[]"
        }
      ],
      "name": "slashQueuedWithdrawal",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "slashedAddress",
          "type": "address"
        },
        {
          "internalType": "address",
          "name": "recipient",
          "type": "address"
        },
        {
          "internalType": "contract IStrategy[]",
          "name": "strategies",
          "type": "address[]"
        },
        {
          "internalType": "contract IERC20[]",
          "name": "tokens",
          "type": "address[]"
        },
        {
          "internalType": "uint256[]",
          "name": "strategyIndexes",
          "type": "uint256[]"
        },
        {
          "internalType": "uint256[]",
          "name": "shareAmounts",
          "type": "uint256[]"
        }
      ],
      "name": "slashShares",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "slasher",
      "outputs": [
        {
          "internalType": "contract ISlasher",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "name": "stakerStrategyList",
      "outputs": [
        {
          "internalType": "contract IStrategy",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "staker",
          "type": "address"
        }
      ],
      "name": "stakerStrategyListLength",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        },
        {
          "internalType": "contract IStrategy",
          "name": "",
          "type": "address"
        }
      ],
      "name": "stakerStrategyShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "contract IStrategy",
          "name": "",
          "type": "address"
        }
      ],
      "name": "strategyIsWhitelistedForDeposit",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "strategyWhitelister",
      "outputs": [
        {
          "internalType": "address",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "undelegate",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "newPausedStatus",
          "type": "uint256"
        }
      ],
      "name": "unpause",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "withdrawalDelayBlocks",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "bytes32",
          "name": "",
          "type": "bytes32"
        }
      ],
      "name": "withdrawalRootPending",
      "outputs": [
        {
          "internalType": "bool",
          "name": "",
          "type": "bool"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x6101006040523480156200001257600080fd5b5060405162005c2a38038062005c2a833981016040819052620000359162000140565b6001600160a01b0380841660805280831660a052811660c0526200005862000065565b50504660e0525062000194565b600054610100900460ff1615620000d25760405162461bcd60e51b815260206004820152602760248201527f496e697469616c697a61626c653a20636f6e747261637420697320696e697469604482015266616c697a696e6760c81b606482015260840160405180910390fd5b60005460ff908116101562000125576000805460ff191660ff9081179091556040519081527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b565b6001600160a01b03811681146200013d57600080fd5b50565b6000806000606084860312156200015657600080fd5b8351620001638162000127565b6020850151909350620001768162000127565b6040850151909250620001898162000127565b809150509250925092565b60805160a05160c05160e0516159de6200024c60003960008181610ddb0152611da801526000818161058d015281816106d601528181610bfc0152818161112901528181611b9d0152818161217e0152818161229501528181613869015261398a01526000818161030f0152818161171701528181611b0d0152612fc901526000818161062c015281816109ba015281816118f70152818161242c0152818161282d015281816133b6015261366101526159de6000f3fe608060405234801561001057600080fd5b50600436106102745760003560e01c80638b8aac3c11610151578063b5d8b5b8116100c3578063df5cf72311610087578063df5cf72314610627578063e7a050aa1461064e578063f123991e14610661578063f2fde38b14610674578063f3be65d314610687578063fabc1cbc1461069a57600080fd5b8063b5d8b5b8146105c2578063c3c6b3a9146105d5578063c6656702146105f8578063ca661c041461060b578063cbc2bd621461061457600080fd5b8063967fc0d211610115578063967fc0d21461053c5780639f00fa241461054f578063a6b63eb814610562578063a782d94514610575578063b134427114610588578063b43b514b146105af57600080fd5b80638b8aac3c146104be5780638da5cb5b146104e75780639104c319146104f857806392ab89bb1461051357806394f649dd1461051b57600080fd5b8063595c6a67116101ea578063663c1de4116101ae578063663c1de414610415578063715018a6146104385780637a7e0d92146104405780637ecebe001461046b578063886f11951461048b5780638b88b9151461049e57600080fd5b8063595c6a67146103ac5780635ac86ab7146103b45780635c975abb146103e75780635de08ff2146103ef57806363ecafb61461040257600080fd5b806343c090611161023c57806343c09061146102f75780634665bcda1461030a57806348825e94146103495780634d50f9a41461037057806350f73e7c14610383578063566310281461038c57600080fd5b806306f1f68414610279578063136439dd1461028e57806320606b70146102a157806332e89ace146102db5780633644e515146102ee575b600080fd5b61028c610287366004614932565b6106ad565b005b61028c61029c366004614a19565b610a52565b6102c87f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6040519081526020015b60405180910390f35b6102c86102e9366004614aa0565b610bb0565b6102c860c95481565b61028c610305366004614b96565b6110f2565b6103317f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102d2565b6102c87f0a564d4cfe5cb0d4ee082aab2ca54b8c48e129485a8f7c77766ab5ef0c3566f181565b61028c61037e366004614a19565b6114d2565b6102c860cc5481565b6102c861039a366004614c3c565b60d06020526000908152604090205481565b61028c6114e6565b6103d76103c2366004614c59565b609854600160ff9092169190911b9081161490565b60405190151581526020016102d2565b6098546102c8565b61028c6103fd366004614c7c565b6115cc565b61028c610410366004614cbd565b611715565b6103d7610423366004614c3c565b60d16020526000908152604090205460ff1681565b61028c61196f565b6102c861044e366004614cf2565b60cd60209081526000928352604080842090915290825290205481565b6102c8610479366004614c3c565b60ca6020526000908152604090205481565b609754610331906001600160a01b031681565b6102c86104ac366004614c3c565b60d26020526000908152604090205481565b6102c86104cc366004614c3c565b6001600160a01b0316600090815260ce602052604090205490565b6033546001600160a01b0316610331565b61033173beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac081565b61028c611983565b61052e610529366004614c3c565b61198c565b6040516102d2929190614d9f565b60cb54610331906001600160a01b031681565b61028c61055d366004614dcd565b611b0b565b61028c610570366004614df9565b611c79565b61028c610583366004614e54565b611e63565b6103317f000000000000000000000000000000000000000000000000000000000000000081565b6102c86105bd366004615146565b611f61565b61028c6105d0366004614c7c565b611fae565b6103d76105e3366004614a19565b60cf6020526000908152604090205460ff1681565b61028c610606366004614c3c565b6120f2565b6102c861c4e081565b610331610622366004614dcd565b612103565b6103317f000000000000000000000000000000000000000000000000000000000000000081565b6102c861065c36600461517a565b61213b565b6102c861066f3660046151c9565b612251565b61028c610682366004614c3c565b612a81565b61028c610695366004615288565b612af7565b61028c6106a8366004614a19565b612b62565b6106b5612d01565b6040516372c1cc1b60e11b81526001600160a01b03808c1660048301528b917f00000000000000000000000000000000000000000000000000000000000000009091169063e583983690602401602060405180830381865afa15801561071f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610743919061530f565b6107685760405162461bcd60e51b815260040161075f9061532c565b60405180910390fd5b6002606554141561078b5760405162461bcd60e51b815260040161075f90615382565b60026065558588146107fa5760405162461bcd60e51b815260206004820152603260248201527f53747261746567794d616e616765722e736c6173685368617265733a20696e706044820152710eae840d8cadccee8d040dad2e6dac2e8c6d60731b606482015260840161075f565b600088815b818110156109b7576108698e89898681811061081d5761081d6153b9565b905060200201358e8e85818110610836576108366153b9565b905060200201602081019061084b9190614c3c565b89898681811061085d5761085d6153b9565b90506020020135612d5b565b15610875578260010192505b73beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac08c8c8381811061089c5761089c6153b9565b90506020020160208101906108b19190614c3c565b6001600160a01b031614156108e8576108e38e8e8888858181106108d7576108d76153b9565b90506020020135612f35565b6109af565b8b8b828181106108fa576108fa6153b9565b905060200201602081019061090f9190614c3c565b6001600160a01b031663d9caed128e8c8c85818110610930576109306153b9565b90506020020160208101906109459190614c3c565b898986818110610957576109576153b9565b905060200201356040518463ffffffff1660e01b815260040161097c939291906153cf565b600060405180830381600087803b15801561099657600080fd5b505af11580156109aa573d6000803e3d6000fd5b505050505b6001016107ff565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635820491c8e8d8d89896040518663ffffffff1660e01b8152600401610a0c9594939291906153f3565b600060405180830381600087803b158015610a2657600080fd5b505af1158015610a3a573d6000803e3d6000fd5b50506001606555505050505050505050505050505050565b609760009054906101000a90046001600160a01b03166001600160a01b0316639fd0506d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aa5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac99190615482565b6001600160a01b0316336001600160a01b031614610af95760405162461bcd60e51b815260040161075f9061549f565b60985481811614610b725760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c6974790000000000000000606482015260840161075f565b609881905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b609854600090819060019081161415610bdb5760405162461bcd60e51b815260040161075f906154e7565b6040516372c1cc1b60e11b81526001600160a01b03808716600483015286917f00000000000000000000000000000000000000000000000000000000000000009091169063e583983690602401602060405180830381865afa158015610c45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c69919061530f565b15610c865760405162461bcd60e51b815260040161075f9061551e565b60026065541415610ca95760405162461bcd60e51b815260040161075f90615382565b600260655542851015610d305760405162461bcd60e51b815260206004820152604360248201527f53747261746567794d616e616765722e6465706f736974496e746f537472617460448201527f656779576974685369676e61747572653a207369676e617475726520657870696064820152621c995960ea1b608482015260a40161075f565b6001600160a01b03868116600090815260ca602090815260408083205481517f0a564d4cfe5cb0d4ee082aab2ca54b8c48e129485a8f7c77766ab5ef0c3566f1938101939093528d851691830191909152928b166060820152608081018a905260a0810183905260c0810188905260e00160408051601f1981840301815291815281516020928301206001600160a01b038b16600090815260ca9093529082206001850190559150467f000000000000000000000000000000000000000000000000000000000000000014610ec85750604080518082018252600a81526922b4b3b2b72630bcb2b960b11b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea81840152466060820152306080808301919091528351808303909101815260a08201845280519083012061190160f01b60c083015260c282015260e2808201859052835180830390910181526101029091019092528151910120610f04565b60c95460405161190160f01b60208201526022810191909152604281018390526062016040516020818303038152906040528051906020012090505b6001600160a01b0389163b1561102d57604051630b135d3f60e11b808252906001600160a01b038b1690631626ba7e90610f449085908c906004016155f0565b602060405180830381865afa158015610f61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f859190615609565b6001600160e01b031916146110285760405162461bcd60e51b815260206004820152605760248201527f53747261746567794d616e616765722e6465706f736974496e746f537472617460448201527f656779576974685369676e61747572653a2045524331323731207369676e617460648201527f75726520766572696669636174696f6e206661696c6564000000000000000000608482015260a40161075f565b6110d1565b886001600160a01b0316611041828961303a565b6001600160a01b0316146110d15760405162461bcd60e51b815260206004820152604b60248201527f53747261746567794d616e616765722e6465706f736974496e746f537472617460448201527f656779576974685369676e61747572653a207369676e6174757265206e6f742060648201526a333937b69039ba30b5b2b960a91b608482015260a40161075f565b6110dd898d8d8d61305e565b60016065559c9b505050505050505050505050565b6110fa612d01565b61110a60e0860160c08701614c3c565b6040516372c1cc1b60e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063e583983690602401602060405180830381865afa158015611170573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611194919061530f565b6111b05760405162461bcd60e51b815260040161075f9061532c565b600260655414156111d35760405162461bcd60e51b815260040161075f90615382565b60026065556111e28680615633565b851490506112585760405162461bcd60e51b815260206004820152603c60248201527f53747261746567794d616e616765722e736c617368517565756564576974686460448201527f726177616c3a20696e707574206c656e677468206d69736d6174636800000000606482015260840161075f565b60006112666105bd8861567c565b600081815260cf602052604090205490915060ff166112ef576040805162461bcd60e51b81526020600482015260248101919091527f53747261746567794d616e616765722e736c617368517565756564576974686460448201527f726177616c3a207769746864726177616c206973206e6f742070656e64696e67606482015260840161075f565b600081815260cf60205260408120805460ff19169055806113108980615633565b9050905060005b818110156114c057858310801561134557508087878581811061133c5761133c6153b9565b90506020020135145b1561135557826001019250611317565b73beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac06113748b80615633565b83818110611384576113846153b9565b90506020020160208101906113999190614c3c565b6001600160a01b031614156113de576113d96113bb60608c0160408d01614c3c565b8c6113c960208e018e615633565b858181106108d7576108d76153b9565b6114b8565b6113e88a80615633565b828181106113f8576113f86153b9565b905060200201602081019061140d9190614c3c565b6001600160a01b031663d9caed128c8b8b8581811061142e5761142e6153b9565b90506020020160208101906114439190614c3c565b61145060208f018f615633565b86818110611460576114606153b9565b905060200201356040518463ffffffff1660e01b8152600401611485939291906153cf565b600060405180830381600087803b15801561149f57600080fd5b505af11580156114b3573d6000803e3d6000fd5b505050505b600101611317565b50506001606555505050505050505050565b6114da612d01565b6114e3816131f4565b50565b609760009054906101000a90046001600160a01b03166001600160a01b0316639fd0506d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611539573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155d9190615482565b6001600160a01b0316336001600160a01b03161461158d5760405162461bcd60e51b815260040161075f9061549f565b600019609881905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2565b60cb546001600160a01b031633146115f65760405162461bcd60e51b815260040161075f9061568e565b8060005b8181101561170f5760d16000858584818110611618576116186153b9565b905060200201602081019061162d9190614c3c565b6001600160a01b0316815260208101919091526040016000205460ff1661170757600160d16000868685818110611666576116666153b9565b905060200201602081019061167b9190614c3c565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790557f0c35b17d91c96eb2751cd456e1252f42a386e524ef9ff26ecc9950859fdc04fe8484838181106116d6576116d66153b9565b90506020020160208101906116eb9190614c3c565b6040516001600160a01b03909116815260200160405180910390a15b6001016115fa565b50505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316331461175d5760405162461bcd60e51b815260040161075f906156f8565b600260655414156117805760405162461bcd60e51b815260040161075f90615382565b60026065556001600160a01b038316600090815260cd6020908152604080832073beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac08452909152902054808211156118125760006117d1828461576b565b6001600160a01b038616600090815260d260205260408120805492935083929091906117fe908490615782565b9091555061180e9050818461576b565b9250505b811561183a57611838848473beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac085612d5b565b505b6040805160018082528183019092526000916020808301908036833701905050905073beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac081600081518110611884576118846153b9565b6001600160a01b03929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905083816000815181106118d5576118d56153b9565b6020908102919091010152604051631608124760e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635820491c906119309089908690869060040161579a565b600060405180830381600087803b15801561194a57600080fd5b505af115801561195e573d6000803e3d6000fd5b505060016065555050505050505050565b611977612d01565b61198160006132b9565b565b6119813361330b565b6001600160a01b038116600090815260ce6020526040812054606091829190816001600160401b038111156119c3576119c3614a32565b6040519080825280602002602001820160405280156119ec578160200160208202803683370190505b50905060005b82811015611a7d576001600160a01b038616600090815260cd6020908152604080832060ce9092528220805491929184908110611a3157611a316153b9565b60009182526020808320909101546001600160a01b031683528201929092526040019020548251839083908110611a6a57611a6a6153b9565b60209081029190910101526001016119f2565b5060ce6000866001600160a01b03166001600160a01b031681526020019081526020016000208181805480602002602001604051908101604052809291908181526020018280548015611af957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611adb575b50505050509150935093505050915091565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163314611b535760405162461bcd60e51b815260040161075f906156f8565b60985460009060019081161415611b7c5760405162461bcd60e51b815260040161075f906154e7565b6040516372c1cc1b60e11b81526001600160a01b03808516600483015284917f00000000000000000000000000000000000000000000000000000000000000009091169063e583983690602401602060405180830381865afa158015611be6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c0a919061530f565b15611c275760405162461bcd60e51b815260040161075f9061551e565b60026065541415611c4a5760405162461bcd60e51b815260040161075f90615382565b6002606555611c6e8473beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac085613415565b505060016065555050565b600054610100900460ff1615808015611c995750600054600160ff909116105b80611cb35750303b158015611cb3575060005460ff166001145b611d165760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161075f565b6000805460ff191660011790558015611d39576000805461ff0019166101001790555b604080518082018252600a81526922b4b3b2b72630bcb2b960b11b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea818401527f00000000000000000000000000000000000000000000000000000000000000006060820152306080808301919091528351808303909101815260a0909101909252815191012060c955611dfa84846136d1565b611e03866132b9565b611e0c856137d1565b611e15826131f4565b8015611e5b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b60985460019060029081161415611e8c5760405162461bcd60e51b815260040161075f906154e7565b60026065541415611eaf5760405162461bcd60e51b815260040161075f90615382565b600260655560005b8881101561195e57611f4f8a8a83818110611ed457611ed46153b9565b9050602002810190611ee691906157da565b898984818110611ef857611ef86153b9565b9050602002810190611f0a9190615633565b898986818110611f1c57611f1c6153b9565b90506020020135888887818110611f3557611f356153b9565b9050602002016020810190611f4a91906157fa565b61383a565b80611f5981615817565b915050611eb7565b80516020808301516040808501516060860151608087015160a08801519351600097611f91979096959101615832565b604051602081830303815290604052805190602001209050919050565b60cb546001600160a01b03163314611fd85760405162461bcd60e51b815260040161075f9061568e565b8060005b8181101561170f5760d16000858584818110611ffa57611ffa6153b9565b905060200201602081019061200f9190614c3c565b6001600160a01b0316815260208101919091526040016000205460ff16156120ea57600060d16000868685818110612049576120496153b9565b905060200201602081019061205e9190614c3c565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790557f4074413b4b443e4e58019f2855a8765113358c7c72e39509c6af45fc0f5ba0308484838181106120b9576120b96153b9565b90506020020160208101906120ce9190614c3c565b6040516001600160a01b03909116815260200160405180910390a15b600101611fdc565b6120fa612d01565b6114e3816137d1565b60ce602052816000526040600020818154811061211f57600080fd5b6000918252602090912001546001600160a01b03169150829050565b6098546000908190600190811614156121665760405162461bcd60e51b815260040161075f906154e7565b6040516372c1cc1b60e11b81523360048201819052907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e583983690602401602060405180830381865afa1580156121cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121f1919061530f565b1561220e5760405162461bcd60e51b815260040161075f9061551e565b600260655414156122315760405162461bcd60e51b815260040161075f90615382565b60026065556122423387878761305e565b60016065559695505050505050565b6098546000906001906002908116141561227d5760405162461bcd60e51b815260040161075f906154e7565b6040516372c1cc1b60e11b81523360048201819052907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e583983690602401602060405180830381865afa1580156122e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612308919061530f565b156123255760405162461bcd60e51b815260040161075f9061551e565b600260655414156123485760405162461bcd60e51b815260040161075f90615382565b60026065558786146123a95760405162461bcd60e51b81526020600482015260366024820152600080516020615989833981519152604482015275040d2dce0eae840d8cadccee8d040dad2e6dac2e8c6d60531b606482015260840161075f565b6001600160a01b038516612415576040805162461bcd60e51b815260206004820152602481019190915260008051602061598983398151915260448201527f2063616e6e6f7420776974686472617720746f207a65726f2061646472657373606482015260840161075f565b604051631608124760e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635820491c906124699033908d908d908d908d906004016153f3565b600060405180830381600087803b15801561248357600080fd5b505af1158015612497573d6000803e3d6000fd5b505033600090815260d0602052604081205492509050805b8a8110156128145773beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac08c8c838181106124de576124de6153b9565b90506020020160208101906124f39190614c3c565b6001600160a01b03161415612701576001600160a01b03881633146125a25760405162461bcd60e51b8152602060048201526065602482015260008051602061598983398151915260448201527f2063616e6e6f742071756575652061207769746864726177616c206f6620426560648201527f61636f6e20436861696e2045544820746f206120646966666572656e74206164608482015264647265737360d81b60a482015260c40161075f565b60018b1461263b5760405162461bcd60e51b8152602060048201526066602482015260008051602061598983398151915260448201527f2063616e6e6f742071756575652061207769746864726177616c20696e636c7560648201527f64696e6720426561636f6e20436861696e2045544820616e64206f7468657220608482015265746f6b656e7360d01b60a482015260c40161075f565b633b9aca008a8a83818110612652576126526153b9565b9050602002013561266391906158a6565b156127015760405162461bcd60e51b815260206004820152606e602482015260008051602061598983398151915260448201527f2063616e6e6f742071756575652061207769746864726177616c206f6620426560648201527f61636f6e20436861696e2045544820666f7220616e206e6f6e2d77686f6c652060848201526d616d6f756e74206f66206777656960901b60a482015260c40161075f565b612757338f8f85818110612717576127176153b9565b905060200201358e8e85818110612730576127306153b9565b90506020020160208101906127459190614c3c565b8d8d8681811061085d5761085d6153b9565b15612763578160010191505b7fcf1c2370141bbd0a6d971beb0e3a2455f24d6e773ddc20ccc1c4e32f3dd9f9f733848e8e85818110612798576127986153b9565b90506020020160208101906127ad9190614c3c565b8d8d868181106127bf576127bf6153b9565b9050602002013560405161280494939291906001600160a01b0394851681526001600160601b0393909316602084015292166040820152606081019190915260800190565b60405180910390a16001016124af565b50604051631976849960e21b81523360048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906365da126490602401602060405180830381865afa15801561287c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128a09190615482565b90506128aa61485d565b600060405180604001604052808b6001600160a01b03168152602001866001600160601b03168152509050846001016001600160601b031660d06000336001600160a01b03166001600160a01b03168152602001908152602001600020819055506040518060c001604052808f8f80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505081526020018d8d808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250938552505033602084015250604082019390935263ffffffff431660608201526001600160a01b03851660809091015291506129c782611f61565b600081815260cf60205260409020805460ff1916600117905590508880156129fc575033600090815260ce6020526040902054155b15612a0a57612a0a3361330b565b604080513381526001600160601b03871660208201526001600160a01b038c811682840152851660608201526080810183905290517f32cf9fc97155f52860a59a99879a2e89c1e53f28126a9ab6a2ff29344299e6749181900360a00190a160016065559f9e505050505050505050505050505050565b612a89612d01565b6001600160a01b038116612aee5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161075f565b6114e3816132b9565b60985460019060029081161415612b205760405162461bcd60e51b815260040161075f906154e7565b60026065541415612b435760405162461bcd60e51b815260040161075f90615382565b6002606555612b55868686868661383a565b5050600160655550505050565b609760009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612bb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bd99190615482565b6001600160a01b0316336001600160a01b031614612c4c5760405162461bcd60e51b815260206004820152602a60248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526939903ab73830bab9b2b960b11b606482015260840161075f565b609854198119609854191614612cca5760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c6974790000000000000000606482015260840161075f565b609881905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c90602001610ba5565b6033546001600160a01b031633146119815760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161075f565b60006001600160a01b038516612dd95760405162461bcd60e51b815260206004820152603f60248201527f53747261746567794d616e616765722e5f72656d6f76655368617265733a206460448201527f65706f7369746f722063616e6e6f74206265207a65726f206164647265737300606482015260840161075f565b81612e4c5760405162461bcd60e51b815260206004820152603e60248201527f53747261746567794d616e616765722e5f72656d6f76655368617265733a207360448201527f68617265416d6f756e742073686f756c64206e6f74206265207a65726f210000606482015260840161075f565b6001600160a01b03808616600090815260cd602090815260408083209387168352929052205480831115612ede5760405162461bcd60e51b815260206004820152603360248201527f53747261746567794d616e616765722e5f72656d6f76655368617265733a20736044820152720d0c2e4ca82dadeeadce840e8dede40d0d2ced606b1b606482015260840161075f565b6001600160a01b03808716600090815260cd602090815260408083209388168352929052208382039081905590831415612f2757612f1d868686613f76565b6001915050612f2d565b60009150505b949350505050565b6001600160a01b038316600090815260d260205260409020548015612fb25780821115612f86576001600160a01b038416600090815260d26020526040812055612f7f818361576b565b9150612fb2565b612f90828261576b565b6001600160a01b03909416600090815260d26020526040902093909355505050565b604051630b9cf64f60e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631739ec9e90613002908790879087906004016153cf565b600060405180830381600087803b15801561301c57600080fd5b505af1158015613030573d6000803e3d6000fd5b5050505050505050565b6000806000613049858561425a565b91509150613056816142ca565b509392505050565b6001600160a01b038316600090815260d16020526040812054849060ff166131045760405162461bcd60e51b815260206004820152604d60248201527f53747261746567794d616e616765722e6f6e6c7953747261746567696573576860448201527f6974656c6973746564466f724465706f7369743a207374726174656779206e6f60648201526c1d081dda1a5d195b1a5cdd1959609a1b608482015260a40161075f565b6131196001600160a01b038516338786614485565b6040516311f9fbc960e21b81526001600160a01b038581166004830152602482018590528616906347e7ef24906044016020604051808303816000875af1158015613168573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061318c91906158c8565b9150613199868684613415565b604080516001600160a01b03888116825286811660208301528716818301526060810184905290517f7cfff908a4b583f36430b25d75964c458d8ede8a99bd61be750e97ee1b2f3a969181900360800190a150949350505050565b61c4e08111156132785760405162461bcd60e51b815260206004820152604360248201527f53747261746567794d616e616765722e7365745769746864726177616c44656c60448201527f61793a205f7769746864726177616c44656c6179426c6f636b7320746f6f20686064820152620d2ced60eb1b608482015260a40161075f565b60cc5460408051918252602082018390527f4ffb00400574147429ee377a5633386321e66d45d8b14676014b5fa393e61e9e910160405180910390a160cc55565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038116600090815260ce6020526040902054156133975760405162461bcd60e51b815260206004820152603a60248201527f53747261746567794d616e616765722e5f756e64656c65676174653a2064657060448201527f6f7369746f722068617320616374697665206465706f73697473000000000000606482015260840161075f565b6040516336a2fa1960e21b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063da8be86490602401600060405180830381600087803b1580156133fa57600080fd5b505af115801561340e573d6000803e3d6000fd5b5050505050565b6001600160a01b0383166134915760405162461bcd60e51b815260206004820152603c60248201527f53747261746567794d616e616765722e5f6164645368617265733a206465706f60448201527f7369746f722063616e6e6f74206265207a65726f206164647265737300000000606482015260840161075f565b806134fd5760405162461bcd60e51b815260206004820152603660248201527f53747261746567794d616e616765722e5f6164645368617265733a207368617260448201527565732073686f756c64206e6f74206265207a65726f2160501b606482015260840161075f565b6001600160a01b03808416600090815260cd602090815260408083209386168352929052205461360e576001600160a01b038316600090815260ce6020908152604090912054106135cf5760405162461bcd60e51b815260206004820152605060248201527f53747261746567794d616e616765722e5f6164645368617265733a206465706f60448201527f73697420776f756c6420657863656564204d41585f5354414b45525f5354524160648201526f0a88a8eb2be9892a6a8be988a9c8ea8960831b608482015260a40161075f565b6001600160a01b03838116600090815260ce602090815260408220805460018101825590835291200180546001600160a01b0319169184169190911790555b6001600160a01b03808416600090815260cd6020908152604080832093861683529290529081208054839290613645908490615782565b9091555050604051631452b9d760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906328a573ae9061369a908690869086906004016153cf565b600060405180830381600087803b1580156136b457600080fd5b505af11580156136c8573d6000803e3d6000fd5b50505050505050565b6097546001600160a01b03161580156136f257506001600160a01b03821615155b6137745760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a40161075f565b609881905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250609780546001600160a01b0319166001600160a01b0392909216919091179055565b60cb54604080516001600160a01b03928316815291831660208301527f4264275e593955ff9d6146a51a4525f6ddace2e81db9391abcc9d1ca48047d29910160405180910390a160cb80546001600160a01b0319166001600160a01b0392909216919091179055565b61384a60e0860160c08701614c3c565b6040516372c1cc1b60e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063e583983690602401602060405180830381865afa1580156138b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138d4919061530f565b156138f15760405162461bcd60e51b815260040161075f9061551e565b60006138ff6105bd8861567c565b600081815260cf602052604090205490915060ff166139805760405162461bcd60e51b8152602060048201526043602482015260008051602061596983398151915260448201527f746864726177616c3a207769746864726177616c206973206e6f742070656e64606482015262696e6760e81b608482015260a40161075f565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638105e0436139bf60e08a0160c08b01614c3c565b6139cf60c08b0160a08c016158e1565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015263ffffffff166024820152604481018790526064016020604051808303816000875af1158015613a27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a4b919061530f565b613ad15760405162461bcd60e51b8152602060048201526057602482015260008051602061596983398151915260448201527f746864726177616c3a207368617265732070656e64696e67207769746864726160648201527f77616c20617265207374696c6c20736c61736861626c65000000000000000000608482015260a40161075f565b60cc544390613ae660c08a0160a08b016158e1565b63ffffffff16613af69190615782565b111580613b4e575073beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0613b1d8880615633565b6000818110613b2e57613b2e6153b9565b9050602002016020810190613b439190614c3c565b6001600160a01b0316145b613bd45760405162461bcd60e51b8152602060048201526059602482015260008051602061596983398151915260448201527f746864726177616c3a207769746864726177616c44656c6179426c6f636b732060648201527f706572696f6420686173206e6f74207965742070617373656400000000000000608482015260a40161075f565b613be46080880160608901614c3c565b6001600160a01b0316336001600160a01b031614613c8c5760405162461bcd60e51b81526020600482015260646024820181905260008051602061596983398151915260448301527f746864726177616c3a206f6e6c79207370656369666965642077697468647261908201527f7765722063616e20636f6d706c65746520612071756575656420776974686472608482015263185dd85b60e21b60a482015260c40161075f565b600081815260cf60205260408120805460ff19169055613cac8880615633565b9150508315613e8f57613cbf8880615633565b87149050613d235760405162461bcd60e51b815260206004820152603f602482015260008051602061596983398151915260448201527f746864726177616c3a20696e707574206c656e677468206d69736d6174636800606482015260840161075f565b60005b81811015613e895773beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0613d4d8a80615633565b83818110613d5d57613d5d6153b9565b9050602002016020810190613d729190614c3c565b6001600160a01b03161415613da757613da2613d9460608b0160408c01614c3c565b336113c960208d018d615633565b613e81565b613db18980615633565b82818110613dc157613dc16153b9565b9050602002016020810190613dd69190614c3c565b6001600160a01b031663d9caed12338a8a85818110613df757613df76153b9565b9050602002016020810190613e0c9190614c3c565b613e1960208e018e615633565b86818110613e2957613e296153b9565b905060200201356040518463ffffffff1660e01b8152600401613e4e939291906153cf565b600060405180830381600087803b158015613e6857600080fd5b505af1158015613e7c573d6000803e3d6000fd5b505050505b600101613d26565b50613f00565b60005b81811015613efe57613ef633613ea88b80615633565b84818110613eb857613eb86153b9565b9050602002016020810190613ecd9190614c3c565b613eda60208d018d615633565b85818110613eea57613eea6153b9565b90506020020135613415565b600101613e92565b505b33613f1160608a0160408b01614c3c565b6001600160a01b03167fe7eb0ca11b83744ece3d78e9be01b913425fbae70c32ce27726d0ecde92ef8d2613f4b60a08c0160808d016158fc565b604080516001600160601b039092168252602082018790520160405180910390a35050505050505050565b6001600160a01b03838116600090815260ce6020526040902080549183169184908110613fa557613fa56153b9565b6000918252602090912001546001600160a01b03161415614066576001600160a01b038316600090815260ce602052604090208054613fe69060019061576b565b81548110613ff657613ff66153b9565b60009182526020808320909101546001600160a01b03868116845260ce9092526040909220805491909216919084908110614033576140336153b9565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555061420c565b6001600160a01b038316600090815260ce6020526040812054905b81811015614181576001600160a01b03858116600090815260ce60205260409020805491851691839081106140b8576140b86153b9565b6000918252602090912001546001600160a01b03161415614179576001600160a01b038516600090815260ce6020526040902080546140f99060019061576b565b81548110614109576141096153b9565b60009182526020808320909101546001600160a01b03888116845260ce9092526040909220805491909216919083908110614146576141466153b9565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550614181565b600101614081565b818114156142095760405162461bcd60e51b815260206004820152604960248201527f53747261746567794d616e616765722e5f72656d6f766553747261746567794660448201527f726f6d5374616b657253747261746567794c6973743a207374726174656779206064820152681b9bdd08199bdd5b9960ba1b608482015260a40161075f565b50505b6001600160a01b038316600090815260ce6020526040902080548061423357614233615917565b600082815260209020810160001990810180546001600160a01b0319169055019055505050565b6000808251604114156142915760208301516040840151606085015160001a614285878285856144dd565b945094505050506142c3565b8251604014156142bb57602083015160408401516142b08683836145ca565b9350935050506142c3565b506000905060025b9250929050565b60008160048111156142de576142de61592d565b14156142e75750565b60018160048111156142fb576142fb61592d565b14156143495760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161075f565b600281600481111561435d5761435d61592d565b14156143ab5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161075f565b60038160048111156143bf576143bf61592d565b14156144185760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161075f565b600481600481111561442c5761442c61592d565b14156114e35760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161075f565b61170f846323b872dd60e01b8585856040516024016144a6939291906153cf565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614603565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561451457506000905060036145c1565b8460ff16601b1415801561452c57508460ff16601c14155b1561453d57506000905060046145c1565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015614591573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166145ba576000600192509250506145c1565b9150600090505b94509492505050565b6000806001600160ff1b038316816145e760ff86901c601b615782565b90506145f5878288856144dd565b935093505050935093915050565b6000614658826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166146da9092919063ffffffff16565b8051909150156146d55780806020019051810190614676919061530f565b6146d55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161075f565b505050565b60606146e984846000856146f3565b90505b9392505050565b6060824710156147545760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161075f565b6001600160a01b0385163b6147ab5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161075f565b600080866001600160a01b031685876040516147c79190615943565b60006040518083038185875af1925050503d8060008114614804576040519150601f19603f3d011682016040523d82523d6000602084013e614809565b606091505b5091509150614819828286614824565b979650505050505050565b606083156148335750816146ec565b8251156148435782518084602001fd5b8160405162461bcd60e51b815260040161075f9190615955565b6040518060c00160405280606081526020016060815260200160006001600160a01b031681526020016148b5604051806040016040528060006001600160a01b0316815260200160006001600160601b031681525090565b815260006020820181905260409091015290565b6001600160a01b03811681146114e357600080fd5b80356148e9816148c9565b919050565b60008083601f84011261490057600080fd5b5081356001600160401b0381111561491757600080fd5b6020830191508360208260051b85010111156142c357600080fd5b60008060008060008060008060008060c08b8d03121561495157600080fd5b61495a8b6148de565b995061496860208c016148de565b985060408b01356001600160401b038082111561498457600080fd5b6149908e838f016148ee565b909a50985060608d01359150808211156149a957600080fd5b6149b58e838f016148ee565b909850965060808d01359150808211156149ce57600080fd5b6149da8e838f016148ee565b909650945060a08d01359150808211156149f357600080fd5b50614a008d828e016148ee565b915080935050809150509295989b9194979a5092959850565b600060208284031215614a2b57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715614a6a57614a6a614a32565b60405290565b604051601f8201601f191681016001600160401b0381118282101715614a9857614a98614a32565b604052919050565b60008060008060008060c08789031215614ab957600080fd5b8635614ac4816148c9565b9550602087810135614ad5816148c9565b9550604088013594506060880135614aec816148c9565b93506080880135925060a08801356001600160401b0380821115614b0f57600080fd5b818a0191508a601f830112614b2357600080fd5b813581811115614b3557614b35614a32565b614b47601f8201601f19168501614a70565b91508082528b84828501011115614b5d57600080fd5b80848401858401376000848284010152508093505050509295509295509295565b600060e08284031215614b9057600080fd5b50919050565b60008060008060008060808789031215614baf57600080fd5b8635614bba816148c9565b955060208701356001600160401b0380821115614bd657600080fd5b614be28a838b01614b7e565b96506040890135915080821115614bf857600080fd5b614c048a838b016148ee565b90965094506060890135915080821115614c1d57600080fd5b50614c2a89828a016148ee565b979a9699509497509295939492505050565b600060208284031215614c4e57600080fd5b81356146ec816148c9565b600060208284031215614c6b57600080fd5b813560ff811681146146ec57600080fd5b60008060208385031215614c8f57600080fd5b82356001600160401b03811115614ca557600080fd5b614cb1858286016148ee565b90969095509350505050565b600080600060608486031215614cd257600080fd5b8335614cdd816148c9565b95602085013595506040909401359392505050565b60008060408385031215614d0557600080fd5b8235614d10816148c9565b91506020830135614d20816148c9565b809150509250929050565b600081518084526020808501945080840160005b83811015614d645781516001600160a01b031687529582019590820190600101614d3f565b509495945050505050565b600081518084526020808501945080840160005b83811015614d6457815187529582019590820190600101614d83565b604081526000614db26040830185614d2b565b8281036020840152614dc48185614d6f565b95945050505050565b60008060408385031215614de057600080fd5b8235614deb816148c9565b946020939093013593505050565b600080600080600060a08688031215614e1157600080fd5b8535614e1c816148c9565b94506020860135614e2c816148c9565b93506040860135614e3c816148c9565b94979396509394606081013594506080013592915050565b6000806000806000806000806080898b031215614e7057600080fd5b88356001600160401b0380821115614e8757600080fd5b614e938c838d016148ee565b909a50985060208b0135915080821115614eac57600080fd5b614eb88c838d016148ee565b909850965060408b0135915080821115614ed157600080fd5b614edd8c838d016148ee565b909650945060608b0135915080821115614ef657600080fd5b50614f038b828c016148ee565b999c989b5096995094979396929594505050565b60006001600160401b03821115614f3057614f30614a32565b5060051b60200190565b600082601f830112614f4b57600080fd5b81356020614f60614f5b83614f17565b614a70565b82815260059290921b84018101918181019086841115614f7f57600080fd5b8286015b84811015614fa3578035614f96816148c9565b8352918301918301614f83565b509695505050505050565b600082601f830112614fbf57600080fd5b81356020614fcf614f5b83614f17565b82815260059290921b84018101918181019086841115614fee57600080fd5b8286015b84811015614fa35780358352918301918301614ff2565b80356001600160601b03811681146148e957600080fd5b60006040828403121561503257600080fd5b604051604081018181106001600160401b038211171561505457615054614a32565b6040529050808235615065816148c9565b815261507360208401615009565b60208201525092915050565b803563ffffffff811681146148e957600080fd5b600060e082840312156150a557600080fd5b6150ad614a48565b905081356001600160401b03808211156150c657600080fd5b6150d285838601614f3a565b835260208401359150808211156150e857600080fd5b506150f584828501614fae565b602083015250615107604083016148de565b60408201526151198360608401615020565b606082015261512a60a0830161507f565b608082015261513b60c083016148de565b60a082015292915050565b60006020828403121561515857600080fd5b81356001600160401b0381111561516e57600080fd5b612f2d84828501615093565b60008060006060848603121561518f57600080fd5b833561519a816148c9565b925060208401356151aa816148c9565b929592945050506040919091013590565b80151581146114e357600080fd5b60008060008060008060008060a0898b0312156151e557600080fd5b88356001600160401b03808211156151fc57600080fd5b6152088c838d016148ee565b909a50985060208b013591508082111561522157600080fd5b61522d8c838d016148ee565b909850965060408b013591508082111561524657600080fd5b506152538b828c016148ee565b9095509350506060890135615267816148c9565b91506080890135615277816151bb565b809150509295985092959890939650565b6000806000806000608086880312156152a057600080fd5b85356001600160401b03808211156152b757600080fd5b6152c389838a01614b7e565b965060208801359150808211156152d957600080fd5b506152e6888289016148ee565b909550935050604086013591506060860135615301816151bb565b809150509295509295909350565b60006020828403121561532157600080fd5b81516146ec816151bb565b60208082526036908201527f53747261746567794d616e616765722e6f6e6c7946726f7a656e3a207374616b60408201527532b9103430b9903737ba103132b2b710333937bd32b760511b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03868116825260606020808401829052908301869052600091879160808501845b8981101561544257843561542e816148c9565b84168252938201939082019060010161541b565b5085810360408701528681526001600160fb1b0387111561546257600080fd5b8660051b9350838883830137600093010191825250979650505050505050565b60006020828403121561549457600080fd5b81516146ec816148c9565b60208082526028908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526739903830bab9b2b960c11b606082015260800190565b60208082526019908201527f5061757361626c653a20696e6465782069732070617573656400000000000000604082015260600190565b60208082526054908201527f53747261746567794d616e616765722e6f6e6c794e6f7446726f7a656e3a207360408201527f74616b657220686173206265656e2066726f7a656e20616e64206d6179206265606082015273207375626a65637420746f20736c617368696e6760601b608082015260a00190565b60005b838110156155b357818101518382015260200161559b565b8381111561170f5750506000910152565b600081518084526155dc816020860160208601615598565b601f01601f19169290920160200192915050565b8281526040602082015260006146e960408301846155c4565b60006020828403121561561b57600080fd5b81516001600160e01b0319811681146146ec57600080fd5b6000808335601e1984360301811261564a57600080fd5b8301803591506001600160401b0382111561566457600080fd5b6020019150600581901b36038213156142c357600080fd5b60006156883683615093565b92915050565b60208082526044908201527f53747261746567794d616e616765722e6f6e6c7953747261746567795768697460408201527f656c69737465723a206e6f742074686520737472617465677957686974656c6960608201526339ba32b960e11b608082015260a00190565b6020808252603c908201527f53747261746567794d616e616765722e6f6e6c79456967656e506f644d616e6160408201527f6765723a206e6f742074686520656967656e506f644d616e6167657200000000606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008282101561577d5761577d615755565b500390565b6000821982111561579557615795615755565b500190565b6001600160a01b03841681526060602082018190526000906157be90830185614d2b565b82810360408401526157d08185614d6f565b9695505050505050565b6000823560de198336030181126157f057600080fd5b9190910192915050565b60006020828403121561580c57600080fd5b81356146ec816151bb565b600060001982141561582b5761582b615755565b5060010190565b60e08152600061584560e0830189614d2b565b82810360208401526158578189614d6f565b6001600160a01b0397881660408501528651881660608501526020909601516001600160601b03166080840152505063ffffffff9290921660a083015290921660c09092019190915292915050565b6000826158c357634e487b7160e01b600052601260045260246000fd5b500690565b6000602082840312156158da57600080fd5b5051919050565b6000602082840312156158f357600080fd5b6146ec8261507f565b60006020828403121561590e57600080fd5b6146ec82615009565b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b600082516157f0818460208701615598565b6020815260006146ec60208301846155c456fe53747261746567794d616e616765722e636f6d706c657465517565756564576953747261746567794d616e616765722e71756575655769746864726177616c3aa264697066735822122038ba17961d1fa89df4e28efeb318db0e555e245df3b7c90a630b631ab826b06064736f6c634300080c0033",
    "sourceMap": "1176:44306:72:-:0;;;5637:256;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;4620:24:73;;;;;4654:34;;;;;4698:18;;;;5821:22:72::1;:20;:22::i;:::-;-1:-1:-1::0;;5873:13:72::1;5853:33;::::0;-1:-1:-1;1176:44306:72;;5388:279:19;5456:13;;;;;;;5455:14;5447:66;;;;-1:-1:-1;;;5447:66:19;;1028:2:168;5447:66:19;;;1010:21:168;1067:2;1047:18;;;1040:30;1106:34;1086:18;;;1079:62;-1:-1:-1;;;1157:18:168;;;1150:37;1204:19;;5447:66:19;;;;;;;;5527:12;;5542:15;5527:12;;;:30;5523:138;;;5573:12;:30;;-1:-1:-1;;5573:30:19;5588:15;5573:30;;;;;;5622:28;;1376:36:168;;;5622:28:19;;1364:2:168;1349:18;5622:28:19;;;;;;;5523:138;5388:279::o;14:151:168:-;-1:-1:-1;;;;;109:31:168;;99:42;;89:70;;155:1;152;145:12;89:70;14:151;:::o;170:651::-;330:6;338;346;399:2;387:9;378:7;374:23;370:32;367:52;;;415:1;412;405:12;367:52;447:9;441:16;466:51;511:5;466:51;:::i;:::-;586:2;571:18;;565:25;536:5;;-1:-1:-1;599:53:168;565:25;599:53;:::i;:::-;723:2;708:18;;702:25;671:7;;-1:-1:-1;736:53:168;702:25;736:53;:::i;:::-;808:7;798:17;;;170:651;;;;;:::o;1234:184::-;1176:44306:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x608060405234801561001057600080fd5b50600436106102745760003560e01c80638b8aac3c11610151578063b5d8b5b8116100c3578063df5cf72311610087578063df5cf72314610627578063e7a050aa1461064e578063f123991e14610661578063f2fde38b14610674578063f3be65d314610687578063fabc1cbc1461069a57600080fd5b8063b5d8b5b8146105c2578063c3c6b3a9146105d5578063c6656702146105f8578063ca661c041461060b578063cbc2bd621461061457600080fd5b8063967fc0d211610115578063967fc0d21461053c5780639f00fa241461054f578063a6b63eb814610562578063a782d94514610575578063b134427114610588578063b43b514b146105af57600080fd5b80638b8aac3c146104be5780638da5cb5b146104e75780639104c319146104f857806392ab89bb1461051357806394f649dd1461051b57600080fd5b8063595c6a67116101ea578063663c1de4116101ae578063663c1de414610415578063715018a6146104385780637a7e0d92146104405780637ecebe001461046b578063886f11951461048b5780638b88b9151461049e57600080fd5b8063595c6a67146103ac5780635ac86ab7146103b45780635c975abb146103e75780635de08ff2146103ef57806363ecafb61461040257600080fd5b806343c090611161023c57806343c09061146102f75780634665bcda1461030a57806348825e94146103495780634d50f9a41461037057806350f73e7c14610383578063566310281461038c57600080fd5b806306f1f68414610279578063136439dd1461028e57806320606b70146102a157806332e89ace146102db5780633644e515146102ee575b600080fd5b61028c610287366004614932565b6106ad565b005b61028c61029c366004614a19565b610a52565b6102c87f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a86681565b6040519081526020015b60405180910390f35b6102c86102e9366004614aa0565b610bb0565b6102c860c95481565b61028c610305366004614b96565b6110f2565b6103317f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b0390911681526020016102d2565b6102c87f0a564d4cfe5cb0d4ee082aab2ca54b8c48e129485a8f7c77766ab5ef0c3566f181565b61028c61037e366004614a19565b6114d2565b6102c860cc5481565b6102c861039a366004614c3c565b60d06020526000908152604090205481565b61028c6114e6565b6103d76103c2366004614c59565b609854600160ff9092169190911b9081161490565b60405190151581526020016102d2565b6098546102c8565b61028c6103fd366004614c7c565b6115cc565b61028c610410366004614cbd565b611715565b6103d7610423366004614c3c565b60d16020526000908152604090205460ff1681565b61028c61196f565b6102c861044e366004614cf2565b60cd60209081526000928352604080842090915290825290205481565b6102c8610479366004614c3c565b60ca6020526000908152604090205481565b609754610331906001600160a01b031681565b6102c86104ac366004614c3c565b60d26020526000908152604090205481565b6102c86104cc366004614c3c565b6001600160a01b0316600090815260ce602052604090205490565b6033546001600160a01b0316610331565b61033173beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac081565b61028c611983565b61052e610529366004614c3c565b61198c565b6040516102d2929190614d9f565b60cb54610331906001600160a01b031681565b61028c61055d366004614dcd565b611b0b565b61028c610570366004614df9565b611c79565b61028c610583366004614e54565b611e63565b6103317f000000000000000000000000000000000000000000000000000000000000000081565b6102c86105bd366004615146565b611f61565b61028c6105d0366004614c7c565b611fae565b6103d76105e3366004614a19565b60cf6020526000908152604090205460ff1681565b61028c610606366004614c3c565b6120f2565b6102c861c4e081565b610331610622366004614dcd565b612103565b6103317f000000000000000000000000000000000000000000000000000000000000000081565b6102c861065c36600461517a565b61213b565b6102c861066f3660046151c9565b612251565b61028c610682366004614c3c565b612a81565b61028c610695366004615288565b612af7565b61028c6106a8366004614a19565b612b62565b6106b5612d01565b6040516372c1cc1b60e11b81526001600160a01b03808c1660048301528b917f00000000000000000000000000000000000000000000000000000000000000009091169063e583983690602401602060405180830381865afa15801561071f573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610743919061530f565b6107685760405162461bcd60e51b815260040161075f9061532c565b60405180910390fd5b6002606554141561078b5760405162461bcd60e51b815260040161075f90615382565b60026065558588146107fa5760405162461bcd60e51b815260206004820152603260248201527f53747261746567794d616e616765722e736c6173685368617265733a20696e706044820152710eae840d8cadccee8d040dad2e6dac2e8c6d60731b606482015260840161075f565b600088815b818110156109b7576108698e89898681811061081d5761081d6153b9565b905060200201358e8e85818110610836576108366153b9565b905060200201602081019061084b9190614c3c565b89898681811061085d5761085d6153b9565b90506020020135612d5b565b15610875578260010192505b73beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac08c8c8381811061089c5761089c6153b9565b90506020020160208101906108b19190614c3c565b6001600160a01b031614156108e8576108e38e8e8888858181106108d7576108d76153b9565b90506020020135612f35565b6109af565b8b8b828181106108fa576108fa6153b9565b905060200201602081019061090f9190614c3c565b6001600160a01b031663d9caed128e8c8c85818110610930576109306153b9565b90506020020160208101906109459190614c3c565b898986818110610957576109576153b9565b905060200201356040518463ffffffff1660e01b815260040161097c939291906153cf565b600060405180830381600087803b15801561099657600080fd5b505af11580156109aa573d6000803e3d6000fd5b505050505b6001016107ff565b507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316635820491c8e8d8d89896040518663ffffffff1660e01b8152600401610a0c9594939291906153f3565b600060405180830381600087803b158015610a2657600080fd5b505af1158015610a3a573d6000803e3d6000fd5b50506001606555505050505050505050505050505050565b609760009054906101000a90046001600160a01b03166001600160a01b0316639fd0506d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015610aa5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ac99190615482565b6001600160a01b0316336001600160a01b031614610af95760405162461bcd60e51b815260040161075f9061549f565b60985481811614610b725760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e70617573653a20696e76616c696420617474656d70742060448201527f746f20756e70617573652066756e6374696f6e616c6974790000000000000000606482015260840161075f565b609881905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d906020015b60405180910390a250565b609854600090819060019081161415610bdb5760405162461bcd60e51b815260040161075f906154e7565b6040516372c1cc1b60e11b81526001600160a01b03808716600483015286917f00000000000000000000000000000000000000000000000000000000000000009091169063e583983690602401602060405180830381865afa158015610c45573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c69919061530f565b15610c865760405162461bcd60e51b815260040161075f9061551e565b60026065541415610ca95760405162461bcd60e51b815260040161075f90615382565b600260655542851015610d305760405162461bcd60e51b815260206004820152604360248201527f53747261746567794d616e616765722e6465706f736974496e746f537472617460448201527f656779576974685369676e61747572653a207369676e617475726520657870696064820152621c995960ea1b608482015260a40161075f565b6001600160a01b03868116600090815260ca602090815260408083205481517f0a564d4cfe5cb0d4ee082aab2ca54b8c48e129485a8f7c77766ab5ef0c3566f1938101939093528d851691830191909152928b166060820152608081018a905260a0810183905260c0810188905260e00160408051601f1981840301815291815281516020928301206001600160a01b038b16600090815260ca9093529082206001850190559150467f000000000000000000000000000000000000000000000000000000000000000014610ec85750604080518082018252600a81526922b4b3b2b72630bcb2b960b11b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea81840152466060820152306080808301919091528351808303909101815260a08201845280519083012061190160f01b60c083015260c282015260e2808201859052835180830390910181526101029091019092528151910120610f04565b60c95460405161190160f01b60208201526022810191909152604281018390526062016040516020818303038152906040528051906020012090505b6001600160a01b0389163b1561102d57604051630b135d3f60e11b808252906001600160a01b038b1690631626ba7e90610f449085908c906004016155f0565b602060405180830381865afa158015610f61573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610f859190615609565b6001600160e01b031916146110285760405162461bcd60e51b815260206004820152605760248201527f53747261746567794d616e616765722e6465706f736974496e746f537472617460448201527f656779576974685369676e61747572653a2045524331323731207369676e617460648201527f75726520766572696669636174696f6e206661696c6564000000000000000000608482015260a40161075f565b6110d1565b886001600160a01b0316611041828961303a565b6001600160a01b0316146110d15760405162461bcd60e51b815260206004820152604b60248201527f53747261746567794d616e616765722e6465706f736974496e746f537472617460448201527f656779576974685369676e61747572653a207369676e6174757265206e6f742060648201526a333937b69039ba30b5b2b960a91b608482015260a40161075f565b6110dd898d8d8d61305e565b60016065559c9b505050505050505050505050565b6110fa612d01565b61110a60e0860160c08701614c3c565b6040516372c1cc1b60e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063e583983690602401602060405180830381865afa158015611170573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611194919061530f565b6111b05760405162461bcd60e51b815260040161075f9061532c565b600260655414156111d35760405162461bcd60e51b815260040161075f90615382565b60026065556111e28680615633565b851490506112585760405162461bcd60e51b815260206004820152603c60248201527f53747261746567794d616e616765722e736c617368517565756564576974686460448201527f726177616c3a20696e707574206c656e677468206d69736d6174636800000000606482015260840161075f565b60006112666105bd8861567c565b600081815260cf602052604090205490915060ff166112ef576040805162461bcd60e51b81526020600482015260248101919091527f53747261746567794d616e616765722e736c617368517565756564576974686460448201527f726177616c3a207769746864726177616c206973206e6f742070656e64696e67606482015260840161075f565b600081815260cf60205260408120805460ff19169055806113108980615633565b9050905060005b818110156114c057858310801561134557508087878581811061133c5761133c6153b9565b90506020020135145b1561135557826001019250611317565b73beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac06113748b80615633565b83818110611384576113846153b9565b90506020020160208101906113999190614c3c565b6001600160a01b031614156113de576113d96113bb60608c0160408d01614c3c565b8c6113c960208e018e615633565b858181106108d7576108d76153b9565b6114b8565b6113e88a80615633565b828181106113f8576113f86153b9565b905060200201602081019061140d9190614c3c565b6001600160a01b031663d9caed128c8b8b8581811061142e5761142e6153b9565b90506020020160208101906114439190614c3c565b61145060208f018f615633565b86818110611460576114606153b9565b905060200201356040518463ffffffff1660e01b8152600401611485939291906153cf565b600060405180830381600087803b15801561149f57600080fd5b505af11580156114b3573d6000803e3d6000fd5b505050505b600101611317565b50506001606555505050505050505050565b6114da612d01565b6114e3816131f4565b50565b609760009054906101000a90046001600160a01b03166001600160a01b0316639fd0506d6040518163ffffffff1660e01b8152600401602060405180830381865afa158015611539573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061155d9190615482565b6001600160a01b0316336001600160a01b03161461158d5760405162461bcd60e51b815260040161075f9061549f565b600019609881905560405190815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a2565b60cb546001600160a01b031633146115f65760405162461bcd60e51b815260040161075f9061568e565b8060005b8181101561170f5760d16000858584818110611618576116186153b9565b905060200201602081019061162d9190614c3c565b6001600160a01b0316815260208101919091526040016000205460ff1661170757600160d16000868685818110611666576116666153b9565b905060200201602081019061167b9190614c3c565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790557f0c35b17d91c96eb2751cd456e1252f42a386e524ef9ff26ecc9950859fdc04fe8484838181106116d6576116d66153b9565b90506020020160208101906116eb9190614c3c565b6040516001600160a01b03909116815260200160405180910390a15b6001016115fa565b50505050565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316331461175d5760405162461bcd60e51b815260040161075f906156f8565b600260655414156117805760405162461bcd60e51b815260040161075f90615382565b60026065556001600160a01b038316600090815260cd6020908152604080832073beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac08452909152902054808211156118125760006117d1828461576b565b6001600160a01b038616600090815260d260205260408120805492935083929091906117fe908490615782565b9091555061180e9050818461576b565b9250505b811561183a57611838848473beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac085612d5b565b505b6040805160018082528183019092526000916020808301908036833701905050905073beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac081600081518110611884576118846153b9565b6001600160a01b03929092166020928302919091019091015260408051600180825281830190925260009181602001602082028036833701905050905083816000815181106118d5576118d56153b9565b6020908102919091010152604051631608124760e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635820491c906119309089908690869060040161579a565b600060405180830381600087803b15801561194a57600080fd5b505af115801561195e573d6000803e3d6000fd5b505060016065555050505050505050565b611977612d01565b61198160006132b9565b565b6119813361330b565b6001600160a01b038116600090815260ce6020526040812054606091829190816001600160401b038111156119c3576119c3614a32565b6040519080825280602002602001820160405280156119ec578160200160208202803683370190505b50905060005b82811015611a7d576001600160a01b038616600090815260cd6020908152604080832060ce9092528220805491929184908110611a3157611a316153b9565b60009182526020808320909101546001600160a01b031683528201929092526040019020548251839083908110611a6a57611a6a6153b9565b60209081029190910101526001016119f2565b5060ce6000866001600160a01b03166001600160a01b031681526020019081526020016000208181805480602002602001604051908101604052809291908181526020018280548015611af957602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311611adb575b50505050509150935093505050915091565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163314611b535760405162461bcd60e51b815260040161075f906156f8565b60985460009060019081161415611b7c5760405162461bcd60e51b815260040161075f906154e7565b6040516372c1cc1b60e11b81526001600160a01b03808516600483015284917f00000000000000000000000000000000000000000000000000000000000000009091169063e583983690602401602060405180830381865afa158015611be6573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190611c0a919061530f565b15611c275760405162461bcd60e51b815260040161075f9061551e565b60026065541415611c4a5760405162461bcd60e51b815260040161075f90615382565b6002606555611c6e8473beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac085613415565b505060016065555050565b600054610100900460ff1615808015611c995750600054600160ff909116105b80611cb35750303b158015611cb3575060005460ff166001145b611d165760405162461bcd60e51b815260206004820152602e60248201527f496e697469616c697a61626c653a20636f6e747261637420697320616c72656160448201526d191e481a5b9a5d1a585b1a5e995960921b606482015260840161075f565b6000805460ff191660011790558015611d39576000805461ff0019166101001790555b604080518082018252600a81526922b4b3b2b72630bcb2b960b11b60209182015281517f8cad95687ba82c2ce50e74f7b754645e5117c3a5bec8151c0726d5857980a866818301527f71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea818401527f00000000000000000000000000000000000000000000000000000000000000006060820152306080808301919091528351808303909101815260a0909101909252815191012060c955611dfa84846136d1565b611e03866132b9565b611e0c856137d1565b611e15826131f4565b8015611e5b576000805461ff0019169055604051600181527f7f26b83ff96e1f2b6a682f133852f6798a09c465da95921460cefb38474024989060200160405180910390a15b505050505050565b60985460019060029081161415611e8c5760405162461bcd60e51b815260040161075f906154e7565b60026065541415611eaf5760405162461bcd60e51b815260040161075f90615382565b600260655560005b8881101561195e57611f4f8a8a83818110611ed457611ed46153b9565b9050602002810190611ee691906157da565b898984818110611ef857611ef86153b9565b9050602002810190611f0a9190615633565b898986818110611f1c57611f1c6153b9565b90506020020135888887818110611f3557611f356153b9565b9050602002016020810190611f4a91906157fa565b61383a565b80611f5981615817565b915050611eb7565b80516020808301516040808501516060860151608087015160a08801519351600097611f91979096959101615832565b604051602081830303815290604052805190602001209050919050565b60cb546001600160a01b03163314611fd85760405162461bcd60e51b815260040161075f9061568e565b8060005b8181101561170f5760d16000858584818110611ffa57611ffa6153b9565b905060200201602081019061200f9190614c3c565b6001600160a01b0316815260208101919091526040016000205460ff16156120ea57600060d16000868685818110612049576120496153b9565b905060200201602081019061205e9190614c3c565b6001600160a01b031681526020810191909152604001600020805460ff19169115159190911790557f4074413b4b443e4e58019f2855a8765113358c7c72e39509c6af45fc0f5ba0308484838181106120b9576120b96153b9565b90506020020160208101906120ce9190614c3c565b6040516001600160a01b03909116815260200160405180910390a15b600101611fdc565b6120fa612d01565b6114e3816137d1565b60ce602052816000526040600020818154811061211f57600080fd5b6000918252602090912001546001600160a01b03169150829050565b6098546000908190600190811614156121665760405162461bcd60e51b815260040161075f906154e7565b6040516372c1cc1b60e11b81523360048201819052907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e583983690602401602060405180830381865afa1580156121cd573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906121f1919061530f565b1561220e5760405162461bcd60e51b815260040161075f9061551e565b600260655414156122315760405162461bcd60e51b815260040161075f90615382565b60026065556122423387878761305e565b60016065559695505050505050565b6098546000906001906002908116141561227d5760405162461bcd60e51b815260040161075f906154e7565b6040516372c1cc1b60e11b81523360048201819052907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03169063e583983690602401602060405180830381865afa1580156122e4573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612308919061530f565b156123255760405162461bcd60e51b815260040161075f9061551e565b600260655414156123485760405162461bcd60e51b815260040161075f90615382565b60026065558786146123a95760405162461bcd60e51b81526020600482015260366024820152600080516020615989833981519152604482015275040d2dce0eae840d8cadccee8d040dad2e6dac2e8c6d60531b606482015260840161075f565b6001600160a01b038516612415576040805162461bcd60e51b815260206004820152602481019190915260008051602061598983398151915260448201527f2063616e6e6f7420776974686472617720746f207a65726f2061646472657373606482015260840161075f565b604051631608124760e21b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690635820491c906124699033908d908d908d908d906004016153f3565b600060405180830381600087803b15801561248357600080fd5b505af1158015612497573d6000803e3d6000fd5b505033600090815260d0602052604081205492509050805b8a8110156128145773beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac08c8c838181106124de576124de6153b9565b90506020020160208101906124f39190614c3c565b6001600160a01b03161415612701576001600160a01b03881633146125a25760405162461bcd60e51b8152602060048201526065602482015260008051602061598983398151915260448201527f2063616e6e6f742071756575652061207769746864726177616c206f6620426560648201527f61636f6e20436861696e2045544820746f206120646966666572656e74206164608482015264647265737360d81b60a482015260c40161075f565b60018b1461263b5760405162461bcd60e51b8152602060048201526066602482015260008051602061598983398151915260448201527f2063616e6e6f742071756575652061207769746864726177616c20696e636c7560648201527f64696e6720426561636f6e20436861696e2045544820616e64206f7468657220608482015265746f6b656e7360d01b60a482015260c40161075f565b633b9aca008a8a83818110612652576126526153b9565b9050602002013561266391906158a6565b156127015760405162461bcd60e51b815260206004820152606e602482015260008051602061598983398151915260448201527f2063616e6e6f742071756575652061207769746864726177616c206f6620426560648201527f61636f6e20436861696e2045544820666f7220616e206e6f6e2d77686f6c652060848201526d616d6f756e74206f66206777656960901b60a482015260c40161075f565b612757338f8f85818110612717576127176153b9565b905060200201358e8e85818110612730576127306153b9565b90506020020160208101906127459190614c3c565b8d8d8681811061085d5761085d6153b9565b15612763578160010191505b7fcf1c2370141bbd0a6d971beb0e3a2455f24d6e773ddc20ccc1c4e32f3dd9f9f733848e8e85818110612798576127986153b9565b90506020020160208101906127ad9190614c3c565b8d8d868181106127bf576127bf6153b9565b9050602002013560405161280494939291906001600160a01b0394851681526001600160601b0393909316602084015292166040820152606081019190915260800190565b60405180910390a16001016124af565b50604051631976849960e21b81523360048201526000907f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316906365da126490602401602060405180830381865afa15801561287c573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906128a09190615482565b90506128aa61485d565b600060405180604001604052808b6001600160a01b03168152602001866001600160601b03168152509050846001016001600160601b031660d06000336001600160a01b03166001600160a01b03168152602001908152602001600020819055506040518060c001604052808f8f80806020026020016040519081016040528093929190818152602001838360200280828437600081840152601f19601f8201169050808301925050505050505081526020018d8d808060200260200160405190810160405280939291908181526020018383602002808284376000920182905250938552505033602084015250604082019390935263ffffffff431660608201526001600160a01b03851660809091015291506129c782611f61565b600081815260cf60205260409020805460ff1916600117905590508880156129fc575033600090815260ce6020526040902054155b15612a0a57612a0a3361330b565b604080513381526001600160601b03871660208201526001600160a01b038c811682840152851660608201526080810183905290517f32cf9fc97155f52860a59a99879a2e89c1e53f28126a9ab6a2ff29344299e6749181900360a00190a160016065559f9e505050505050505050505050505050565b612a89612d01565b6001600160a01b038116612aee5760405162461bcd60e51b815260206004820152602660248201527f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160448201526564647265737360d01b606482015260840161075f565b6114e3816132b9565b60985460019060029081161415612b205760405162461bcd60e51b815260040161075f906154e7565b60026065541415612b435760405162461bcd60e51b815260040161075f90615382565b6002606555612b55868686868661383a565b5050600160655550505050565b609760009054906101000a90046001600160a01b03166001600160a01b031663eab66d7a6040518163ffffffff1660e01b8152600401602060405180830381865afa158015612bb5573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190612bd99190615482565b6001600160a01b0316336001600160a01b031614612c4c5760405162461bcd60e51b815260206004820152602a60248201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160448201526939903ab73830bab9b2b960b11b606482015260840161075f565b609854198119609854191614612cca5760405162461bcd60e51b815260206004820152603860248201527f5061757361626c652e756e70617573653a20696e76616c696420617474656d7060448201527f7420746f2070617573652066756e6374696f6e616c6974790000000000000000606482015260840161075f565b609881905560405181815233907f3582d1828e26bf56bd801502bc021ac0bc8afb57c826e4986b45593c8fad389c90602001610ba5565b6033546001600160a01b031633146119815760405162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015260640161075f565b60006001600160a01b038516612dd95760405162461bcd60e51b815260206004820152603f60248201527f53747261746567794d616e616765722e5f72656d6f76655368617265733a206460448201527f65706f7369746f722063616e6e6f74206265207a65726f206164647265737300606482015260840161075f565b81612e4c5760405162461bcd60e51b815260206004820152603e60248201527f53747261746567794d616e616765722e5f72656d6f76655368617265733a207360448201527f68617265416d6f756e742073686f756c64206e6f74206265207a65726f210000606482015260840161075f565b6001600160a01b03808616600090815260cd602090815260408083209387168352929052205480831115612ede5760405162461bcd60e51b815260206004820152603360248201527f53747261746567794d616e616765722e5f72656d6f76655368617265733a20736044820152720d0c2e4ca82dadeeadce840e8dede40d0d2ced606b1b606482015260840161075f565b6001600160a01b03808716600090815260cd602090815260408083209388168352929052208382039081905590831415612f2757612f1d868686613f76565b6001915050612f2d565b60009150505b949350505050565b6001600160a01b038316600090815260d260205260409020548015612fb25780821115612f86576001600160a01b038416600090815260d26020526040812055612f7f818361576b565b9150612fb2565b612f90828261576b565b6001600160a01b03909416600090815260d26020526040902093909355505050565b604051630b9cf64f60e11b81526001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690631739ec9e90613002908790879087906004016153cf565b600060405180830381600087803b15801561301c57600080fd5b505af1158015613030573d6000803e3d6000fd5b5050505050505050565b6000806000613049858561425a565b91509150613056816142ca565b509392505050565b6001600160a01b038316600090815260d16020526040812054849060ff166131045760405162461bcd60e51b815260206004820152604d60248201527f53747261746567794d616e616765722e6f6e6c7953747261746567696573576860448201527f6974656c6973746564466f724465706f7369743a207374726174656779206e6f60648201526c1d081dda1a5d195b1a5cdd1959609a1b608482015260a40161075f565b6131196001600160a01b038516338786614485565b6040516311f9fbc960e21b81526001600160a01b038581166004830152602482018590528616906347e7ef24906044016020604051808303816000875af1158015613168573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061318c91906158c8565b9150613199868684613415565b604080516001600160a01b03888116825286811660208301528716818301526060810184905290517f7cfff908a4b583f36430b25d75964c458d8ede8a99bd61be750e97ee1b2f3a969181900360800190a150949350505050565b61c4e08111156132785760405162461bcd60e51b815260206004820152604360248201527f53747261746567794d616e616765722e7365745769746864726177616c44656c60448201527f61793a205f7769746864726177616c44656c6179426c6f636b7320746f6f20686064820152620d2ced60eb1b608482015260a40161075f565b60cc5460408051918252602082018390527f4ffb00400574147429ee377a5633386321e66d45d8b14676014b5fa393e61e9e910160405180910390a160cc55565b603380546001600160a01b038381166001600160a01b0319831681179093556040519116919082907f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e090600090a35050565b6001600160a01b038116600090815260ce6020526040902054156133975760405162461bcd60e51b815260206004820152603a60248201527f53747261746567794d616e616765722e5f756e64656c65676174653a2064657060448201527f6f7369746f722068617320616374697665206465706f73697473000000000000606482015260840161075f565b6040516336a2fa1960e21b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063da8be86490602401600060405180830381600087803b1580156133fa57600080fd5b505af115801561340e573d6000803e3d6000fd5b5050505050565b6001600160a01b0383166134915760405162461bcd60e51b815260206004820152603c60248201527f53747261746567794d616e616765722e5f6164645368617265733a206465706f60448201527f7369746f722063616e6e6f74206265207a65726f206164647265737300000000606482015260840161075f565b806134fd5760405162461bcd60e51b815260206004820152603660248201527f53747261746567794d616e616765722e5f6164645368617265733a207368617260448201527565732073686f756c64206e6f74206265207a65726f2160501b606482015260840161075f565b6001600160a01b03808416600090815260cd602090815260408083209386168352929052205461360e576001600160a01b038316600090815260ce6020908152604090912054106135cf5760405162461bcd60e51b815260206004820152605060248201527f53747261746567794d616e616765722e5f6164645368617265733a206465706f60448201527f73697420776f756c6420657863656564204d41585f5354414b45525f5354524160648201526f0a88a8eb2be9892a6a8be988a9c8ea8960831b608482015260a40161075f565b6001600160a01b03838116600090815260ce602090815260408220805460018101825590835291200180546001600160a01b0319169184169190911790555b6001600160a01b03808416600090815260cd6020908152604080832093861683529290529081208054839290613645908490615782565b9091555050604051631452b9d760e11b81526001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016906328a573ae9061369a908690869086906004016153cf565b600060405180830381600087803b1580156136b457600080fd5b505af11580156136c8573d6000803e3d6000fd5b50505050505050565b6097546001600160a01b03161580156136f257506001600160a01b03821615155b6137745760405162461bcd60e51b815260206004820152604760248201527f5061757361626c652e5f696e697469616c697a655061757365723a205f696e6960448201527f7469616c697a6550617573657228292063616e206f6e6c792062652063616c6c6064820152666564206f6e636560c81b608482015260a40161075f565b609881905560405181815233907fab40a374bc51de372200a8bc981af8c9ecdc08dfdaef0bb6e09f88f3c616ef3d9060200160405180910390a250609780546001600160a01b0319166001600160a01b0392909216919091179055565b60cb54604080516001600160a01b03928316815291831660208301527f4264275e593955ff9d6146a51a4525f6ddace2e81db9391abcc9d1ca48047d29910160405180910390a160cb80546001600160a01b0319166001600160a01b0392909216919091179055565b61384a60e0860160c08701614c3c565b6040516372c1cc1b60e11b81526001600160a01b0382811660048301527f0000000000000000000000000000000000000000000000000000000000000000169063e583983690602401602060405180830381865afa1580156138b0573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906138d4919061530f565b156138f15760405162461bcd60e51b815260040161075f9061551e565b60006138ff6105bd8861567c565b600081815260cf602052604090205490915060ff166139805760405162461bcd60e51b8152602060048201526043602482015260008051602061596983398151915260448201527f746864726177616c3a207769746864726177616c206973206e6f742070656e64606482015262696e6760e81b608482015260a40161075f565b6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016638105e0436139bf60e08a0160c08b01614c3c565b6139cf60c08b0160a08c016158e1565b6040516001600160e01b031960e085901b1681526001600160a01b03909216600483015263ffffffff166024820152604481018790526064016020604051808303816000875af1158015613a27573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190613a4b919061530f565b613ad15760405162461bcd60e51b8152602060048201526057602482015260008051602061596983398151915260448201527f746864726177616c3a207368617265732070656e64696e67207769746864726160648201527f77616c20617265207374696c6c20736c61736861626c65000000000000000000608482015260a40161075f565b60cc544390613ae660c08a0160a08b016158e1565b63ffffffff16613af69190615782565b111580613b4e575073beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0613b1d8880615633565b6000818110613b2e57613b2e6153b9565b9050602002016020810190613b439190614c3c565b6001600160a01b0316145b613bd45760405162461bcd60e51b8152602060048201526059602482015260008051602061596983398151915260448201527f746864726177616c3a207769746864726177616c44656c6179426c6f636b732060648201527f706572696f6420686173206e6f74207965742070617373656400000000000000608482015260a40161075f565b613be46080880160608901614c3c565b6001600160a01b0316336001600160a01b031614613c8c5760405162461bcd60e51b81526020600482015260646024820181905260008051602061596983398151915260448301527f746864726177616c3a206f6e6c79207370656369666965642077697468647261908201527f7765722063616e20636f6d706c65746520612071756575656420776974686472608482015263185dd85b60e21b60a482015260c40161075f565b600081815260cf60205260408120805460ff19169055613cac8880615633565b9150508315613e8f57613cbf8880615633565b87149050613d235760405162461bcd60e51b815260206004820152603f602482015260008051602061596983398151915260448201527f746864726177616c3a20696e707574206c656e677468206d69736d6174636800606482015260840161075f565b60005b81811015613e895773beac0eeeeeeeeeeeeeeeeeeeeeeeeeeeeeebeac0613d4d8a80615633565b83818110613d5d57613d5d6153b9565b9050602002016020810190613d729190614c3c565b6001600160a01b03161415613da757613da2613d9460608b0160408c01614c3c565b336113c960208d018d615633565b613e81565b613db18980615633565b82818110613dc157613dc16153b9565b9050602002016020810190613dd69190614c3c565b6001600160a01b031663d9caed12338a8a85818110613df757613df76153b9565b9050602002016020810190613e0c9190614c3c565b613e1960208e018e615633565b86818110613e2957613e296153b9565b905060200201356040518463ffffffff1660e01b8152600401613e4e939291906153cf565b600060405180830381600087803b158015613e6857600080fd5b505af1158015613e7c573d6000803e3d6000fd5b505050505b600101613d26565b50613f00565b60005b81811015613efe57613ef633613ea88b80615633565b84818110613eb857613eb86153b9565b9050602002016020810190613ecd9190614c3c565b613eda60208d018d615633565b85818110613eea57613eea6153b9565b90506020020135613415565b600101613e92565b505b33613f1160608a0160408b01614c3c565b6001600160a01b03167fe7eb0ca11b83744ece3d78e9be01b913425fbae70c32ce27726d0ecde92ef8d2613f4b60a08c0160808d016158fc565b604080516001600160601b039092168252602082018790520160405180910390a35050505050505050565b6001600160a01b03838116600090815260ce6020526040902080549183169184908110613fa557613fa56153b9565b6000918252602090912001546001600160a01b03161415614066576001600160a01b038316600090815260ce602052604090208054613fe69060019061576b565b81548110613ff657613ff66153b9565b60009182526020808320909101546001600160a01b03868116845260ce9092526040909220805491909216919084908110614033576140336153b9565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b0316021790555061420c565b6001600160a01b038316600090815260ce6020526040812054905b81811015614181576001600160a01b03858116600090815260ce60205260409020805491851691839081106140b8576140b86153b9565b6000918252602090912001546001600160a01b03161415614179576001600160a01b038516600090815260ce6020526040902080546140f99060019061576b565b81548110614109576141096153b9565b60009182526020808320909101546001600160a01b03888116845260ce9092526040909220805491909216919083908110614146576141466153b9565b9060005260206000200160006101000a8154816001600160a01b0302191690836001600160a01b03160217905550614181565b600101614081565b818114156142095760405162461bcd60e51b815260206004820152604960248201527f53747261746567794d616e616765722e5f72656d6f766553747261746567794660448201527f726f6d5374616b657253747261746567794c6973743a207374726174656779206064820152681b9bdd08199bdd5b9960ba1b608482015260a40161075f565b50505b6001600160a01b038316600090815260ce6020526040902080548061423357614233615917565b600082815260209020810160001990810180546001600160a01b0319169055019055505050565b6000808251604114156142915760208301516040840151606085015160001a614285878285856144dd565b945094505050506142c3565b8251604014156142bb57602083015160408401516142b08683836145ca565b9350935050506142c3565b506000905060025b9250929050565b60008160048111156142de576142de61592d565b14156142e75750565b60018160048111156142fb576142fb61592d565b14156143495760405162461bcd60e51b815260206004820152601860248201527f45434453413a20696e76616c6964207369676e61747572650000000000000000604482015260640161075f565b600281600481111561435d5761435d61592d565b14156143ab5760405162461bcd60e51b815260206004820152601f60248201527f45434453413a20696e76616c6964207369676e6174757265206c656e67746800604482015260640161075f565b60038160048111156143bf576143bf61592d565b14156144185760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202773272076616c604482015261756560f01b606482015260840161075f565b600481600481111561442c5761442c61592d565b14156114e35760405162461bcd60e51b815260206004820152602260248201527f45434453413a20696e76616c6964207369676e6174757265202776272076616c604482015261756560f01b606482015260840161075f565b61170f846323b872dd60e01b8585856040516024016144a6939291906153cf565b60408051601f198184030181529190526020810180516001600160e01b03166001600160e01b031990931692909217909152614603565b6000807f7fffffffffffffffffffffffffffffff5d576e7357a4501ddfe92f46681b20a083111561451457506000905060036145c1565b8460ff16601b1415801561452c57508460ff16601c14155b1561453d57506000905060046145c1565b6040805160008082526020820180845289905260ff881692820192909252606081018690526080810185905260019060a0016020604051602081039080840390855afa158015614591573d6000803e3d6000fd5b5050604051601f1901519150506001600160a01b0381166145ba576000600192509250506145c1565b9150600090505b94509492505050565b6000806001600160ff1b038316816145e760ff86901c601b615782565b90506145f5878288856144dd565b935093505050935093915050565b6000614658826040518060400160405280602081526020017f5361666545524332303a206c6f772d6c6576656c2063616c6c206661696c6564815250856001600160a01b03166146da9092919063ffffffff16565b8051909150156146d55780806020019051810190614676919061530f565b6146d55760405162461bcd60e51b815260206004820152602a60248201527f5361666545524332303a204552433230206f7065726174696f6e20646964206e6044820152691bdd081cdd58d8d9595960b21b606482015260840161075f565b505050565b60606146e984846000856146f3565b90505b9392505050565b6060824710156147545760405162461bcd60e51b815260206004820152602660248201527f416464726573733a20696e73756666696369656e742062616c616e636520666f6044820152651c8818d85b1b60d21b606482015260840161075f565b6001600160a01b0385163b6147ab5760405162461bcd60e51b815260206004820152601d60248201527f416464726573733a2063616c6c20746f206e6f6e2d636f6e7472616374000000604482015260640161075f565b600080866001600160a01b031685876040516147c79190615943565b60006040518083038185875af1925050503d8060008114614804576040519150601f19603f3d011682016040523d82523d6000602084013e614809565b606091505b5091509150614819828286614824565b979650505050505050565b606083156148335750816146ec565b8251156148435782518084602001fd5b8160405162461bcd60e51b815260040161075f9190615955565b6040518060c00160405280606081526020016060815260200160006001600160a01b031681526020016148b5604051806040016040528060006001600160a01b0316815260200160006001600160601b031681525090565b815260006020820181905260409091015290565b6001600160a01b03811681146114e357600080fd5b80356148e9816148c9565b919050565b60008083601f84011261490057600080fd5b5081356001600160401b0381111561491757600080fd5b6020830191508360208260051b85010111156142c357600080fd5b60008060008060008060008060008060c08b8d03121561495157600080fd5b61495a8b6148de565b995061496860208c016148de565b985060408b01356001600160401b038082111561498457600080fd5b6149908e838f016148ee565b909a50985060608d01359150808211156149a957600080fd5b6149b58e838f016148ee565b909850965060808d01359150808211156149ce57600080fd5b6149da8e838f016148ee565b909650945060a08d01359150808211156149f357600080fd5b50614a008d828e016148ee565b915080935050809150509295989b9194979a5092959850565b600060208284031215614a2b57600080fd5b5035919050565b634e487b7160e01b600052604160045260246000fd5b60405160c081016001600160401b0381118282101715614a6a57614a6a614a32565b60405290565b604051601f8201601f191681016001600160401b0381118282101715614a9857614a98614a32565b604052919050565b60008060008060008060c08789031215614ab957600080fd5b8635614ac4816148c9565b9550602087810135614ad5816148c9565b9550604088013594506060880135614aec816148c9565b93506080880135925060a08801356001600160401b0380821115614b0f57600080fd5b818a0191508a601f830112614b2357600080fd5b813581811115614b3557614b35614a32565b614b47601f8201601f19168501614a70565b91508082528b84828501011115614b5d57600080fd5b80848401858401376000848284010152508093505050509295509295509295565b600060e08284031215614b9057600080fd5b50919050565b60008060008060008060808789031215614baf57600080fd5b8635614bba816148c9565b955060208701356001600160401b0380821115614bd657600080fd5b614be28a838b01614b7e565b96506040890135915080821115614bf857600080fd5b614c048a838b016148ee565b90965094506060890135915080821115614c1d57600080fd5b50614c2a89828a016148ee565b979a9699509497509295939492505050565b600060208284031215614c4e57600080fd5b81356146ec816148c9565b600060208284031215614c6b57600080fd5b813560ff811681146146ec57600080fd5b60008060208385031215614c8f57600080fd5b82356001600160401b03811115614ca557600080fd5b614cb1858286016148ee565b90969095509350505050565b600080600060608486031215614cd257600080fd5b8335614cdd816148c9565b95602085013595506040909401359392505050565b60008060408385031215614d0557600080fd5b8235614d10816148c9565b91506020830135614d20816148c9565b809150509250929050565b600081518084526020808501945080840160005b83811015614d645781516001600160a01b031687529582019590820190600101614d3f565b509495945050505050565b600081518084526020808501945080840160005b83811015614d6457815187529582019590820190600101614d83565b604081526000614db26040830185614d2b565b8281036020840152614dc48185614d6f565b95945050505050565b60008060408385031215614de057600080fd5b8235614deb816148c9565b946020939093013593505050565b600080600080600060a08688031215614e1157600080fd5b8535614e1c816148c9565b94506020860135614e2c816148c9565b93506040860135614e3c816148c9565b94979396509394606081013594506080013592915050565b6000806000806000806000806080898b031215614e7057600080fd5b88356001600160401b0380821115614e8757600080fd5b614e938c838d016148ee565b909a50985060208b0135915080821115614eac57600080fd5b614eb88c838d016148ee565b909850965060408b0135915080821115614ed157600080fd5b614edd8c838d016148ee565b909650945060608b0135915080821115614ef657600080fd5b50614f038b828c016148ee565b999c989b5096995094979396929594505050565b60006001600160401b03821115614f3057614f30614a32565b5060051b60200190565b600082601f830112614f4b57600080fd5b81356020614f60614f5b83614f17565b614a70565b82815260059290921b84018101918181019086841115614f7f57600080fd5b8286015b84811015614fa3578035614f96816148c9565b8352918301918301614f83565b509695505050505050565b600082601f830112614fbf57600080fd5b81356020614fcf614f5b83614f17565b82815260059290921b84018101918181019086841115614fee57600080fd5b8286015b84811015614fa35780358352918301918301614ff2565b80356001600160601b03811681146148e957600080fd5b60006040828403121561503257600080fd5b604051604081018181106001600160401b038211171561505457615054614a32565b6040529050808235615065816148c9565b815261507360208401615009565b60208201525092915050565b803563ffffffff811681146148e957600080fd5b600060e082840312156150a557600080fd5b6150ad614a48565b905081356001600160401b03808211156150c657600080fd5b6150d285838601614f3a565b835260208401359150808211156150e857600080fd5b506150f584828501614fae565b602083015250615107604083016148de565b60408201526151198360608401615020565b606082015261512a60a0830161507f565b608082015261513b60c083016148de565b60a082015292915050565b60006020828403121561515857600080fd5b81356001600160401b0381111561516e57600080fd5b612f2d84828501615093565b60008060006060848603121561518f57600080fd5b833561519a816148c9565b925060208401356151aa816148c9565b929592945050506040919091013590565b80151581146114e357600080fd5b60008060008060008060008060a0898b0312156151e557600080fd5b88356001600160401b03808211156151fc57600080fd5b6152088c838d016148ee565b909a50985060208b013591508082111561522157600080fd5b61522d8c838d016148ee565b909850965060408b013591508082111561524657600080fd5b506152538b828c016148ee565b9095509350506060890135615267816148c9565b91506080890135615277816151bb565b809150509295985092959890939650565b6000806000806000608086880312156152a057600080fd5b85356001600160401b03808211156152b757600080fd5b6152c389838a01614b7e565b965060208801359150808211156152d957600080fd5b506152e6888289016148ee565b909550935050604086013591506060860135615301816151bb565b809150509295509295909350565b60006020828403121561532157600080fd5b81516146ec816151bb565b60208082526036908201527f53747261746567794d616e616765722e6f6e6c7946726f7a656e3a207374616b60408201527532b9103430b9903737ba103132b2b710333937bd32b760511b606082015260800190565b6020808252601f908201527f5265656e7472616e637947756172643a207265656e7472616e742063616c6c00604082015260600190565b634e487b7160e01b600052603260045260246000fd5b6001600160a01b039384168152919092166020820152604081019190915260600190565b6001600160a01b03868116825260606020808401829052908301869052600091879160808501845b8981101561544257843561542e816148c9565b84168252938201939082019060010161541b565b5085810360408701528681526001600160fb1b0387111561546257600080fd5b8660051b9350838883830137600093010191825250979650505050505050565b60006020828403121561549457600080fd5b81516146ec816148c9565b60208082526028908201527f6d73672e73656e646572206973206e6f74207065726d697373696f6e6564206160408201526739903830bab9b2b960c11b606082015260800190565b60208082526019908201527f5061757361626c653a20696e6465782069732070617573656400000000000000604082015260600190565b60208082526054908201527f53747261746567794d616e616765722e6f6e6c794e6f7446726f7a656e3a207360408201527f74616b657220686173206265656e2066726f7a656e20616e64206d6179206265606082015273207375626a65637420746f20736c617368696e6760601b608082015260a00190565b60005b838110156155b357818101518382015260200161559b565b8381111561170f5750506000910152565b600081518084526155dc816020860160208601615598565b601f01601f19169290920160200192915050565b8281526040602082015260006146e960408301846155c4565b60006020828403121561561b57600080fd5b81516001600160e01b0319811681146146ec57600080fd5b6000808335601e1984360301811261564a57600080fd5b8301803591506001600160401b0382111561566457600080fd5b6020019150600581901b36038213156142c357600080fd5b60006156883683615093565b92915050565b60208082526044908201527f53747261746567794d616e616765722e6f6e6c7953747261746567795768697460408201527f656c69737465723a206e6f742074686520737472617465677957686974656c6960608201526339ba32b960e11b608082015260a00190565b6020808252603c908201527f53747261746567794d616e616765722e6f6e6c79456967656e506f644d616e6160408201527f6765723a206e6f742074686520656967656e506f644d616e6167657200000000606082015260800190565b634e487b7160e01b600052601160045260246000fd5b60008282101561577d5761577d615755565b500390565b6000821982111561579557615795615755565b500190565b6001600160a01b03841681526060602082018190526000906157be90830185614d2b565b82810360408401526157d08185614d6f565b9695505050505050565b6000823560de198336030181126157f057600080fd5b9190910192915050565b60006020828403121561580c57600080fd5b81356146ec816151bb565b600060001982141561582b5761582b615755565b5060010190565b60e08152600061584560e0830189614d2b565b82810360208401526158578189614d6f565b6001600160a01b0397881660408501528651881660608501526020909601516001600160601b03166080840152505063ffffffff9290921660a083015290921660c09092019190915292915050565b6000826158c357634e487b7160e01b600052601260045260246000fd5b500690565b6000602082840312156158da57600080fd5b5051919050565b6000602082840312156158f357600080fd5b6146ec8261507f565b60006020828403121561590e57600080fd5b6146ec82615009565b634e487b7160e01b600052603160045260246000fd5b634e487b7160e01b600052602160045260246000fd5b600082516157f0818460208701615598565b6020815260006146ec60208301846155c456fe53747261746567794d616e616765722e636f6d706c657465517565756564576953747261746567794d616e616765722e71756575655769746864726177616c3aa264697066735822122038ba17961d1fa89df4e28efeb318db0e555e245df3b7c90a630b631ab826b06064736f6c634300080c0033",
    "sourceMap": "1176:44306:72:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;24991:1675;;;;;;:::i;:::-;;:::i;:::-;;3232:392:112;;;;;;:::i;:::-;;:::i;598:130:73:-;;648:80;598:130;;;;;2641:25:168;;;2629:2;2614:18;598:130:73;;;;;;;;12327:2141:72;;;;;;:::i;:::-;;:::i;1009:31:73:-;;;;;;27661:2010:72;;;;;;:::i;:::-;;:::i;1419:49:73:-;;;;;;;;-1:-1:-1;;;;;6453:32:168;;;6435:51;;6423:2;6408:18;1419:49:73;6263:229:168;815:147:73;;866:96;815:147;;29778:151:72;;;;;;:::i;:::-;;:::i;2189:36:73:-;;;;;;3011:55;;;;;;:::i;:::-;;;;;;;;;;;;;;3699:136:112;;;:::i;4980:149::-;;;;;;:::i;:::-;5098:7;;5069:1;:10;;;;;;;;5098:14;;;5097:24;;4980:149;;;;7188:14:168;;7181:22;7163:41;;7151:2;7136:18;4980:149:112;7023:187:168;4792:87:112;4865:7;;4792:87;;30302:678:72;;;;;;:::i;:::-;;:::i;8274:1384::-;;;;;;:::i;:::-;;:::i;3163:65:73:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;2071:101:18;;;:::i;2470:77:73:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;1137:41;;;;;;:::i;:::-;;;;;;;;;;;;;;879:37:112;;;;;-1:-1:-1;;;;;879:37:112;;;4316:78:73;;;;;;:::i;:::-;;;;;;;;;;;;;;44734:139:72;;;;;;:::i;:::-;-1:-1:-1;;;;;44833:26:72;44807:7;44833:26;;;:18;:26;;;;;:33;;44734:139;1441:85:18;1513:6;;-1:-1:-1;;;;;1513:6:18;1441:85;;4401:104:73;;4462:42;4401:104;;14756:71:72;;;:::i;44121:518::-;;;;;;:::i;:::-;;:::i;:::-;;;;;;;;:::i;1640:34:73:-;;;;;-1:-1:-1;;;;;1640:34:73;;;7454:339:72;;;;;;:::i;:::-;;:::i;6482:580::-;;;;;;:::i;:::-;;:::i;23471:639::-;;;;;;:::i;:::-;;:::i;1474:33:73:-;;;;;44945:535:72;;;;;;:::i;:::-;;:::i;31125:753::-;;;;;;:::i;:::-;;:::i;2815:53:73:-;;;;;;:::i;:::-;;;;;;;;;;;;;;;;30016:147:72;;;;;;:::i;:::-;;:::i;2314:59:73:-;;2368:5;2314:59;;2642:57;;;;;;:::i;:::-;;:::i;1367:46::-;;;;;10556:314:72;;;;;;:::i;:::-;;:::i;17015:4408::-;;;;;;:::i;:::-;;:::i;2321:198:18:-;;;;;;:::i;:::-;;:::i;22610:486:72:-;;;;;;:::i;:::-;;:::i;4319:403:112:-;;;;;;:::i;:::-;;:::i;24991:1675:72:-;1334:13:18;:11;:13::i;:::-;4682:24:72::1;::::0;-1:-1:-1;;;4682:24:72;;-1:-1:-1;;;;;6453:32:168;;;4682:24:72::1;::::0;::::1;6435:51:168::0;25291:14:72;;4682:7:::1;:16:::0;;::::1;::::0;::::1;::::0;6408:18:168;;4682:24:72::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4674:91;;;;-1:-1:-1::0;;;4674:91:72::1;;;;;;;:::i;:::-;;;;;;;;;1815:1:20::2;2569:7;;:19;;2561:63;;;;-1:-1:-1::0;;;2561:63:20::2;;;;;;;:::i;:::-;1815:1;2699:7;:18:::0;25350:34:72;;::::3;25342:97;;;::::0;-1:-1:-1;;;25342:97:72;;22089:2:168;25342:97:72::3;::::0;::::3;22071:21:168::0;22128:2;22108:18;;;22101:30;22167:34;22147:18;;;22140:62;-1:-1:-1;;;22218:18:168;;;22211:48;22276:19;;25342:97:72::3;21887:414:168::0;25342:97:72::3;25449:26;25512:10:::0;25449:26;25539:972:::3;25563:16;25559:1;:20;25539:972;;;25798:98;25812:14;25828:15;;25844:18;25828:35;;;;;;;:::i;:::-;;;;;;;25865:10;;25876:1;25865:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;25880:12;;25893:1;25880:15;;;;;;;:::i;:::-;;;;;;;25798:13;:98::i;:::-;25794:207;;;25948:20;;;;;25794:207;4462:42:73;26019:10:72::0;;26030:1;26019:13;;::::3;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;26019:39:72::3;;26015:392;;;26142:67;26166:14;26182:9;26193:12;;26206:1;26193:15;;;;;;;:::i;:::-;;;;;;;26142:23;:67::i;:::-;26015:392;;;26331:10;;26342:1;26331:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;26331:22:72::3;;26354:9;26365:6;;26372:1;26365:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;26376:12;;26389:1;26376:15;;;;;;;:::i;:::-;;;;;;;26331:61;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;26015:392;26483:3;;25539:972;;;;26583:10;-1:-1:-1::0;;;;;26583:34:72::3;;26618:14;26634:10;;26646:12;;26583:76;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;-1:-1:-1::0;;1772:1:20::2;2872:7;:22:::0;-1:-1:-1;;;;;;;;;;;;;;;24991:1675:72:o;3232:392:112:-;1530:14;;;;;;;;;-1:-1:-1;;;;;1530:14:112;-1:-1:-1;;;;;1530:21:112;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1516:37:112;:10;-1:-1:-1;;;;;1516:37:112;;1508:90;;;;-1:-1:-1;;;1508:90:112;;;;;;;:::i;:::-;3464:7:::1;::::0;3434:25;;::::1;3433:38;3425:107;;;::::0;-1:-1:-1;;;3425:107:112;;25185:2:168;3425:107:112::1;::::0;::::1;25167:21:168::0;25224:2;25204:18;;;25197:30;25263:34;25243:18;;;25236:62;25334:26;25314:18;;;25307:54;25378:19;;3425:107:112::1;24983:420:168::0;3425:107:112::1;3542:7;:25:::0;;;3582:35:::1;::::0;2641:25:168;;;3589:10:112::1;::::0;3582:35:::1;::::0;2629:2:168;2614:18;3582:35:112::1;;;;;;;;3232:392:::0;:::o;12327:2141:72:-;5098:7:112;;12657:14:72;;;;5069:1:112;5098:14;;;5097:24;2160:14;2152:52;;;;-1:-1:-1;;;2152:52:112;;;;;;;:::i;:::-;4470:24:72::1;::::0;-1:-1:-1;;;4470:24:72;;-1:-1:-1;;;;;6453:32:168;;;4470:24:72::1;::::0;::::1;6435:51:168::0;12611:6:72;;4470:7:::1;:16:::0;;::::1;::::0;::::1;::::0;6408:18:168;;4470:24:72::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4469:25;4448:156;;;;-1:-1:-1::0;;;4448:156:72::1;;;;;;;:::i;:::-;1815:1:20::2;2569:7;;:19;;2561:63;;;;-1:-1:-1::0;;;2561:63:20::2;;;;;;;:::i;:::-;1815:1;2699:7;:18:::0;12718:15:72::3;12708:25:::0;::::3;;12687:139;;;::::0;-1:-1:-1;;;12687:139:72;;26457:2:168;12687:139:72::3;::::0;::::3;26439:21:168::0;26496:2;26476:18;;;26469:30;26535:34;26515:18;;;26508:62;26606:34;26586:18;;;26579:62;-1:-1:-1;;;26657:19:168;;;26650:34;26701:19;;12687:139:72::3;26255:471:168::0;12687:139:72::3;-1:-1:-1::0;;;;;12918:14:72;;::::3;12902:13;12918:14:::0;;;:6:::3;:14;::::0;;;;;;;;12973:68;;866:96:73::3;12973:68:72::0;;::::3;27053:25:168::0;;;;27152:15;;;27132:18;;;27125:43;;;;27204:15;;;27184:18;;;27177:43;27236:18;;;27229:34;;;27279:19;;;27272:35;;;27323:19;;;27316:35;;;27025:19;;12973:68:72::3;::::0;;-1:-1:-1;;12973:68:72;;::::3;::::0;;;;;;12963:79;;12973:68:::3;12963:79:::0;;::::3;::::0;-1:-1:-1;;;;;13076:14:72;::::3;;::::0;;;:6:::3;:14:::0;;;;;;13101:1:::3;13093:9:::0;::::3;13076:26:::0;;12963:79;-1:-1:-1;13229:13:72::3;13246:17;13229:34;13225:401;;-1:-1:-1::0;13354:19:72::3;::::0;;;;::::3;::::0;;::::3;::::0;;-1:-1:-1;;;13354:19:72::3;::::0;;::::3;::::0;13316:89;;648:80:73::3;13316:89:72::0;;::::3;27593:25:168::0;13344:30:72;27634:18:168;;;27627:34;13376:13:72::3;27677:18:168::0;;;27670:34;13399:4:72::3;27720:18:168::0;;;;27713:60;;;;13316:89:72;;;;;;;;;;27565:19:168;;;13316:89:72;;13306:100;;;;::::3;::::0;-1:-1:-1;;;13443:58:72;;;28042:27:168;28085:11;;;28078:27;28121:12;;;;28114:28;;;13443:58:72;;;;;;;;;;28158:12:168;;;;13443:58:72;;;13433:69;;;::::3;::::0;13225:401:::3;;;13585:16;::::0;13556:58:::3;::::0;-1:-1:-1;;;13556:58:72::3;::::0;::::3;28042:27:168::0;28085:11;;;28078:27;;;;28121:12;;;28114:28;;;28158:12;;13556:58:72::3;;;;;;;;;;;;13546:69;;;;;;13533:82;;13225:401;-1:-1:-1::0;;;;;1465:19:47;;;:23;13957:432:72::3;;14011:56;::::0;-1:-1:-1;;;14011:56:72;;;14071:18;-1:-1:-1;;;;;14011:33:72;::::3;::::0;1765:10:::3;::::0;14011:56:::3;::::0;14045:10;;14057:9;;14011:56:::3;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;;14011:78:72::3;;14003:194;;;::::0;-1:-1:-1;;;14003:194:72;;29496:2:168;14003:194:72::3;::::0;::::3;29478:21:168::0;29535:2;29515:18;;;29508:30;29574:34;29554:18;;;29547:62;29645:34;29625:18;;;29618:62;29717:25;29696:19;;;29689:54;29760:19;;14003:194:72::3;29294:491:168::0;14003:194:72::3;13957:432;;;14276:6;-1:-1:-1::0;;;;;14236:46:72::3;:36;14250:10;14262:9;14236:13;:36::i;:::-;-1:-1:-1::0;;;;;14236:46:72::3;;14228:150;;;::::0;-1:-1:-1;;;14228:150:72;;29992:2:168;14228:150:72::3;::::0;::::3;29974:21:168::0;30031:2;30011:18;;;30004:30;30070:34;30050:18;;;30043:62;30141:34;30121:18;;;30114:62;-1:-1:-1;;;30192:19:168;;;30185:42;30244:19;;14228:150:72::3;29790:479:168::0;14228:150:72::3;14408:53;14429:6;14437:8;14447:5;14454:6;14408:20;:53::i;:::-;1772:1:20::2;2872:7;:22:::0;14399:62:72;12327:2141;-1:-1:-1;;;;;;;;;;;;12327:2141:72:o;27661:2010::-;1334:13:18;:11;:13::i;:::-;27869:33:72::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;4682:24;::::0;-1:-1:-1;;;4682:24:72;;-1:-1:-1;;;;;6453:32:168;;;4682:24:72::1;::::0;::::1;6435:51:168::0;4682:7:72::1;:16;::::0;::::1;::::0;6408:18:168;;4682:24:72::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4674:91;;;;-1:-1:-1::0;;;4674:91:72::1;;;;;;;:::i;:::-;1815:1:20::2;2569:7;;:19;;2561:63;;;;-1:-1:-1::0;;;2561:63:20::2;;;;;;;:::i;:::-;1815:1;2699:7;:18:::0;27964:27:72::3;:16:::0;;:27:::3;:::i;:::-;27947:51:::0;::::3;::::0;-1:-1:-1;27939:124:72::3;;;::::0;-1:-1:-1;;;27939:124:72;;31045:2:168;27939:124:72::3;::::0;::::3;31027:21:168::0;31084:2;31064:18;;;31057:30;31123:34;31103:18;;;31096:62;31194:30;31174:18;;;31167:58;31242:19;;27939:124:72::3;30843:424:168::0;27939:124:72::3;28109:22;28134:41;;28158:16:::0;28134:41:::3;:::i;:::-;28263:37;::::0;;;:21:::3;:37;::::0;;;;;28109:66;;-1:-1:-1;28263:37:72::3;;28242:148;;;::::0;;-1:-1:-1;;;28242:148:72;;31701:2:168;28242:148:72::3;::::0;::::3;31683:21:168::0;31720:18;;;31713:30;;;;31779:34;31759:18;;;31752:62;31850:34;31830:18;;;31823:62;31902:19;;28242:148:72::3;31499:428:168::0;28242:148:72::3;28508:5;28468:37:::0;;;:21:::3;:37;::::0;;;;:45;;-1:-1:-1;;28468:45:72::3;::::0;;28508:5;28657:27:::3;:16:::0;;:27:::3;:::i;:::-;:34;;28630:61;;28706:9;28701:964;28725:16;28721:1;:20;28701:964;;;28864:41:::0;;::::3;:83:::0;::::3;;;;28946:1;28909:13;;28923:18;28909:33;;;;;;;:::i;:::-;;;;;;;:38;28864:83;28860:795;;;28999:20;;;;;28701:964;;28860:795;4462:42:73;29080:27:72;:16:::0;;:27:::3;:::i;:::-;29108:1;29080:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;29080:56:72::3;;29076:494;;;29227:90;29251:26;::::0;;;::::3;::::0;::::3;;:::i;:::-;29279:9:::0;29290:23:::3;;::::0;::::3;:16:::0;:23:::3;:::i;:::-;29314:1;29290:26;;;;;;;:::i;29227:90::-;29076:494;;;29462:27;:16:::0;;:27:::3;:::i;:::-;29490:1;29462:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;29462:39:72::3;;29502:9;29513:6;;29520:1;29513:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;29524:23;;::::0;::::3;:16:::0;:23:::3;:::i;:::-;29548:1;29524:26;;;;;;;:::i;:::-;;;;;;;29462:89;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;;;;;29076:494;29619:3;;28701:964;;;-1:-1:-1::0;;1772:1:20::2;2872:7;:22:::0;-1:-1:-1;;;;;;;;;27661:2010:72:o;29778:151::-;1334:13:18;:11;:13::i;:::-;29873:49:72::1;29899:22;29873:25;:49::i;:::-;29778:151:::0;:::o;3699:136:112:-;1530:14;;;;;;;;;-1:-1:-1;;;;;1530:14:112;-1:-1:-1;;;;;1530:21:112;;:23;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1516:37:112;:10;-1:-1:-1;;;;;1516:37:112;;1508:90;;;;-1:-1:-1;;;1508:90:112;;;;;;;:::i;:::-;-1:-1:-1;;3749:7:112::1;:27:::0;;;3791:37:::1;::::0;2641:25:168;;;3798:10:112::1;::::0;3791:37:::1;::::0;2629:2:168;2614:18;3791:37:112::1;;;;;;;3699:136::o:0;30302:678:72:-;5028:19;;-1:-1:-1;;;;;5028:19:72;5014:10;:33;5006:114;;;;-1:-1:-1;;;5006:114:72;;;;;;;:::i;:::-;30468:21;30430:35:::1;30506:468;30530:27;30526:1;:31;30506:468;;;30669:31;:57;30701:21;;30723:1;30701:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;30669:57:72::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;30669:57:72;;::::1;;30664:241;;30806:4;30746:31;:57;30778:21;;30800:1;30778:24;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;30746:57:72::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;30746:57:72;:64;;-1:-1:-1;;30746:64:72::1;::::0;::::1;;::::0;;;::::1;::::0;;30833:57:::1;30865:21:::0;;30887:1;30865:24;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;30833:57;::::0;-1:-1:-1;;;;;6453:32:168;;;6435:51;;6423:2;6408:18;30833:57:72::1;;;;;;;30664:241;30946:3;;30506:468;;;;30420:560;30302:678:::0;;:::o;8274:1384::-;4844:15;-1:-1:-1;;;;;4836:38:72;4864:10;4836:38;4828:111;;;;-1:-1:-1;;;4828:111:72;;;;;;;:::i;:::-;1815:1:20::1;2569:7;;:19;;2561:63;;;;-1:-1:-1::0;;;2561:63:20::1;;;;;;;:::i;:::-;1815:1;2699:7;:18:::0;-1:-1:-1;;;;;8593:43:72;::::2;8572:18;8593:43:::0;;;:20:::2;:43;::::0;;;;;;;4462:42:73::2;8593:67:72::0;;;;;;;;8808:19;;::::2;8804:200;;;8843:12;8858:19;8867:10:::0;8858:6;:19:::2;:::i;:::-;-1:-1:-1::0;;;;;8891:66:72;::::2;;::::0;;;:43:::2;:66;::::0;;;;:74;;8843:34;;-1:-1:-1;8843:34:72;;8891:66;;;:74:::2;::::0;8843:34;;8891:74:::2;:::i;:::-;::::0;;;-1:-1:-1;8979:14:72::2;::::0;-1:-1:-1;8989:4:72;8979:14;::::2;:::i;:::-;;;8829:175;8804:200;9087:11:::0;;9083:151:::2;;9114:97;9128:21;9151:27;4462:42:73;9204:6:72;9114:13;:97::i;:::-;;9083:151;9338:18;::::0;;9354:1:::2;9338:18:::0;;;;;::::2;::::0;;;9306:29:::2;::::0;9338:18:::2;::::0;;::::2;::::0;;::::2;::::0;::::2;;::::0;-1:-1:-1;9338:18:72::2;9306:50;;4462:42:73;9366:10:72;9377:1;9366:13;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;9366:38:72;;;::::2;:13;::::0;;::::2;::::0;;;;;;;:38;9446:16:::2;::::0;;9460:1:::2;9446:16:::0;;;;;::::2;::::0;;;9414:29:::2;::::0;9446:16:::2;;;;;;;;;;;::::0;-1:-1:-1;9446:16:72::2;9414:48;;9490:6;9472:12;9485:1;9472:15;;;;;;;;:::i;:::-;;::::0;;::::2;::::0;;;;;:24;9568:83:::2;::::0;-1:-1:-1;;;9568:83:72;;-1:-1:-1;;;;;9568:10:72::2;:34;::::0;::::2;::::0;:83:::2;::::0;9603:21;;9626:10;;9638:12;;9568:83:::2;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;::::0;::::2;;;;;-1:-1:-1::0;;1772:1:20::1;2872:7;:22:::0;-1:-1:-1;;;;;;;;8274:1384:72:o;2071:101:18:-;1334:13;:11;:13::i;:::-;2135:30:::1;2162:1;2135:18;:30::i;:::-;2071:101::o:0;14756:71:72:-;14797:23;14809:10;14797:11;:23::i;44121:518::-;-1:-1:-1;;;;;44259:29:72;;44232:24;44259:29;;;:18;:29;;;;;:36;44184:18;;;;44259:36;;-1:-1:-1;;;;;44331:31:72;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;44331:31:72;;44305:57;;44378:9;44373:204;44397:16;44393:1;:20;44373:204;;;-1:-1:-1;;;;;44442:31:72;;;;;;:20;:31;;;;;;;;44474:18;:29;;;;;:32;;44442:31;;;44504:1;;44474:32;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;44474:32:72;44442:65;;;;;;;;;;;;;44430:9;;:6;;44437:1;;44430:9;;;;;;:::i;:::-;;;;;;;;;;:77;44549:3;;44373:204;;;;44594:18;:29;44613:9;-1:-1:-1;;;;;44594:29:72;-1:-1:-1;;;;;44594:29:72;;;;;;;;;;;;44625:6;44586:46;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;44586:46:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;44121:518;;;:::o;7454:339::-;4844:15;-1:-1:-1;;;;;4836:38:72;4864:10;4836:38;4828:111;;;;-1:-1:-1;;;4828:111:72;;;;;;;:::i;:::-;5098:7:112;;1503:1:72::1;::::0;5069::112;5098:14;;;5097:24;2160:14:::1;2152:52;;;;-1:-1:-1::0;;;2152:52:112::1;;;;;;;:::i;:::-;4470:24:72::2;::::0;-1:-1:-1;;;4470:24:72;;-1:-1:-1;;;;;6453:32:168;;;4470:24:72::2;::::0;::::2;6435:51:168::0;7627:6:72;;4470:7:::2;:16:::0;;::::2;::::0;::::2;::::0;6408:18:168;;4470:24:72::2;;;;;;;;;;;;;;;;;::::0;::::2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4469:25;4448:156;;;;-1:-1:-1::0;;;4448:156:72::2;;;;;;;:::i;:::-;1815:1:20::3;2569:7;;:19;;2561:63;;;;-1:-1:-1::0;;;2561:63:20::3;;;;;;;:::i;:::-;1815:1;2699:7;:18:::0;7736:50:72::4;7747:6:::0;4462:42:73::4;7779:6:72::0;7736:10:::4;:50::i;:::-;-1:-1:-1::0;;1772:1:20::3;2872:7;:22:::0;-1:-1:-1;;7454:339:72:o;6482:580::-;3111:19:19;3134:13;;;;;;3133:14;;3179:34;;;;-1:-1:-1;3197:12:19;;3212:1;3197:12;;;;:16;3179:34;3178:108;;;-1:-1:-1;3258:4:19;1465:19:47;:23;;;3219:66:19;;-1:-1:-1;3268:12:19;;;;;:17;3219:66;3157:201;;;;-1:-1:-1;;;3157:201:19;;34582:2:168;3157:201:19;;;34564:21:168;34621:2;34601:18;;;34594:30;34660:34;34640:18;;;34633:62;-1:-1:-1;;;34711:18:168;;;34704:44;34765:19;;3157:201:19;34380:410:168;3157:201:19;3368:12;:16;;-1:-1:-1;;3368:16:19;3383:1;3368:16;;;3394:65;;;;3428:13;:20;;-1:-1:-1;;3428:20:19;;;;;3394:65;6772:19:72::1;::::0;;;;::::1;::::0;;::::1;::::0;;-1:-1:-1;;;6772:19:72::1;::::0;;::::1;::::0;6734:93;;648:80:73::1;6734:93:72::0;;::::1;27593:25:168::0;6762:30:72;27634:18:168;;;27627:34;6794:17:72::1;27677:18:168::0;;;27670:34;6821:4:72::1;27720:18:168::0;;;;27713:60;;;;6734:93:72;;;;;;;;;;27565:19:168;;;;6734:93:72;;;6724:104;;;::::1;::::0;6705:16:::1;:123:::0;6838:55:::1;6856:15:::0;6873:19;6838:17:::1;:55::i;:::-;6903:32;6922:12;6903:18;:32::i;:::-;6945:51;6969:26;6945:23;:51::i;:::-;7006:49;7032:22;7006:25;:49::i;:::-;3483:14:19::0;3479:99;;;3529:5;3513:21;;-1:-1:-1;;3513:21:19;;;3553:14;;-1:-1:-1;34947:36:168;;3553:14:19;;34935:2:168;34920:18;3553:14:19;;;;;;;3479:99;3101:483;6482:580:72;;;;;:::o;23471:639::-;5098:7:112;;1610:1:72;;5069:10:112;5098:14;;;5097:24;2160:14;2152:52;;;;-1:-1:-1;;;2152:52:112;;;;;;;:::i;:::-;1815:1:20::1;2569:7;;:19;;2561:63;;;;-1:-1:-1::0;;;2561:63:20::1;;;;;;;:::i;:::-;1815:1;2699:7;:18:::0;23924:9:72::2;23920:184;23939:28:::0;;::::2;23920:184;;;23988:105;24014:17;;24032:1;24014:20;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;24036:6;;24043:1;24036:9;;;;;;;:::i;:::-;;;;;;;;;;;;:::i;:::-;24047:22;;24070:1;24047:25;;;;;;;:::i;:::-;;;;;;;24074:15;;24090:1;24074:18;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;23988:25;:105::i;:::-;23969:3:::0;::::2;::::0;::::2;:::i;:::-;;;;23920:184;;44945:535:::0;45140:27;;45189:23;;;;;45234:26;;;;;45282:35;;;;45339:37;;;;45398:33;;;;45108:341;;45041:7;;45108:341;;45140:27;;45189:23;45398:33;45108:341;;:::i;:::-;;;;;;;;;;;;;45081:382;;;;;;45060:413;;44945:535;;;:::o;31125:753::-;5028:19;;-1:-1:-1;;;;;5028:19:72;5014:10;:33;5006:114;;;;-1:-1:-1;;;5006:114:72;;;;;;;:::i;:::-;31316:31;31268:45:::1;31364:508;31388:37;31384:1;:41;31364:508;;;31532:31;:67;31564:31;;31596:1;31564:34;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;31532:67:72::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;31532:67:72;;::::1;;31528:275;;;31689:5;31619:31;:67;31651:31;;31683:1;31651:34;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;31619:67:72::1;::::0;;::::1;::::0;::::1;::::0;;;;;;-1:-1:-1;31619:67:72;:75;;-1:-1:-1;;31619:75:72::1;::::0;::::1;;::::0;;;::::1;::::0;;31717:71:::1;31753:31:::0;;31785:1;31753:34;;::::1;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;31717:71;::::0;-1:-1:-1;;;;;6453:32:168;;;6435:51;;6423:2;6408:18;31717:71:72::1;;;;;;;31528:275;31844:3;;31364:508;;30016:147:::0;1334:13:18;:11;:13::i;:::-;30109:47:72::1;30133:22;30109:23;:47::i;2642:57:73:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;2642:57:73;;-1:-1:-1;2642:57:73;;-1:-1:-1;2642:57:73:o;10556:314:72:-;5098:7:112;;10767:14:72;;;;5069:1:112;5098:14;;;5097:24;2160:14;2152:52;;;;-1:-1:-1;;;2152:52:112;;;;;;;:::i;:::-;4470:24:72::1;::::0;-1:-1:-1;;;4470:24:72;;10717:10:::1;4470:24;::::0;::::1;6435:51:168::0;;;10717:10:72;4470:7:::1;-1:-1:-1::0;;;;;4470:16:72::1;::::0;::::1;::::0;6408:18:168;;4470:24:72::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4469:25;4448:156;;;;-1:-1:-1::0;;;4448:156:72::1;;;;;;;:::i;:::-;1815:1:20::2;2569:7;;:19;;2561:63;;;;-1:-1:-1::0;;;2561:63:20::2;;;;;;;:::i;:::-;1815:1;2699:7;:18:::0;10806:57:72::3;10827:10;10839:8:::0;10849:5;10856:6;10806:20:::3;:57::i;:::-;1772:1:20::2;2872:7;:22:::0;10797:66:72;10556:314;-1:-1:-1;;;;;;10556:314:72:o;17015:4408::-;5098:7:112;;17364::72;;1610:1;;5069:10:112;5098:14;;;5097:24;2160:14;2152:52;;;;-1:-1:-1;;;2152:52:112;;;;;;;:::i;:::-;4470:24:72::1;::::0;-1:-1:-1;;;4470:24:72;;17314:10:::1;4470:24;::::0;::::1;6435:51:168::0;;;17314:10:72;4470:7:::1;-1:-1:-1::0;;;;;4470:16:72::1;::::0;::::1;::::0;6408:18:168;;4470:24:72::1;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4469:25;4448:156;;;;-1:-1:-1::0;;;4448:156:72::1;;;;;;;:::i;:::-;1815:1:20::2;2569:7;;:19;;2561:63;;;;-1:-1:-1::0;;;2561:63:20::2;;;;;;;:::i;:::-;1815:1;2699:7;:18:::0;17395:34:72;;::::3;17387:101;;;::::0;-1:-1:-1;;;17387:101:72;;37530:2:168;17387:101:72::3;::::0;::::3;37512:21:168::0;37569:2;37549:18;;;37542:30;-1:-1:-1;;;;;;;;;;;37588:18:168;;;37581:62;-1:-1:-1;;;37659:18:168;;;37652:52;37721:19;;17387:101:72::3;37328:418:168::0;17387:101:72::3;-1:-1:-1::0;;;;;17506:24:72;::::3;17498:101;;;::::0;;-1:-1:-1;;;17498:101:72;;37953:2:168;17498:101:72::3;::::0;::::3;37935:21:168::0;37972:18;;;37965:30;;;;-1:-1:-1;;;;;;;;;;;38011:18:168;;;38004:62;38102:34;38082:18;;;38075:62;38154:19;;17498:101:72::3;37751:428:168::0;17498:101:72::3;17676:66;::::0;-1:-1:-1;;;17676:66:72;;-1:-1:-1;;;;;17676:10:72::3;:34;::::0;::::3;::::0;:66:::3;::::0;17711:10:::3;::::0;17723;;;;17735:6;;;;17676:66:::3;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;::::0;::::3;;;;;-1:-1:-1::0;;17796:10:72::3;17753:12;17775:32:::0;;;:20:::3;:32;::::0;;;;;;-1:-1:-1;17753:12:72;-1:-1:-1;17753:12:72;18317:1249:::3;18337:21:::0;;::::3;18317:1249;;;4462:42:73;18379:10:72::0;;18390:1;18379:13;;::::3;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;18379:39:72::3;;18375:600;;;-1:-1:-1::0;;;;;18446:24:72;::::3;18460:10;18446:24;18438:158;;;::::0;-1:-1:-1;;;18438:158:72;;38386:2:168;18438:158:72::3;::::0;::::3;38368:21:168::0;38425:3;38405:18;;;38398:31;-1:-1:-1;;;;;;;;;;;38445:18:168;;;38438:62;38536:34;38516:18;;;38509:62;38608:34;38587:19;;;38580:63;-1:-1:-1;;;38659:19:168;;;38652:36;38705:19;;18438:158:72::3;38184:546:168::0;18438:158:72::3;18643:1;18622:22:::0;::::3;18614:157;;;::::0;-1:-1:-1;;;18614:157:72;;38937:2:168;18614:157:72::3;::::0;::::3;38919:21:168::0;38976:3;38956:18;;;38949:31;-1:-1:-1;;;;;;;;;;;38996:18:168;;;38989:62;39087:34;39067:18;;;39060:62;39159:34;39138:19;;;39131:63;-1:-1:-1;;;39210:19:168;;;39203:37;39257:19;;18614:157:72::3;38735:547:168::0;18614:157:72::3;1399:3;18797:6;;18804:1;18797:9;;;;;;;:::i;:::-;;;;;;;:23;;;;:::i;:::-;:28:::0;18789:171:::3;;;::::0;-1:-1:-1;;;18789:171:72;;39703:2:168;18789:171:72::3;::::0;::::3;39685:21:168::0;39742:3;39722:18;;;39715:31;-1:-1:-1;;;;;;;;;;;39762:18:168;;;39755:62;39853:34;39833:18;;;39826:62;39925:34;39904:19;;;39897:63;-1:-1:-1;;;39976:19:168;;;39969:45;40031:19;;18789:171:72::3;39501:555:168::0;18789:171:72::3;19184:88;19198:10;19210:15;;19226:18;19210:35;;;;;;;:::i;:::-;;;;;;;19247:10;;19258:1;19247:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;19262:6;;19269:1;19262:9;;;;;;;:::i;19184:88::-;19180:197;;;19324:20;;;;;19180:197;19396:66;19418:10;19430:5;19437:10;;19448:1;19437:13;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;19452:6;;19459:1;19452:9;;;;;;;:::i;:::-;;;;;;;19396:66;;;;;;;;-1:-1:-1::0;;;;;40365:15:168;;;40347:34;;-1:-1:-1;;;;;40417:39:168;;;;40412:2;40397:18;;40390:67;40493:15;;40488:2;40473:18;;40466:43;40540:2;40525:18;;40518:34;;;;40296:3;40281:19;;40061:497;19396:66:72::3;;;;;;;;19538:3;;18317:1249;;;-1:-1:-1::0;19670:34:72::3;::::0;-1:-1:-1;;;19670:34:72;;19693:10:::3;19670:34;::::0;::::3;6435:51:168::0;19643:24:72::3;::::0;19670:10:::3;-1:-1:-1::0;;;;;19670:22:72::3;::::0;::::3;::::0;6408:18:168;;19670:34:72::3;;;;;;;;;;;;;;;;;::::0;::::3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19643:61;;19715:40;;:::i;:::-;19780:44;19827:104;;;;;;;;19876:10;-1:-1:-1::0;;;;;19827:104:72::3;;;;;19911:5;-1:-1:-1::0;;;;;19827:104:72::3;;;::::0;19780:151:::3;;20072:5;20080:1;20072:9;-1:-1:-1::0;;;;;20037:44:72::3;:20;:32;20058:10;-1:-1:-1::0;;;;;20037:32:72::3;-1:-1:-1::0;;;;;20037:32:72::3;;;;;;;;;;;;:44;;;;20196:311;;;;;;;;20243:10;;20196:311;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;20279:6;;20196:311;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::3;::::0;;;-1:-1:-1;20196:311:72;;;-1:-1:-1;;20314:10:72::3;20196:311;::::0;::::3;::::0;-1:-1:-1;20196:311:72;;;;;;;::::3;20427:12;20196:311;::::0;;;;-1:-1:-1;;;;;20196:311:72;::::3;::::0;;;;;20177:330;-1:-1:-1;20595:41:72::3;20177:330:::0;20595:23:::3;:41::i;:::-;20685:37;::::0;;;:21:::3;:37;::::0;;;;:44;;-1:-1:-1;;20685:44:72::3;20725:4;20685:44;::::0;;20570:66;-1:-1:-1;21172:20:72;:66;::::3;;;-1:-1:-1::0;21215:10:72::3;21196:30;::::0;;;:18:::3;:30;::::0;;;;:37;:42;21172:66:::3;21168:120;;;21254:23;21266:10;21254:11;:23::i;:::-;21303:81;::::0;;21320:10:::3;40858:34:168::0;;-1:-1:-1;;;;;40928:39:168;;40923:2;40908:18;;40901:67;-1:-1:-1;;;;;41004:15:168;;;40984:18;;;40977:43;41056:15;;41051:2;41036:18;;41029:43;41103:3;41088:19;;41081:35;;;21303:81:72;;::::3;::::0;;;;40807:3:168;21303:81:72;;::::3;1772:1:20::2;2872:7;:22:::0;21402:14:72;17015:4408;-1:-1:-1;;;;;;;;;;;;;;;17015:4408:72:o;2321:198:18:-;1334:13;:11;:13::i;:::-;-1:-1:-1;;;;;2409:22:18;::::1;2401:73;;;::::0;-1:-1:-1;;;2401:73:18;;41329:2:168;2401:73:18::1;::::0;::::1;41311:21:168::0;41368:2;41348:18;;;41341:30;41407:34;41387:18;;;41380:62;-1:-1:-1;;;41458:18:168;;;41451:36;41504:19;;2401:73:18::1;41127:402:168::0;2401:73:18::1;2484:28;2503:8;2484:18;:28::i;22610:486:72:-:0;5098:7:112;;1610:1:72;;5069:10:112;5098:14;;;5097:24;2160:14;2152:52;;;;-1:-1:-1;;;2152:52:112;;;;;;;:::i;:::-;1815:1:20::1;2569:7;;:19;;2561:63;;;;-1:-1:-1::0;;;2561:63:20::1;;;;;;;:::i;:::-;1815:1;2699:7;:18:::0;22999:90:72::2;23025:16:::0;23043:6;;23051:20;23073:15;22999:25:::2;:90::i;:::-;-1:-1:-1::0;;1772:1:20::1;2872:7;:22:::0;-1:-1:-1;;;;22610:486:72:o;4319:403:112:-;1678:14;;;;;;;;;-1:-1:-1;;;;;1678:14:112;-1:-1:-1;;;;;1678:23:112;;:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;;;;;1664:39:112;:10;-1:-1:-1;;;;;1664:39:112;;1656:94;;;;-1:-1:-1;;;1656:94:112;;41736:2:168;1656:94:112;;;41718:21:168;41775:2;41755:18;;;41748:30;41814:34;41794:18;;;41787:62;-1:-1:-1;;;41865:18:168;;;41858:40;41915:19;;1656:94:112;41534:406:168;1656:94:112;4559:7:::1;;4558:8;4536:15;4535:16;4523:7;;4522:8;4521:31;4520:47;4512:116;;;::::0;-1:-1:-1;;;4512:116:112;;42147:2:168;4512:116:112::1;::::0;::::1;42129:21:168::0;42186:2;42166:18;;;42159:30;42225:34;42205:18;;;42198:62;42296:26;42276:18;;;42269:54;42340:19;;4512:116:112::1;41945:420:168::0;4512:116:112::1;4638:7;:25:::0;;;4678:37:::1;::::0;2641:25:168;;;4687:10:112::1;::::0;4678:37:::1;::::0;2629:2:168;2614:18;4678:37:112::1;2495:177:168::0;1599:130:18;1513:6;;-1:-1:-1;;;;;1513:6:18;929:10:22;1662:23:18;1654:68;;;;-1:-1:-1;;;1654:68:18;;42572:2:168;1654:68:18;;;42554:21:168;;;42591:18;;;42584:30;42650:34;42630:18;;;42623:62;42702:18;;1654:68:18;42370:356:168;34844:1424:72;34984:4;-1:-1:-1;;;;;35047:23:72;;35039:99;;;;-1:-1:-1;;;35039:99:72;;42933:2:168;35039:99:72;;;42915:21:168;42972:2;42952:18;;;42945:30;43011:34;42991:18;;;42984:62;43082:33;43062:18;;;43055:61;43133:19;;35039:99:72;42731:427:168;35039:99:72;35156:16;35148:91;;;;-1:-1:-1;;;35148:91:72;;43365:2:168;35148:91:72;;;43347:21:168;43404:2;43384:18;;;43377:30;43443:34;43423:18;;;43416:62;43514:32;43494:18;;;43487:60;43564:19;;35148:91:72;43163:426:168;35148:91:72;-1:-1:-1;;;;;35323:31:72;;;35302:18;35323:31;;;:20;:31;;;;;;;;:41;;;;;;;;;;35391:25;;;;35383:89;;;;-1:-1:-1;;;35383:89:72;;43796:2:168;35383:89:72;;;43778:21:168;43835:2;43815:18;;;43808:30;43874:34;43854:18;;;43847:62;-1:-1:-1;;;43925:18:168;;;43918:49;43984:19;;35383:89:72;43594:415:168;35383:89:72;-1:-1:-1;;;;;35714:31:72;;;;;;;:20;:31;;;;;;;;:41;;;;;;;;;35583:24;;;35714:54;;;;35583:24;35886:15;;35882:250;;;35917:73;35955:9;35966:13;35981:8;35917:37;:73::i;:::-;36117:4;36110:11;;;;;35882:250;36256:5;36249:12;;;34844:1424;;;;;;;:::o;42194:850::-;-1:-1:-1;;;;;42325:51:72;;42297:25;42325:51;;;:43;:51;;;;;;42390:22;;42386:513;;42441:17;42432:6;:26;42428:461;;;-1:-1:-1;;;;;42478:51:72;;42532:1;42478:51;;;:43;:51;;;;;:55;42630:27;42640:17;42630:27;;:::i;:::-;;;42428:461;;;42751:26;42771:6;42751:17;:26;:::i;:::-;-1:-1:-1;;;;;42696:51:72;;;;;;;:43;:51;;;;;:82;;;;-1:-1:-1;;;42194:850:72:o;42428:461::-;42964:73;;-1:-1:-1;;;42964:73:72;;-1:-1:-1;;;;;42964:15:72;:46;;;;:73;;43011:6;;43019:9;;43030:6;;42964:73;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;42287:757;42194:850;;;:::o;4402:227:52:-;4480:7;4500:17;4519:18;4541:27;4552:4;4558:9;4541:10;:27::i;:::-;4499:69;;;;4578:18;4590:5;4578:11;:18::i;:::-;-1:-1:-1;4613:9:52;4402:227;-1:-1:-1;;;4402:227:52:o;33779:731:72:-;-1:-1:-1;;;;;5227:41:72;;33966:14;5227:41;;;:31;:41;;;;;;33939:8;;5227:41;;5219:131;;;;-1:-1:-1;;;5219:131:72;;44596:2:168;5219:131:72;;;44578:21:168;44635:2;44615:18;;;44608:30;44674:34;44654:18;;;44647:62;44745:34;44725:18;;;44718:62;-1:-1:-1;;;44796:19:168;;;44789:44;44850:19;;5219:131:72;44394:481:168;5219:131:72;34055:61:::1;-1:-1:-1::0;;;;;34055:22:72;::::1;34078:10;34098:8:::0;34109:6;34055:22:::1;:61::i;:::-;34251:31;::::0;-1:-1:-1;;;34251:31:72;;-1:-1:-1;;;;;45088:32:168;;;34251:31:72::1;::::0;::::1;45070:51:168::0;45137:18;;;45130:34;;;34251:16:72;::::1;::::0;::::1;::::0;45043:18:168;;34251:31:72::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;34242:40;;34381:39;34392:9;34403:8;34413:6;34381:10;:39::i;:::-;34436:43;::::0;;-1:-1:-1;;;;;45686:15:168;;;45668:34;;45738:15;;;45733:2;45718:18;;45711:43;45790:15;;45770:18;;;45763:43;45837:2;45822:18;;45815:34;;;34436:43:72;;::::1;::::0;;;;45617:3:168;34436:43:72;;::::1;33779:731:::0;;;;;;;:::o;43182:368::-;2368:5:73;43276:22:72;:53;;43268:133;;;;-1:-1:-1;;;43268:133:72;;46062:2:168;43268:133:72;;;46044:21:168;46101:2;46081:18;;;46074:30;46140:34;46120:18;;;46113:62;46211:34;46191:18;;;46184:62;-1:-1:-1;;;46262:19:168;;;46255:34;46306:19;;43268:133:72;45860:471:168;43268:133:72;43441:21;;43416:71;;;46510:25:168;;;46566:2;46551:18;;46544:34;;;43416:71:72;;46483:18:168;43416:71:72;;;;;;;43497:21;:46;43182:368::o;2673:187:18:-;2765:6;;;-1:-1:-1;;;;;2781:17:18;;;-1:-1:-1;;;;;;2781:17:18;;;;;;;2813:40;;2765:6;;;2781:17;2765:6;;2813:40;;2746:16;;2813:40;2736:124;2673:187;:::o;41544:220:72:-;-1:-1:-1;;;;;41611:29:72;;;;;;:18;:29;;;;;:36;:41;41603:112;;;;-1:-1:-1;;;41603:112:72;;46791:2:168;41603:112:72;;;46773:21:168;46830:2;46810:18;;;46803:30;46869:34;46849:18;;;46842:62;46940:28;46920:18;;;46913:56;46986:19;;41603:112:72;46589:422:168;41603:112:72;41725:32;;-1:-1:-1;;;41725:32:72;;-1:-1:-1;;;;;6453:32:168;;;41725::72;;;6435:51:168;41725:10:72;:21;;;;6408:18:168;;41725:32:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;41544:220;:::o;32411:1038::-;-1:-1:-1;;;;;32548:23:72;;32540:96;;;;-1:-1:-1;;;32540:96:72;;47218:2:168;32540:96:72;;;47200:21:168;47257:2;47237:18;;;47230:30;47296:34;47276:18;;;47269:62;47367:30;47347:18;;;47340:58;47415:19;;32540:96:72;47016:424:168;32540:96:72;32654:11;32646:78;;;;-1:-1:-1;;;32646:78:72;;47647:2:168;32646:78:72;;;47629:21:168;47686:2;47666:18;;;47659:30;47725:34;47705:18;;;47698:62;-1:-1:-1;;;47776:18:168;;;47769:52;47838:19;;32646:78:72;47445:418:168;32646:78:72;-1:-1:-1;;;;;32825:31:72;;;;;;;:20;:31;;;;;;;;:41;;;;;;;;;;32821:344;;-1:-1:-1;;;;;32912:29:72;;;;;;:18;1334:2:73;32912:29:72;;;;;;;:36;:70;32887:209;;;;-1:-1:-1;;;32887:209:72;;48070:2:168;32887:209:72;;;48052:21:168;48109:2;48089:18;;;48082:30;48148:34;48128:18;;;48121:62;48219:34;48199:18;;;48192:62;-1:-1:-1;;;48270:19:168;;;48263:47;48327:19;;32887:209:72;47868:484:168;32887:209:72;-1:-1:-1;;;;;33110:29:72;;;;;;;:18;:29;;;;;;;:44;;;;;;;;;;;;;;;-1:-1:-1;;;;;;33110:44:72;;;;;;;;;;32821:344;-1:-1:-1;;;;;33253:31:72;;;;;;;:20;:31;;;;;;;;:41;;;;;;;;;;;:51;;33298:6;;33253:31;:51;;33298:6;;33253:51;:::i;:::-;;;;-1:-1:-1;;33379:63:72;;-1:-1:-1;;;33379:63:72;;-1:-1:-1;;;;;33379:10:72;:34;;;;:63;;33414:9;;33425:8;;33435:6;;33379:63;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;32411:1038;;;:::o;2336:438:112:-;2470:14;;-1:-1:-1;;;;;2470:14:112;2462:37;:79;;;;-1:-1:-1;;;;;;2503:38:112;;;;2462:79;2441:197;;;;-1:-1:-1;;;2441:197:112;;48958:2:168;2441:197:112;;;48940:21:168;48997:2;48977:18;;;48970:30;49036:34;49016:18;;;49009:62;49107:34;49087:18;;;49080:62;-1:-1:-1;;;49158:19:168;;;49151:38;49206:19;;2441:197:112;48756:475:168;2441:197:112;2648:7;:26;;;2689:36;;2641:25:168;;;2696:10:112;;2689:36;;2629:2:168;2614:18;2689:36:112;;;;;;;-1:-1:-1;2735:14:112;:32;;-1:-1:-1;;;;;;2735:32:112;-1:-1:-1;;;;;2735:32:112;;;;;;;;;;2336:438::o;43703:221:72:-;43819:19;;43792:71;;;-1:-1:-1;;;;;43819:19:72;;;49448:34:168;;49518:15;;;49513:2;49498:18;;49491:43;43792:71:72;;49383:18:168;43792:71:72;;;;;;;43873:19;:44;;-1:-1:-1;;;;;;43873:44:72;-1:-1:-1;;;;;43873:44:72;;;;;;;;;;43703:221::o;38125:3183::-;38296:33;;;;;;;;:::i;:::-;4470:24;;-1:-1:-1;;;4470:24:72;;-1:-1:-1;;;;;6453:32:168;;;4470:24:72;;;6435:51:168;4470:7:72;:16;;;;6408:18:168;;4470:24:72;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4469:25;4448:156;;;;-1:-1:-1;;;4448:156:72;;;;;;;:::i;:::-;38385:22:::1;38410:41;;38434:16:::0;38410:41:::1;:::i;:::-;38539:37;::::0;;;:21:::1;:37;::::0;;;;;38385:66;;-1:-1:-1;38539:37:72::1;;38518:151;;;::::0;-1:-1:-1;;;38518:151:72;;49747:2:168;38518:151:72::1;::::0;::::1;49729:21:168::0;49786:2;49766:18;;;49759:30;-1:-1:-1;;;;;;;;;;;49805:18:168;;;49798:62;49896:34;49876:18;;;49869:62;-1:-1:-1;;;49947:19:168;;;49940:34;49991:19;;38518:151:72::1;49545:471:168::0;38518:151:72::1;-1:-1:-1::0;;;;;38701:7:72::1;:19;;38721:33;::::0;;;::::1;::::0;::::1;;:::i;:::-;38756:37;::::0;;;::::1;::::0;::::1;;:::i;:::-;38701:115;::::0;-1:-1:-1;;;;;;38701:115:72::1;::::0;;;;;;-1:-1:-1;;;;;50428:32:168;;;38701:115:72::1;::::0;::::1;50410:51:168::0;38701:115:72::1;50497:23:168::0;50477:18;;;50470:51;50537:18;;;50530:34;;;50383:18;;38701:115:72::1;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;38680:249;;;::::0;-1:-1:-1;;;38680:249:72;;50777:2:168;38680:249:72::1;::::0;::::1;50759:21:168::0;50816:2;50796:18;;;50789:30;-1:-1:-1;;;;;;;;;;;50835:18:168;;;50828:62;50926:34;50906:18;;;50899:62;50998:25;50977:19;;;50970:54;51041:19;;38680:249:72::1;50575:491:168::0;38680:249:72::1;39119:21;::::0;39144:12:::1;::::0;39079:37:::1;::::0;;;::::1;::::0;::::1;;:::i;:::-;:61;;;;;;:::i;:::-;:77;;:154;;;-1:-1:-1::0;4462:42:73::1;39177:27:72;:16:::0;;:27:::1;:::i;:::-;39205:1;39177:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;39177:56:72::1;;39079:154;39071:277;;;::::0;-1:-1:-1;;;39071:277:72;;51273:2:168;39071:277:72::1;::::0;::::1;51255:21:168::0;51312:2;51292:18;;;51285:30;-1:-1:-1;;;;;;;;;;;51331:18:168;;;51324:62;51422:34;51402:18;;;51395:62;51494:27;51473:19;;;51466:56;51539:19;;39071:277:72::1;51071:493:168::0;39071:277:72::1;39394:46;::::0;;;:35:::1;::::0;::::1;:46;:::i;:::-;-1:-1:-1::0;;;;;39380:60:72::1;:10;-1:-1:-1::0;;;;;39380:60:72::1;;39359:207;;;::::0;-1:-1:-1;;;39359:207:72;;51771:2:168;39359:207:72::1;::::0;::::1;51753:21:168::0;51810:3;51790:18;;;51783:31;;;-1:-1:-1;;;;;;;;;;;51830:18:168;;;51823:62;51921:34;51901:18;;;51894:62;51993:34;51972:19;;;51965:63;-1:-1:-1;;;52044:19:168;;;52037:35;52089:19;;39359:207:72::1;51569:545:168::0;39359:207:72::1;39684:5;39644:37:::0;;;:21:::1;:37;::::0;;;;:45;;-1:-1:-1;;39644:45:72::1;::::0;;39767:27:::1;:16:::0;;:27:::1;:::i;:::-;:34:::0;-1:-1:-1;;39909:1260:72;::::1;;;39969:27;:16:::0;;:27:::1;:::i;:::-;39952:51:::0;::::1;::::0;-1:-1:-1;39944:127:72::1;;;::::0;-1:-1:-1;;;39944:127:72;;52321:2:168;39944:127:72::1;::::0;::::1;52303:21:168::0;52360:2;52340:18;;;52333:30;-1:-1:-1;;;;;;;;;;;52379:18:168;;;52372:62;52470:33;52450:18;;;52443:61;52521:19;;39944:127:72::1;52119:427:168::0;39944:127:72::1;40133:9;40128:730;40152:16;40148:1;:20;40128:730;;;4462:42:73;40193:27:72;:16:::0;;:27:::1;:::i;:::-;40221:1;40193:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;40193:56:72::1;;40189:584;;;40382:91;40406:26;::::0;;;::::1;::::0;::::1;;:::i;:::-;40434:10;40446:23;;::::0;::::1;:16:::0;:23:::1;:::i;40382:91::-;40189:584;;;40618:27;:16:::0;;:27:::1;:::i;:::-;40646:1;40618:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1::0;;;;;40618:39:72::1;;40683:10;40695:6;;40702:1;40695:9;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;40706:23;;::::0;::::1;:16:::0;:23:::1;:::i;:::-;40730:1;40706:26;;;;;;;:::i;:::-;;;;;;;40618:136;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;::::0;::::1;;;;;;;;;40189:584;40822:3;;40128:730;;;;39909:1260;;;40935:9;40930:229;40954:16;40950:1;:20;40930:229;;;40991:82;41002:10;41014:27;:16:::0;;:27:::1;:::i;:::-;41042:1;41014:30;;;;;;;:::i;:::-;;;;;;;;;;;;;;:::i;:::-;41046:23;;::::0;::::1;:16:::0;:23:::1;:::i;:::-;41070:1;41046:26;;;;;;;:::i;:::-;;;;;;;40991:10;:82::i;:::-;41123:3;;40930:229;;;;39909:1260;41274:10;41203:26;::::0;;;::::1;::::0;::::1;;:::i;:::-;-1:-1:-1::0;;;;;41183:118:72::1;;41231:41;::::0;;;;;;::::1;:::i;:::-;41183:118;::::0;;-1:-1:-1;;;;;52930:39:168;;;52912:58;;53001:2;52986:18;;52979:34;;;52885:18;41183:118:72::1;;;;;;;38340:2968;;38125:3183:::0;;;;;;:::o;36610:1414::-;-1:-1:-1;;;;;36810:29:72;;;;;;;:18;:29;;;;;:44;;:56;;;;36840:13;;36810:44;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;36810:44:72;:56;36806:1107;;;-1:-1:-1;;;;;37016:29:72;;;;;;:18;:29;;;;;37046:36;;:40;;37085:1;;37046:40;:::i;:::-;37016:71;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;36953:29:72;;;;;:18;:29;;;;;;;:44;;37016:71;;;;;36953:29;36983:13;;36953:44;;;;;;:::i;:::-;;;;;;;;;:134;;;;;-1:-1:-1;;;;;36953:134:72;;;;;-1:-1:-1;;;;;36953:134:72;;;;;;36806:1107;;;-1:-1:-1;;;;;37224:29:72;;37201:20;37224:29;;;:18;:29;;;;;:36;;37301:431;37312:12;37308:1;:16;37301:431;;;-1:-1:-1;;;;;37349:29:72;;;;;;;:18;:29;;;;;:32;;:44;;;;37379:1;;37349:32;;;;;;:::i;:::-;;;;;;;;;;;-1:-1:-1;;;;;37349:32:72;:44;37345:302;;;-1:-1:-1;;;;;37530:29:72;;;;;;:18;:29;;;;;37560:36;;:40;;37599:1;;37560:40;:::i;:::-;37530:71;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;37495:29:72;;;;;:18;:29;;;;;;;:32;;37530:71;;;;;37495:29;37525:1;;37495:32;;;;;;:::i;:::-;;;;;;;;;:106;;;;;-1:-1:-1;;;;;37495:106:72;;;;;-1:-1:-1;;;;;37495:106:72;;;;;;37623:5;;37345:302;37696:3;;37301:431;;;37812:12;37807:1;:17;;37799:103;;;;-1:-1:-1;;;37799:103:72;;53226:2:168;37799:103:72;;;53208:21:168;53265:2;53245:18;;;53238:30;53304:34;53284:18;;;53277:62;53375:34;53355:18;;;53348:62;-1:-1:-1;;;53426:19:168;;;53419:40;53476:19;;37799:103:72;53024:477:168;37799:103:72;37104:809;;36806:1107;-1:-1:-1;;;;;37982:29:72;;;;;;:18;:29;;;;;:35;;;;;;;:::i;:::-;;;;;;;;;;-1:-1:-1;;37982:35:72;;;;;-1:-1:-1;;;;;;37982:35:72;;;;;;-1:-1:-1;;;36610:1414:72:o;2243:1373:52:-;2324:7;2333:12;2554:9;:16;2574:2;2554:22;2550:1060;;;2890:4;2875:20;;2869:27;2939:4;2924:20;;2918:27;2996:4;2981:20;;2975:27;2592:9;2967:36;3037:25;3048:4;2967:36;2869:27;2918;3037:10;:25::i;:::-;3030:32;;;;;;;;;2550:1060;3083:9;:16;3103:2;3083:22;3079:531;;;3399:4;3384:20;;3378:27;3449:4;3434:20;;3428:27;3489:23;3500:4;3378:27;3428;3489:10;:23::i;:::-;3482:30;;;;;;;;3079:531;-1:-1:-1;3559:1:52;;-1:-1:-1;3563:35:52;3079:531;2243:1373;;;;;:::o;548:631::-;625:20;616:5;:29;;;;;;;;:::i;:::-;;612:561;;;548:631;:::o;612:561::-;721:29;712:5;:38;;;;;;;;:::i;:::-;;708:465;;;766:34;;-1:-1:-1;;;766:34:52;;53972:2:168;766:34:52;;;53954:21:168;54011:2;53991:18;;;53984:30;54050:26;54030:18;;;54023:54;54094:18;;766:34:52;53770:348:168;708:465:52;830:35;821:5;:44;;;;;;;;:::i;:::-;;817:356;;;881:41;;-1:-1:-1;;;881:41:52;;54325:2:168;881:41:52;;;54307:21:168;54364:2;54344:18;;;54337:30;54403:33;54383:18;;;54376:61;54454:18;;881:41:52;54123:355:168;817:356:52;952:30;943:5;:39;;;;;;;;:::i;:::-;;939:234;;;998:44;;-1:-1:-1;;;998:44:52;;54685:2:168;998:44:52;;;54667:21:168;54724:2;54704:18;;;54697:30;54763:34;54743:18;;;54736:62;-1:-1:-1;;;54814:18:168;;;54807:32;54856:19;;998:44:52;54483:398:168;939:234:52;1072:30;1063:5;:39;;;;;;;;:::i;:::-;;1059:114;;;1118:44;;-1:-1:-1;;;1118:44:52;;55088:2:168;1118:44:52;;;55070:21:168;55127:2;55107:18;;;55100:30;55166:34;55146:18;;;55139:62;-1:-1:-1;;;55217:18:168;;;55210:32;55259:19;;1118:44:52;54886:398:168;974:241:46;1112:96;1132:5;1162:27;;;1191:4;1197:2;1201:5;1139:68;;;;;;;;;;:::i;:::-;;;;-1:-1:-1;;1139:68:46;;;;;;;;;;;;;;-1:-1:-1;;;;;1139:68:46;-1:-1:-1;;;;;;1139:68:46;;;;;;;;;;1112:19;:96::i;5810:1603:52:-;5936:7;;6860:66;6847:79;;6843:161;;;-1:-1:-1;6958:1:52;;-1:-1:-1;6962:30:52;6942:51;;6843:161;7017:1;:7;;7022:2;7017:7;;:18;;;;;7028:1;:7;;7033:2;7028:7;;7017:18;7013:100;;;-1:-1:-1;7067:1:52;;-1:-1:-1;7071:30:52;7051:51;;7013:100;7224:24;;;7207:14;7224:24;;;;;;;;;55516:25:168;;;55589:4;55577:17;;55557:18;;;55550:45;;;;55611:18;;;55604:34;;;55654:18;;;55647:34;;;7224:24:52;;55488:19:168;;7224:24:52;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;7224:24:52;;-1:-1:-1;;7224:24:52;;;-1:-1:-1;;;;;;;7262:20:52;;7258:101;;7314:1;7318:29;7298:50;;;;;;;7258:101;7377:6;-1:-1:-1;7385:20:52;;-1:-1:-1;5810:1603:52;;;;;;;;:::o;4883:336::-;4993:7;;-1:-1:-1;;;;;5038:80:52;;4993:7;5144:25;5160:3;5145:18;;;5167:2;5144:25;:::i;:::-;5128:42;;5187:25;5198:4;5204:1;5207;5210;5187:10;:25::i;:::-;5180:32;;;;;;4883:336;;;;;;:::o;3747:706:46:-;4166:23;4192:69;4220:4;4192:69;;;;;;;;;;;;;;;;;4200:5;-1:-1:-1;;;;;4192:27:46;;;:69;;;;;:::i;:::-;4275:17;;4166:95;;-1:-1:-1;4275:21:46;4271:176;;4370:10;4359:30;;;;;;;;;;;;:::i;:::-;4351:85;;;;-1:-1:-1;;;4351:85:46;;55894:2:168;4351:85:46;;;55876:21:168;55933:2;55913:18;;;55906:30;55972:34;55952:18;;;55945:62;-1:-1:-1;;;56023:18:168;;;56016:40;56073:19;;4351:85:46;55692:406:168;4351:85:46;3817:636;3747:706;;:::o;3861:223:47:-;3994:12;4025:52;4047:6;4055:4;4061:1;4064:12;4025:21;:52::i;:::-;4018:59;;3861:223;;;;;;:::o;4948:499::-;5113:12;5170:5;5145:21;:30;;5137:81;;;;-1:-1:-1;;;5137:81:47;;56305:2:168;5137:81:47;;;56287:21:168;56344:2;56324:18;;;56317:30;56383:34;56363:18;;;56356:62;-1:-1:-1;;;56434:18:168;;;56427:36;56480:19;;5137:81:47;56103:402:168;5137:81:47;-1:-1:-1;;;;;1465:19:47;;;5228:60;;;;-1:-1:-1;;;5228:60:47;;56712:2:168;5228:60:47;;;56694:21:168;56751:2;56731:18;;;56724:30;56790:31;56770:18;;;56763:59;56839:18;;5228:60:47;56510:353:168;5228:60:47;5300:12;5314:23;5341:6;-1:-1:-1;;;;;5341:11:47;5360:5;5367:4;5341:31;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;5299:73;;;;5389:51;5406:7;5415:10;5427:12;5389:16;:51::i;:::-;5382:58;4948:499;-1:-1:-1;;;;;;;4948:499:47:o;7561:742::-;7707:12;7735:7;7731:566;;;-1:-1:-1;7765:10:47;7758:17;;7731:566;7876:17;;:21;7872:415;;8120:10;8114:17;8180:15;8167:10;8163:2;8159:19;8152:44;7872:415;8259:12;8252:20;;-1:-1:-1;;;8252:20:47;;;;;;;;:::i;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;14:131:168:-;-1:-1:-1;;;;;89:31:168;;79:42;;69:70;;135:1;132;125:12;150:134;218:20;;247:31;218:20;247:31;:::i;:::-;150:134;;;:::o;289:378::-;363:8;373:6;427:3;420:4;412:6;408:17;404:27;394:55;;445:1;442;435:12;394:55;-1:-1:-1;468:20:168;;-1:-1:-1;;;;;500:30:168;;497:50;;;543:1;540;533:12;497:50;580:4;572:6;568:17;556:29;;640:3;633:4;623:6;620:1;616:14;608:6;604:27;600:38;597:47;594:67;;;657:1;654;647:12;672:1633;919:6;927;935;943;951;959;967;975;983;991;1044:3;1032:9;1023:7;1019:23;1015:33;1012:53;;;1061:1;1058;1051:12;1012:53;1084:29;1103:9;1084:29;:::i;:::-;1074:39;;1132:38;1166:2;1155:9;1151:18;1132:38;:::i;:::-;1122:48;;1221:2;1210:9;1206:18;1193:32;-1:-1:-1;;;;;1285:2:168;1277:6;1274:14;1271:34;;;1301:1;1298;1291:12;1271:34;1340:81;1413:7;1404:6;1393:9;1389:22;1340:81;:::i;:::-;1440:8;;-1:-1:-1;1314:107:168;-1:-1:-1;1528:2:168;1513:18;;1500:32;;-1:-1:-1;1544:16:168;;;1541:36;;;1573:1;1570;1563:12;1541:36;1612:83;1687:7;1676:8;1665:9;1661:24;1612:83;:::i;:::-;1714:8;;-1:-1:-1;1586:109:168;-1:-1:-1;1802:3:168;1787:19;;1774:33;;-1:-1:-1;1819:16:168;;;1816:36;;;1848:1;1845;1838:12;1816:36;1887:83;1962:7;1951:8;1940:9;1936:24;1887:83;:::i;:::-;1989:8;;-1:-1:-1;1861:109:168;-1:-1:-1;2077:3:168;2062:19;;2049:33;;-1:-1:-1;2094:16:168;;;2091:36;;;2123:1;2120;2113:12;2091:36;;2162:83;2237:7;2226:8;2215:9;2211:24;2162:83;:::i;:::-;2136:109;;2264:8;2254:18;;;2291:8;2281:18;;;672:1633;;;;;;;;;;;;;:::o;2310:180::-;2369:6;2422:2;2410:9;2401:7;2397:23;2393:32;2390:52;;;2438:1;2435;2428:12;2390:52;-1:-1:-1;2461:23:168;;2310:180;-1:-1:-1;2310:180:168:o;2677:127::-;2738:10;2733:3;2729:20;2726:1;2719:31;2769:4;2766:1;2759:15;2793:4;2790:1;2783:15;2809:253;2881:2;2875:9;2923:4;2911:17;;-1:-1:-1;;;;;2943:34:168;;2979:22;;;2940:62;2937:88;;;3005:18;;:::i;:::-;3041:2;3034:22;2809:253;:::o;3067:275::-;3138:2;3132:9;3203:2;3184:13;;-1:-1:-1;;3180:27:168;3168:40;;-1:-1:-1;;;;;3223:34:168;;3259:22;;;3220:62;3217:88;;;3285:18;;:::i;:::-;3321:2;3314:22;3067:275;;-1:-1:-1;3067:275:168:o;3347:1354::-;3495:6;3503;3511;3519;3527;3535;3588:3;3576:9;3567:7;3563:23;3559:33;3556:53;;;3605:1;3602;3595:12;3556:53;3644:9;3631:23;3663:31;3688:5;3663:31;:::i;:::-;3713:5;-1:-1:-1;3737:2:168;3776:18;;;3763:32;3804:33;3763:32;3804:33;:::i;:::-;3856:7;-1:-1:-1;3910:2:168;3895:18;;3882:32;;-1:-1:-1;3966:2:168;3951:18;;3938:32;3979:33;3938:32;3979:33;:::i;:::-;4031:7;-1:-1:-1;4085:3:168;4070:19;;4057:33;;-1:-1:-1;4141:3:168;4126:19;;4113:33;-1:-1:-1;;;;;4195:14:168;;;4192:34;;;4222:1;4219;4212:12;4192:34;4260:6;4249:9;4245:22;4235:32;;4305:7;4298:4;4294:2;4290:13;4286:27;4276:55;;4327:1;4324;4317:12;4276:55;4363:2;4350:16;4385:2;4381;4378:10;4375:36;;;4391:18;;:::i;:::-;4433:53;4476:2;4457:13;;-1:-1:-1;;4453:27:168;4449:36;;4433:53;:::i;:::-;4420:66;;4509:2;4502:5;4495:17;4549:7;4544:2;4539;4535;4531:11;4527:20;4524:33;4521:53;;;4570:1;4567;4560:12;4521:53;4625:2;4620;4616;4612:11;4607:2;4600:5;4596:14;4583:45;4669:1;4664:2;4659;4652:5;4648:14;4644:23;4637:34;;4690:5;4680:15;;;;;3347:1354;;;;;;;;:::o;4888:165::-;4957:5;5002:3;4993:6;4988:3;4984:16;4980:26;4977:46;;;5019:1;5016;5009:12;4977:46;-1:-1:-1;5041:6:168;4888:165;-1:-1:-1;4888:165:168:o;5058:1200::-;5251:6;5259;5267;5275;5283;5291;5344:3;5332:9;5323:7;5319:23;5315:33;5312:53;;;5361:1;5358;5351:12;5312:53;5400:9;5387:23;5419:31;5444:5;5419:31;:::i;:::-;5469:5;-1:-1:-1;5525:2:168;5510:18;;5497:32;-1:-1:-1;;;;;5578:14:168;;;5575:34;;;5605:1;5602;5595:12;5575:34;5628:76;5696:7;5687:6;5676:9;5672:22;5628:76;:::i;:::-;5618:86;;5757:2;5746:9;5742:18;5729:32;5713:48;;5786:2;5776:8;5773:16;5770:36;;;5802:1;5799;5792:12;5770:36;5841:83;5916:7;5905:8;5894:9;5890:24;5841:83;:::i;:::-;5943:8;;-1:-1:-1;5815:109:168;-1:-1:-1;6031:2:168;6016:18;;6003:32;;-1:-1:-1;6047:16:168;;;6044:36;;;6076:1;6073;6066:12;6044:36;;6115:83;6190:7;6179:8;6168:9;6164:24;6115:83;:::i;:::-;5058:1200;;;;-1:-1:-1;5058:1200:168;;-1:-1:-1;5058:1200:168;;6217:8;;5058:1200;-1:-1:-1;;;5058:1200:168:o;6497:247::-;6556:6;6609:2;6597:9;6588:7;6584:23;6580:32;6577:52;;;6625:1;6622;6615:12;6577:52;6664:9;6651:23;6683:31;6708:5;6683:31;:::i;6749:269::-;6806:6;6859:2;6847:9;6838:7;6834:23;6830:32;6827:52;;;6875:1;6872;6865:12;6827:52;6914:9;6901:23;6964:4;6957:5;6953:16;6946:5;6943:27;6933:55;;6984:1;6981;6974:12;7215:467;7320:6;7328;7381:2;7369:9;7360:7;7356:23;7352:32;7349:52;;;7397:1;7394;7387:12;7349:52;7437:9;7424:23;-1:-1:-1;;;;;7462:6:168;7459:30;7456:50;;;7502:1;7499;7492:12;7456:50;7541:81;7614:7;7605:6;7594:9;7590:22;7541:81;:::i;:::-;7641:8;;7515:107;;-1:-1:-1;7215:467:168;-1:-1:-1;;;;7215:467:168:o;7687:383::-;7764:6;7772;7780;7833:2;7821:9;7812:7;7808:23;7804:32;7801:52;;;7849:1;7846;7839:12;7801:52;7888:9;7875:23;7907:31;7932:5;7907:31;:::i;:::-;7957:5;8009:2;7994:18;;7981:32;;-1:-1:-1;8060:2:168;8045:18;;;8032:32;;7687:383;-1:-1:-1;;;7687:383:168:o;8346:407::-;8433:6;8441;8494:2;8482:9;8473:7;8469:23;8465:32;8462:52;;;8510:1;8507;8500:12;8462:52;8549:9;8536:23;8568:31;8593:5;8568:31;:::i;:::-;8618:5;-1:-1:-1;8675:2:168;8660:18;;8647:32;8688:33;8647:32;8688:33;:::i;:::-;8740:7;8730:17;;;8346:407;;;;;:::o;9426:472::-;9490:3;9528:5;9522:12;9555:6;9550:3;9543:19;9581:4;9610:2;9605:3;9601:12;9594:19;;9647:2;9640:5;9636:14;9668:1;9678:195;9692:6;9689:1;9686:13;9678:195;;;9757:13;;-1:-1:-1;;;;;9753:39:168;9741:52;;9813:12;;;;9848:15;;;;9789:1;9707:9;9678:195;;;-1:-1:-1;9889:3:168;;9426:472;-1:-1:-1;;;;;9426:472:168:o;9903:435::-;9956:3;9994:5;9988:12;10021:6;10016:3;10009:19;10047:4;10076:2;10071:3;10067:12;10060:19;;10113:2;10106:5;10102:14;10134:1;10144:169;10158:6;10155:1;10152:13;10144:169;;;10219:13;;10207:26;;10253:12;;;;10288:15;;;;10180:1;10173:9;10144:169;;10343:495;10619:2;10608:9;10601:21;10582:4;10645:67;10708:2;10697:9;10693:18;10685:6;10645:67;:::i;:::-;10760:9;10752:6;10748:22;10743:2;10732:9;10728:18;10721:50;10788:44;10825:6;10817;10788:44;:::i;:::-;10780:52;10343:495;-1:-1:-1;;;;;10343:495:168:o;10843:315::-;10911:6;10919;10972:2;10960:9;10951:7;10947:23;10943:32;10940:52;;;10988:1;10985;10978:12;10940:52;11027:9;11014:23;11046:31;11071:5;11046:31;:::i;:::-;11096:5;11148:2;11133:18;;;;11120:32;;-1:-1:-1;;;10843:315:168:o;11163:692::-;11283:6;11291;11299;11307;11315;11368:3;11356:9;11347:7;11343:23;11339:33;11336:53;;;11385:1;11382;11375:12;11336:53;11424:9;11411:23;11443:31;11468:5;11443:31;:::i;:::-;11493:5;-1:-1:-1;11550:2:168;11535:18;;11522:32;11563:33;11522:32;11563:33;:::i;:::-;11615:7;-1:-1:-1;11674:2:168;11659:18;;11646:32;11687:33;11646:32;11687:33;:::i;:::-;11163:692;;;;-1:-1:-1;11739:7:168;;11793:2;11778:18;;11765:32;;-1:-1:-1;11844:3:168;11829:19;11816:33;;11163:692;-1:-1:-1;;11163:692:168:o;11860:1525::-;12131:6;12139;12147;12155;12163;12171;12179;12187;12240:3;12228:9;12219:7;12215:23;12211:33;12208:53;;;12257:1;12254;12247:12;12208:53;12297:9;12284:23;-1:-1:-1;;;;;12367:2:168;12359:6;12356:14;12353:34;;;12383:1;12380;12373:12;12353:34;12422:81;12495:7;12486:6;12475:9;12471:22;12422:81;:::i;:::-;12522:8;;-1:-1:-1;12396:107:168;-1:-1:-1;12610:2:168;12595:18;;12582:32;;-1:-1:-1;12626:16:168;;;12623:36;;;12655:1;12652;12645:12;12623:36;12694:83;12769:7;12758:8;12747:9;12743:24;12694:83;:::i;:::-;12796:8;;-1:-1:-1;12668:109:168;-1:-1:-1;12884:2:168;12869:18;;12856:32;;-1:-1:-1;12900:16:168;;;12897:36;;;12929:1;12926;12919:12;12897:36;12968:83;13043:7;13032:8;13021:9;13017:24;12968:83;:::i;:::-;13070:8;;-1:-1:-1;12942:109:168;-1:-1:-1;13158:2:168;13143:18;;13130:32;;-1:-1:-1;13174:16:168;;;13171:36;;;13203:1;13200;13193:12;13171:36;;13242:83;13317:7;13306:8;13295:9;13291:24;13242:83;:::i;:::-;11860:1525;;;;-1:-1:-1;11860:1525:168;;-1:-1:-1;11860:1525:168;;;;;;13344:8;-1:-1:-1;;;11860:1525:168:o;13616:194::-;13687:4;-1:-1:-1;;;;;13712:6:168;13709:30;13706:56;;;13742:18;;:::i;:::-;-1:-1:-1;13787:1:168;13783:14;13799:4;13779:25;;13616:194::o;13815:759::-;13880:5;13933:3;13926:4;13918:6;13914:17;13910:27;13900:55;;13951:1;13948;13941:12;13900:55;13987:6;13974:20;14013:4;14037:71;14053:54;14104:2;14053:54;:::i;:::-;14037:71;:::i;:::-;14142:15;;;14228:1;14224:10;;;;14212:23;;14208:32;;;14173:12;;;;14252:15;;;14249:35;;;14280:1;14277;14270:12;14249:35;14316:2;14308:6;14304:15;14328:217;14344:6;14339:3;14336:15;14328:217;;;14424:3;14411:17;14441:31;14466:5;14441:31;:::i;:::-;14485:18;;14523:12;;;;14361;;14328:217;;;-1:-1:-1;14563:5:168;13815:759;-1:-1:-1;;;;;;13815:759:168:o;14579:673::-;14633:5;14686:3;14679:4;14671:6;14667:17;14663:27;14653:55;;14704:1;14701;14694:12;14653:55;14740:6;14727:20;14766:4;14790:71;14806:54;14857:2;14806:54;:::i;14790:71::-;14895:15;;;14981:1;14977:10;;;;14965:23;;14961:32;;;14926:12;;;;15005:15;;;15002:35;;;15033:1;15030;15023:12;15002:35;15069:2;15061:6;15057:15;15081:142;15097:6;15092:3;15089:15;15081:142;;;15163:17;;15151:30;;15201:12;;;;15114;;15081:142;;15257:179;15324:20;;-1:-1:-1;;;;;15373:38:168;;15363:49;;15353:77;;15426:1;15423;15416:12;15441:565;15506:5;15554:4;15542:9;15537:3;15533:19;15529:30;15526:50;;;15572:1;15569;15562:12;15526:50;15605:4;15599:11;15649:4;15641:6;15637:17;15720:6;15708:10;15705:22;-1:-1:-1;;;;;15672:10:168;15669:34;15666:62;15663:88;;;15731:18;;:::i;:::-;15767:4;15760:24;15802:6;-1:-1:-1;15802:6:168;15832:23;;15864:33;15832:23;15864:33;:::i;:::-;15906:23;;15962:37;15995:2;15980:18;;15962:37;:::i;:::-;15957:2;15949:6;15945:15;15938:62;;15441:565;;;;:::o;16011:163::-;16078:20;;16138:10;16127:22;;16117:33;;16107:61;;16164:1;16161;16154:12;16179:903;16242:5;16290:4;16278:9;16273:3;16269:19;16265:30;16262:50;;;16308:1;16305;16298:12;16262:50;16330:22;;:::i;:::-;16321:31;;16388:9;16375:23;-1:-1:-1;;;;;16458:2:168;16450:6;16447:14;16444:34;;;16474:1;16471;16464:12;16444:34;16501:68;16565:3;16556:6;16545:9;16541:22;16501:68;:::i;:::-;16494:5;16487:83;16623:2;16612:9;16608:18;16595:32;16579:48;;16652:2;16642:8;16639:16;16636:36;;;16668:1;16665;16658:12;16636:36;;16704:59;16759:3;16748:8;16737:9;16733:24;16704:59;:::i;:::-;16699:2;16692:5;16688:14;16681:83;;16796:38;16830:2;16819:9;16815:18;16796:38;:::i;:::-;16791:2;16784:5;16780:14;16773:62;16867:61;16924:3;16919:2;16908:9;16904:18;16867:61;:::i;:::-;16862:2;16855:5;16851:14;16844:85;16963:38;16996:3;16985:9;16981:19;16963:38;:::i;:::-;16956:4;16949:5;16945:16;16938:64;17035:40;17069:4;17058:9;17054:20;17035:40;:::i;:::-;17029:3;17022:5;17018:15;17011:65;16179:903;;;;:::o;17087:364::-;17181:6;17234:2;17222:9;17213:7;17209:23;17205:32;17202:52;;;17250:1;17247;17240:12;17202:52;17290:9;17277:23;-1:-1:-1;;;;;17315:6:168;17312:30;17309:50;;;17355:1;17352;17345:12;17309:50;17378:67;17437:7;17428:6;17417:9;17413:22;17378:67;:::i;17877:491::-;17989:6;17997;18005;18058:2;18046:9;18037:7;18033:23;18029:32;18026:52;;;18074:1;18071;18064:12;18026:52;18113:9;18100:23;18132:31;18157:5;18132:31;:::i;:::-;18182:5;-1:-1:-1;18239:2:168;18224:18;;18211:32;18252:33;18211:32;18252:33;:::i;:::-;17877:491;;18304:7;;-1:-1:-1;;;18358:2:168;18343:18;;;;18330:32;;17877:491::o;18373:118::-;18459:5;18452:13;18445:21;18438:5;18435:32;18425:60;;18481:1;18478;18471:12;18496:1412;18688:6;18696;18704;18712;18720;18728;18736;18744;18797:3;18785:9;18776:7;18772:23;18768:33;18765:53;;;18814:1;18811;18804:12;18765:53;18854:9;18841:23;-1:-1:-1;;;;;18924:2:168;18916:6;18913:14;18910:34;;;18940:1;18937;18930:12;18910:34;18979:81;19052:7;19043:6;19032:9;19028:22;18979:81;:::i;:::-;19079:8;;-1:-1:-1;18953:107:168;-1:-1:-1;19167:2:168;19152:18;;19139:32;;-1:-1:-1;19183:16:168;;;19180:36;;;19212:1;19209;19202:12;19180:36;19251:83;19326:7;19315:8;19304:9;19300:24;19251:83;:::i;:::-;19353:8;;-1:-1:-1;19225:109:168;-1:-1:-1;19441:2:168;19426:18;;19413:32;;-1:-1:-1;19457:16:168;;;19454:36;;;19486:1;19483;19476:12;19454:36;;19525:83;19600:7;19589:8;19578:9;19574:24;19525:83;:::i;:::-;19627:8;;-1:-1:-1;19499:109:168;-1:-1:-1;;19712:2:168;19697:18;;19684:32;19725:31;19684:32;19725:31;:::i;:::-;19775:5;-1:-1:-1;19832:3:168;19817:19;;19804:33;19846:30;19804:33;19846:30;:::i;:::-;19895:7;19885:17;;;18496:1412;;;;;;;;;;;:::o;19913:936::-;20076:6;20084;20092;20100;20108;20161:3;20149:9;20140:7;20136:23;20132:33;20129:53;;;20178:1;20175;20168:12;20129:53;20218:9;20205:23;-1:-1:-1;;;;;20288:2:168;20280:6;20277:14;20274:34;;;20304:1;20301;20294:12;20274:34;20327:76;20395:7;20386:6;20375:9;20371:22;20327:76;:::i;:::-;20317:86;;20456:2;20445:9;20441:18;20428:32;20412:48;;20485:2;20475:8;20472:16;20469:36;;;20501:1;20498;20491:12;20469:36;;20540:83;20615:7;20604:8;20593:9;20589:24;20540:83;:::i;:::-;20642:8;;-1:-1:-1;20514:109:168;-1:-1:-1;;20724:2:168;20709:18;;20696:32;;-1:-1:-1;20778:2:168;20763:18;;20750:32;20791:28;20750:32;20791:28;:::i;:::-;20838:5;20828:15;;;19913:936;;;;;;;;:::o;20854:245::-;20921:6;20974:2;20962:9;20953:7;20949:23;20945:32;20942:52;;;20990:1;20987;20980:12;20942:52;21022:9;21016:16;21041:28;21063:5;21041:28;:::i;21104:418::-;21306:2;21288:21;;;21345:2;21325:18;;;21318:30;21384:34;21379:2;21364:18;;21357:62;-1:-1:-1;;;21450:2:168;21435:18;;21428:52;21512:3;21497:19;;21104:418::o;21527:355::-;21729:2;21711:21;;;21768:2;21748:18;;;21741:30;21807:33;21802:2;21787:18;;21780:61;21873:2;21858:18;;21527:355::o;22306:127::-;22367:10;22362:3;22358:20;22355:1;22348:31;22398:4;22395:1;22388:15;22422:4;22419:1;22412:15;22706:391;-1:-1:-1;;;;;22980:15:168;;;22962:34;;23032:15;;;;23027:2;23012:18;;23005:43;23079:2;23064:18;;23057:34;;;;22912:2;22897:18;;22706:391::o;23102:1211::-;-1:-1:-1;;;;;23505:15:168;;;23487:34;;23437:2;23540;23558:18;;;23551:30;;;23422:18;;;23616:22;;;23389:4;;23696:6;;23669:3;23654:19;;23389:4;23730:260;23744:6;23741:1;23738:13;23730:260;;;23819:6;23806:20;23839:31;23864:5;23839:31;:::i;:::-;23895:14;;23883:27;;23965:15;;;;23930:12;;;;23766:1;23759:9;23730:260;;;-1:-1:-1;24026:19:168;;;24021:2;24006:18;;23999:47;24055:19;;;-1:-1:-1;;;;;24086:31:168;;24083:51;;;24130:1;24127;24120:12;24083:51;24164:6;24161:1;24157:14;24143:28;;24215:6;24207;24202:2;24197:3;24193:12;24180:42;24286:1;24245:16;;24241:25;24275:13;;;-1:-1:-1;24241:25:168;23102:1211;-1:-1:-1;;;;;;;23102:1211:168:o;24318:251::-;24388:6;24441:2;24429:9;24420:7;24416:23;24412:32;24409:52;;;24457:1;24454;24447:12;24409:52;24489:9;24483:16;24508:31;24533:5;24508:31;:::i;24574:404::-;24776:2;24758:21;;;24815:2;24795:18;;;24788:30;24854:34;24849:2;24834:18;;24827:62;-1:-1:-1;;;24920:2:168;24905:18;;24898:38;24968:3;24953:19;;24574:404::o;25408:349::-;25610:2;25592:21;;;25649:2;25629:18;;;25622:30;25688:27;25683:2;25668:18;;25661:55;25748:2;25733:18;;25408:349::o;25762:488::-;25964:2;25946:21;;;26003:2;25983:18;;;25976:30;26042:34;26037:2;26022:18;;26015:62;26113:34;26108:2;26093:18;;26086:62;-1:-1:-1;;;26179:3:168;26164:19;;26157:51;26240:3;26225:19;;25762:488::o;28181:258::-;28253:1;28263:113;28277:6;28274:1;28271:13;28263:113;;;28353:11;;;28347:18;28334:11;;;28327:39;28299:2;28292:10;28263:113;;;28394:6;28391:1;28388:13;28385:48;;;-1:-1:-1;;28429:1:168;28411:16;;28404:27;28181:258::o;28444:257::-;28485:3;28523:5;28517:12;28550:6;28545:3;28538:19;28566:63;28622:6;28615:4;28610:3;28606:14;28599:4;28592:5;28588:16;28566:63;:::i;:::-;28683:2;28662:15;-1:-1:-1;;28658:29:168;28649:39;;;;28690:4;28645:50;;28444:257;-1:-1:-1;;28444:257:168:o;28706:288::-;28881:6;28870:9;28863:25;28924:2;28919;28908:9;28904:18;28897:30;28844:4;28944:44;28984:2;28973:9;28969:18;28961:6;28944:44;:::i;28999:290::-;29068:6;29121:2;29109:9;29100:7;29096:23;29092:32;29089:52;;;29137:1;29134;29127:12;29089:52;29163:16;;-1:-1:-1;;;;;;29208:32:168;;29198:43;;29188:71;;29255:1;29252;29245:12;30274:564;30386:4;30392:6;30452:11;30439:25;30546:2;30542:7;30531:8;30515:14;30511:29;30507:43;30487:18;30483:68;30473:96;;30565:1;30562;30555:12;30473:96;30592:33;;30644:20;;;-1:-1:-1;;;;;;30676:30:168;;30673:50;;;30719:1;30716;30709:12;30673:50;30752:4;30740:17;;-1:-1:-1;30803:1:168;30799:14;;;30783;30779:35;30769:46;;30766:66;;;30828:1;30825;30818:12;31272:222;31394:9;31431:57;31473:14;31466:5;31431:57;:::i;:::-;31418:70;31272:222;-1:-1:-1;;31272:222:168:o;32482:472::-;32684:2;32666:21;;;32723:2;32703:18;;;32696:30;32762:34;32757:2;32742:18;;32735:62;32833:34;32828:2;32813:18;;32806:62;-1:-1:-1;;;32899:3:168;32884:19;;32877:35;32944:3;32929:19;;32482:472::o;32959:424::-;33161:2;33143:21;;;33200:2;33180:18;;;33173:30;33239:34;33234:2;33219:18;;33212:62;33310:30;33305:2;33290:18;;33283:58;33373:3;33358:19;;32959:424::o;33388:127::-;33449:10;33444:3;33440:20;33437:1;33430:31;33480:4;33477:1;33470:15;33504:4;33501:1;33494:15;33520:125;33560:4;33588:1;33585;33582:8;33579:34;;;33593:18;;:::i;:::-;-1:-1:-1;33630:9:168;;33520:125::o;33650:128::-;33690:3;33721:1;33717:6;33714:1;33711:13;33708:39;;;33727:18;;:::i;:::-;-1:-1:-1;33763:9:168;;33650:128::o;33783:592::-;-1:-1:-1;;;;;34087:32:168;;34069:51;;34156:2;34151;34136:18;;34129:30;;;-1:-1:-1;;34182:67:168;;34230:18;;34222:6;34182:67;:::i;:::-;34297:9;34289:6;34285:22;34280:2;34269:9;34265:18;34258:50;34325:44;34362:6;34354;34325:44;:::i;:::-;34317:52;33783:592;-1:-1:-1;;;;;;33783:592:168:o;34994:335::-;35097:4;35155:11;35142:25;35249:3;35245:8;35234;35218:14;35214:29;35210:44;35190:18;35186:69;35176:97;;35269:1;35266;35259:12;35176:97;35290:33;;;;;34994:335;-1:-1:-1;;34994:335:168:o;35900:241::-;35956:6;36009:2;35997:9;35988:7;35984:23;35980:32;35977:52;;;36025:1;36022;36015:12;35977:52;36064:9;36051:23;36083:28;36105:5;36083:28;:::i;36146:135::-;36185:3;-1:-1:-1;;36206:17:168;;36203:43;;;36226:18;;:::i;:::-;-1:-1:-1;36273:1:168;36262:13;;36146:135::o;36286:1037::-;36746:3;36735:9;36728:22;36709:4;36773:68;36836:3;36825:9;36821:19;36813:6;36773:68;:::i;:::-;36889:9;36881:6;36877:22;36872:2;36861:9;36857:18;36850:50;36917:44;36954:6;36946;36917:44;:::i;:::-;-1:-1:-1;;;;;37035:15:168;;;37030:2;37015:18;;37008:43;37091:13;;37087:22;;37082:2;37067:18;;37060:50;37169:2;37157:15;;;37151:22;-1:-1:-1;;;;;37147:55:168;37141:3;37126:19;;37119:84;-1:-1:-1;;37252:10:168;37240:23;;;;36988:3;37219:19;;37212:52;37301:15;;;37295:3;37280:19;;;37273:44;;;;36909:52;36286:1037;-1:-1:-1;;36286:1037:168:o;39287:209::-;39319:1;39345;39335:132;;39389:10;39384:3;39380:20;39377:1;39370:31;39424:4;39421:1;39414:15;39452:4;39449:1;39442:15;39335:132;-1:-1:-1;39481:9:168;;39287:209::o;45175:184::-;45245:6;45298:2;45286:9;45277:7;45273:23;45269:32;45266:52;;;45314:1;45311;45304:12;45266:52;-1:-1:-1;45337:16:168;;45175:184;-1:-1:-1;45175:184:168:o;50021:::-;50079:6;50132:2;50120:9;50111:7;50107:23;50103:32;50100:52;;;50148:1;50145;50138:12;50100:52;50171:28;50189:9;50171:28;:::i;52551:184::-;52609:6;52662:2;52650:9;52641:7;52637:23;52633:32;52630:52;;;52678:1;52675;52668:12;52630:52;52701:28;52719:9;52701:28;:::i;53506:127::-;53567:10;53562:3;53558:20;53555:1;53548:31;53598:4;53595:1;53588:15;53622:4;53619:1;53612:15;53638:127;53699:10;53694:3;53690:20;53687:1;53680:31;53730:4;53727:1;53720:15;53754:4;53751:1;53744:15;56868:274;56997:3;57035:6;57029:13;57051:53;57097:6;57092:3;57085:4;57077:6;57073:17;57051:53;:::i;57147:219::-;57296:2;57285:9;57278:21;57259:4;57316:44;57356:2;57345:9;57341:18;57333:6;57316:44;:::i",
    "linkReferences": {},
    "immutableReferences": {
      "40344": [
        {
          "start": 3547,
          "length": 32
        },
        {
          "start": 7592,
          "length": 32
        }
      ],
      "42339": [
        {
          "start": 1580,
          "length": 32
        },
        {
          "start": 2490,
          "length": 32
        },
        {
          "start": 6391,
          "length": 32
        },
        {
          "start": 9260,
          "length": 32
        },
        {
          "start": 10285,
          "length": 32
        },
        {
          "start": 13238,
          "length": 32
        },
        {
          "start": 13921,
          "length": 32
        }
      ],
      "42342": [
        {
          "start": 783,
          "length": 32
        },
        {
          "start": 5911,
          "length": 32
        },
        {
          "start": 6925,
          "length": 32
        },
        {
          "start": 12233,
          "length": 32
        }
      ],
      "42345": [
        {
          "start": 1421,
          "length": 32
        },
        {
          "start": 1750,
          "length": 32
        },
        {
          "start": 3068,
          "length": 32
        },
        {
          "start": 4393,
          "length": 32
        },
        {
          "start": 7069,
          "length": 32
        },
        {
          "start": 8574,
          "length": 32
        },
        {
          "start": 8853,
          "length": 32
        },
        {
          "start": 14441,
          "length": 32
        },
        {
          "start": 14730,
          "length": 32
        }
      ]
    }
  },
  "methodIdentifiers": {
    "DEPOSIT_TYPEHASH()": "48825e94",
    "DOMAIN_SEPARATOR()": "3644e515",
    "DOMAIN_TYPEHASH()": "20606b70",
    "MAX_WITHDRAWAL_DELAY_BLOCKS()": "ca661c04",
    "addStrategiesToDepositWhitelist(address[])": "5de08ff2",
    "beaconChainETHSharesToDecrementOnWithdrawal(address)": "8b88b915",
    "beaconChainETHStrategy()": "9104c319",
    "calculateWithdrawalRoot((address[],uint256[],address,(address,uint96),uint32,address))": "b43b514b",
    "completeQueuedWithdrawal((address[],uint256[],address,(address,uint96),uint32,address),address[],uint256,bool)": "f3be65d3",
    "completeQueuedWithdrawals((address[],uint256[],address,(address,uint96),uint32,address)[],address[][],uint256[],bool[])": "a782d945",
    "delegation()": "df5cf723",
    "depositBeaconChainETH(address,uint256)": "9f00fa24",
    "depositIntoStrategy(address,address,uint256)": "e7a050aa",
    "depositIntoStrategyWithSignature(address,address,uint256,address,uint256,bytes)": "32e89ace",
    "eigenPodManager()": "4665bcda",
    "getDeposits(address)": "94f649dd",
    "initialize(address,address,address,uint256,uint256)": "a6b63eb8",
    "nonces(address)": "7ecebe00",
    "numWithdrawalsQueued(address)": "56631028",
    "owner()": "8da5cb5b",
    "pause(uint256)": "136439dd",
    "pauseAll()": "595c6a67",
    "paused()": "5c975abb",
    "paused(uint8)": "5ac86ab7",
    "pauserRegistry()": "886f1195",
    "queueWithdrawal(uint256[],address[],uint256[],address,bool)": "f123991e",
    "recordOvercommittedBeaconChainETH(address,uint256,uint256)": "63ecafb6",
    "removeStrategiesFromDepositWhitelist(address[])": "b5d8b5b8",
    "renounceOwnership()": "715018a6",
    "setStrategyWhitelister(address)": "c6656702",
    "setWithdrawalDelayBlocks(uint256)": "4d50f9a4",
    "slashQueuedWithdrawal(address,(address[],uint256[],address,(address,uint96),uint32,address),address[],uint256[])": "43c09061",
    "slashShares(address,address,address[],address[],uint256[],uint256[])": "06f1f684",
    "slasher()": "b1344271",
    "stakerStrategyList(address,uint256)": "cbc2bd62",
    "stakerStrategyListLength(address)": "8b8aac3c",
    "stakerStrategyShares(address,address)": "7a7e0d92",
    "strategyIsWhitelistedForDeposit(address)": "663c1de4",
    "strategyWhitelister()": "967fc0d2",
    "transferOwnership(address)": "f2fde38b",
    "undelegate()": "92ab89bb",
    "unpause(uint256)": "fabc1cbc",
    "withdrawalDelayBlocks()": "50f73e7c",
    "withdrawalRootPending(bytes32)": "c3c6b3a9"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"_delegation\",\"type\":\"address\"},{\"internalType\":\"contract IEigenPodManager\",\"name\":\"_eigenPodManager\",\"type\":\"address\"},{\"internalType\":\"contract ISlasher\",\"name\":\"_slasher\",\"type\":\"address\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"Deposit\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"version\",\"type\":\"uint8\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Paused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"name\":\"ShareWithdrawalQueued\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyAddedToDepositWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"}],\"name\":\"StrategyRemovedFromDepositWhitelist\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"previousAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"newAddress\",\"type\":\"address\"}],\"name\":\"StrategyWhitelisterChanged\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"Unpaused\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"}],\"name\":\"WithdrawalCompleted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"previousValue\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"newValue\",\"type\":\"uint256\"}],\"name\":\"WithdrawalDelayBlocksSet\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"delegatedAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"withdrawalRoot\",\"type\":\"bytes32\"}],\"name\":\"WithdrawalQueued\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"DEPOSIT_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_SEPARATOR\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"DOMAIN_TYPEHASH\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"MAX_WITHDRAWAL_DELAY_BLOCKS\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategiesToWhitelist\",\"type\":\"address[]\"}],\"name\":\"addStrategiesToDepositWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"beaconChainETHSharesToDecrementOnWithdrawal\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"beaconChainETHStrategy\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"}],\"internalType\":\"struct IStrategyManager.WithdrawerAndNonce\",\"name\":\"withdrawerAndNonce\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"withdrawalStartBlock\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"delegatedAddress\",\"type\":\"address\"}],\"internalType\":\"struct IStrategyManager.QueuedWithdrawal\",\"name\":\"queuedWithdrawal\",\"type\":\"tuple\"}],\"name\":\"calculateWithdrawalRoot\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"pure\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"}],\"internalType\":\"struct IStrategyManager.WithdrawerAndNonce\",\"name\":\"withdrawerAndNonce\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"withdrawalStartBlock\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"delegatedAddress\",\"type\":\"address\"}],\"internalType\":\"struct IStrategyManager.QueuedWithdrawal\",\"name\":\"queuedWithdrawal\",\"type\":\"tuple\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256\",\"name\":\"middlewareTimesIndex\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"receiveAsTokens\",\"type\":\"bool\"}],\"name\":\"completeQueuedWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"components\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"}],\"internalType\":\"struct IStrategyManager.WithdrawerAndNonce\",\"name\":\"withdrawerAndNonce\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"withdrawalStartBlock\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"delegatedAddress\",\"type\":\"address\"}],\"internalType\":\"struct IStrategyManager.QueuedWithdrawal[]\",\"name\":\"queuedWithdrawals\",\"type\":\"tuple[]\"},{\"internalType\":\"contract IERC20[][]\",\"name\":\"tokens\",\"type\":\"address[][]\"},{\"internalType\":\"uint256[]\",\"name\":\"middlewareTimesIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"bool[]\",\"name\":\"receiveAsTokens\",\"type\":\"bool[]\"}],\"name\":\"completeQueuedWithdrawals\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"delegation\",\"outputs\":[{\"internalType\":\"contract IDelegationManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositBeaconChainETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"depositIntoStrategy\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"strategy\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"expiry\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"signature\",\"type\":\"bytes\"}],\"name\":\"depositIntoStrategyWithSignature\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"shares\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"eigenPodManager\",\"outputs\":[{\"internalType\":\"contract IEigenPodManager\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"}],\"name\":\"getDeposits\",\"outputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"\",\"type\":\"uint256[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"initialOwner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"initialStrategyWhitelister\",\"type\":\"address\"},{\"internalType\":\"contract IPauserRegistry\",\"name\":\"_pauserRegistry\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"initialPausedStatus\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"_withdrawalDelayBlocks\",\"type\":\"uint256\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"nonces\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"numWithdrawalsQueued\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"pause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauseAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint8\",\"name\":\"index\",\"type\":\"uint8\"}],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"paused\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"pauserRegistry\",\"outputs\":[{\"internalType\":\"contract IPauserRegistry\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"strategyIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"undelegateIfPossible\",\"type\":\"bool\"}],\"name\":\"queueWithdrawal\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"overcommittedPodOwner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"beaconChainETHStrategyIndex\",\"type\":\"uint256\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"recordOvercommittedBeaconChainETH\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategiesToRemoveFromWhitelist\",\"type\":\"address[]\"}],\"name\":\"removeStrategiesFromDepositWhitelist\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newStrategyWhitelister\",\"type\":\"address\"}],\"name\":\"setStrategyWhitelister\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_withdrawalDelayBlocks\",\"type\":\"uint256\"}],\"name\":\"setWithdrawalDelayBlocks\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shares\",\"type\":\"uint256[]\"},{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"components\":[{\"internalType\":\"address\",\"name\":\"withdrawer\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"nonce\",\"type\":\"uint96\"}],\"internalType\":\"struct IStrategyManager.WithdrawerAndNonce\",\"name\":\"withdrawerAndNonce\",\"type\":\"tuple\"},{\"internalType\":\"uint32\",\"name\":\"withdrawalStartBlock\",\"type\":\"uint32\"},{\"internalType\":\"address\",\"name\":\"delegatedAddress\",\"type\":\"address\"}],\"internalType\":\"struct IStrategyManager.QueuedWithdrawal\",\"name\":\"queuedWithdrawal\",\"type\":\"tuple\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"indicesToSkip\",\"type\":\"uint256[]\"}],\"name\":\"slashQueuedWithdrawal\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"slashedAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"recipient\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy[]\",\"name\":\"strategies\",\"type\":\"address[]\"},{\"internalType\":\"contract IERC20[]\",\"name\":\"tokens\",\"type\":\"address[]\"},{\"internalType\":\"uint256[]\",\"name\":\"strategyIndexes\",\"type\":\"uint256[]\"},{\"internalType\":\"uint256[]\",\"name\":\"shareAmounts\",\"type\":\"uint256[]\"}],\"name\":\"slashShares\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"slasher\",\"outputs\":[{\"internalType\":\"contract ISlasher\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"name\":\"stakerStrategyList\",\"outputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"staker\",\"type\":\"address\"}],\"name\":\"stakerStrategyListLength\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"},{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"stakerStrategyShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"contract IStrategy\",\"name\":\"\",\"type\":\"address\"}],\"name\":\"strategyIsWhitelistedForDeposit\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"strategyWhitelister\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"undelegate\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"newPausedStatus\",\"type\":\"uint256\"}],\"name\":\"unpause\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"withdrawalDelayBlocks\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"name\":\"withdrawalRootPending\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"events\":{\"Deposit(address,address,address,uint256)\":{\"params\":{\"depositor\":\"Is the staker who is depositing funds into EigenLayer.\",\"shares\":\"Is the number of shares `depositor` has in `strategy`.\",\"strategy\":\"Is the strategy that `depositor` has deposited into.\",\"token\":\"Is the token that `depositor` deposited.\"}},\"ShareWithdrawalQueued(address,uint96,address,uint256)\":{\"params\":{\"depositor\":\"Is the staker who is queuing a withdrawal from EigenLayer.\",\"nonce\":\"Is the withdrawal's unique identifier (to the depositor).\",\"shares\":\"Is the number of shares `depositor` has queued to withdraw.\",\"strategy\":\"Is the strategy that `depositor` has queued to withdraw from.\"}},\"WithdrawalQueued(address,uint96,address,address,bytes32)\":{\"params\":{\"delegatedAddress\":\"Is the party who the `staker` was delegated to at the time of creating the queued withdrawal\",\"depositor\":\"Is the staker who is withdrawing funds from EigenLayer.\",\"nonce\":\"Is the withdrawal's unique identifier (to the depositor).\",\"withdrawalRoot\":\"Is a hash of the input data for the withdrawal.\",\"withdrawer\":\"Is the party specified by `staker` who will be able to complete the queued withdrawal and receive the withdrawn funds.\"}}},\"kind\":\"dev\",\"methods\":{\"completeQueuedWithdrawal((address[],uint256[],address,(address,uint96),uint32,address),address[],uint256,bool)\":{\"details\":\"middlewareTimesIndex should be calculated off chain before calling this function by finding the first index that satisfies `slasher.canWithdraw`\",\"params\":{\"middlewareTimesIndex\":\"is the index in the operator that the staker who triggered the withdrawal was delegated to's middleware times array\",\"queuedWithdrawal\":\"The QueuedWithdrawal to complete.\",\"receiveAsTokens\":\"If true, the shares specified in the queued withdrawal will be withdrawn from the specified strategies themselves and sent to the caller, through calls to `queuedWithdrawal.strategies[i].withdraw`. If false, then the shares in the specified strategies will simply be transferred to the caller directly.\",\"tokens\":\"Array in which the i-th entry specifies the `token` input to the 'withdraw' function of the i-th Strategy in the `strategies` array of the `queuedWithdrawal`. This input can be provided with zero length if `receiveAsTokens` is set to 'false' (since in that case, this input will be unused)\"}},\"completeQueuedWithdrawals((address[],uint256[],address,(address,uint96),uint32,address)[],address[][],uint256[],bool[])\":{\"details\":\"Array-ified version of `completeQueuedWithdrawal`middlewareTimesIndex should be calculated off chain before calling this function by finding the first index that satisfies `slasher.canWithdraw`\"},\"constructor\":{\"params\":{\"_delegation\":\"The delegation contract of EigenLayer.\",\"_eigenPodManager\":\"The contract that keeps track of EigenPod stakes for restaking beacon chain ether.\",\"_slasher\":\"The primary slashing contract of EigenLayer.\"}},\"depositBeaconChainETH(address,uint256)\":{\"details\":\"Only callable by EigenPodManager.\",\"params\":{\"amount\":\"is the amount of token to be deposited in the strategy by the depositor\",\"staker\":\"is the entity that is restaking in eigenlayer,\"}},\"depositIntoStrategy(address,address,uint256)\":{\"details\":\"The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.Cannot be called by an address that is 'frozen' (this function will revert if the `msg.sender` is frozen).  WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors          where the token balance and corresponding strategy shares are not in syncupon reentrancy.\",\"params\":{\"amount\":\"is the amount of token to be deposited in the strategy by the depositor\",\"strategy\":\"is the specified strategy where deposit is to be made,\",\"token\":\"is the denomination in which the deposit is to be made,\"}},\"depositIntoStrategyWithSignature(address,address,uint256,address,uint256,bytes)\":{\"details\":\"The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.A signature is required for this function to eliminate the possibility of griefing attacks, specifically those targetting stakers who may be attempting to undelegate.Cannot be called on behalf of a staker that is 'frozen' (this function will revert if the `staker` is frozen).   WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors          where the token balance and corresponding strategy shares are not in syncupon reentrancy\",\"params\":{\"amount\":\"is the amount of token to be deposited in the strategy by the depositor\",\"expiry\":\"the timestamp at which the signature expires\",\"signature\":\"is a valid signature from the `staker`. either an ECDSA signature if the `staker` is an EOA, or data to forward following EIP-1271 if the `staker` is a contract\",\"staker\":\"the staker that the assets will be deposited on behalf of\",\"strategy\":\"is the specified strategy where deposit is to be made,\",\"token\":\"is the denomination in which the deposit is to be made,\"}},\"getDeposits(address)\":{\"returns\":{\"_0\":\"(depositor's strategies, shares in these strategies)\"}},\"initialize(address,address,address,uint256,uint256)\":{\"params\":{\"_pauserRegistry\":\"Used for access control of pausing.\",\"_withdrawalDelayBlocks\":\"The initial value of `withdrawalDelayBlocks` to set.\",\"initialOwner\":\"Ownership of this contract is transferred to this address.\",\"initialStrategyWhitelister\":\"The initial value of `strategyWhitelister` to set. \"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"pause(uint256)\":{\"details\":\"This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}},\"queueWithdrawal(uint256[],address[],uint256[],address,bool)\":{\"details\":\"Stakers will complete their withdrawal by calling the 'completeQueuedWithdrawal' function. User shares are decreased in this function, but the total number of shares in each strategy remains the same. The total number of shares is decremented in the 'completeQueuedWithdrawal' function instead, which is where the funds are actually sent to the user through use of the strategies' 'withdrawal' function. This ensures that the value per share reported by each strategy will remain consistent, and that the shares will continue to accrue gains during the enforced WITHDRAWAL_WAITING_PERIOD.Strategies are removed from `stakerStrategyList` by swapping the last entry with the entry to be removed, then popping off the last entry in `stakerStrategyList`. The simplest way to calculate the correct `strategyIndexes` to input is to order the strategies *for which `msg.sender` is withdrawing 100% of their shares* from highest index in `stakerStrategyList` to lowest indexNote that if the withdrawal includes shares in the enshrined 'beaconChainETH' strategy, then it must *only* include shares in this strategy, and `withdrawer` must match the caller's address. The first condition is because slashing of queued withdrawals cannot be guaranteed  for Beacon Chain ETH (since we cannot trigger a withdrawal from the beacon chain through a smart contract) and the second condition is because shares in the enshrined 'beaconChainETH' strategy technically represent non-fungible positions (deposits to the Beacon Chain, each pointed at a specific EigenPod).\",\"params\":{\"shares\":\"The amount of shares to withdraw from each of the respective Strategies in the `strategies` array\",\"strategies\":\"The Strategies to withdraw from\",\"strategyIndexes\":\"is a list of the indices in `stakerStrategyList[msg.sender]` that correspond to the strategies for which `msg.sender` is withdrawing 100% of their shares\"}},\"recordOvercommittedBeaconChainETH(address,uint256,uint256)\":{\"details\":\"Only callable by EigenPodManager.\",\"params\":{\"amount\":\"is the amount to decrement the slashedAddress's beaconChainETHStrategy shares\",\"beaconChainETHStrategyIndex\":\"is the index of the beaconChainETHStrategy in case it must be removed,\",\"overcommittedPodOwner\":\"is the pod owner to be slashed\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner.\"},\"slashQueuedWithdrawal(address,(address[],uint256[],address,(address,uint96),uint32,address),address[],uint256[])\":{\"params\":{\"indicesToSkip\":\"Optional input parameter -- indices in the `strategies` array to skip (i.e. not call the 'withdraw' function on). This input exists so that, e.g., if the slashed QueuedWithdrawal contains a malicious strategy in the `strategies` array which always reverts on calls to its 'withdraw' function, then the malicious strategy can be skipped (with the shares in effect \\\"burned\\\"), while the non-malicious strategies are still called as normal.\",\"queuedWithdrawal\":\"The previously queued withdrawal to be slashed\",\"recipient\":\"The funds in the slashed withdrawal are withdrawn as tokens to this address.\",\"tokens\":\"Array in which the i-th entry specifies the `token` input to the 'withdraw' function of the i-th Strategy in the `strategies` array of the `queuedWithdrawal`.\"}},\"slashShares(address,address,address[],address[],uint256[],uint256[])\":{\"details\":\"strategies are removed from `stakerStrategyList` by swapping the last entry with the entry to be removed, then popping off the last entry in `stakerStrategyList`. The simplest way to calculate the correct `strategyIndexes` to input is to order the strategies *for which `msg.sender` is withdrawing 100% of their shares* from highest index in `stakerStrategyList` to lowest index\",\"params\":{\"recipient\":\"The slashed funds are withdrawn as tokens to this address.\",\"slashedAddress\":\"is the frozen address that is having its shares slashed\",\"strategyIndexes\":\"is a list of the indices in `stakerStrategyList[msg.sender]` that correspond to the strategies for which `msg.sender` is withdrawing 100% of their shares\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"unpause(uint256)\":{\"details\":\"This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.\",\"params\":{\"newPausedStatus\":\"represents the new value for `_paused` to take, which means it may flip several bits at once.\"}}},\"title\":\"The primary entry- and exit-point for funds into and out of EigenLayer.\",\"version\":1},\"userdoc\":{\"events\":{\"Deposit(address,address,address,uint256)\":{\"notice\":\"Emitted when a new deposit occurs on behalf of `depositor`.\"},\"Paused(address,uint256)\":{\"notice\":\"Emitted when the pause is triggered by `account`, and changed to `newPausedStatus`.\"},\"ShareWithdrawalQueued(address,uint96,address,uint256)\":{\"notice\":\"Emitted when a new withdrawal occurs on behalf of `depositor`.\"},\"StrategyAddedToDepositWhitelist(address)\":{\"notice\":\"Emitted when a strategy is added to the approved list of strategies for deposit\"},\"StrategyRemovedFromDepositWhitelist(address)\":{\"notice\":\"Emitted when a strategy is removed from the approved list of strategies for deposit\"},\"StrategyWhitelisterChanged(address,address)\":{\"notice\":\"Emitted when the `strategyWhitelister` is changed\"},\"Unpaused(address,uint256)\":{\"notice\":\"Emitted when the pause is lifted by `account`, and changed to `newPausedStatus`.\"},\"WithdrawalCompleted(address,uint96,address,bytes32)\":{\"notice\":\"Emitted when a queued withdrawal is completed\"},\"WithdrawalDelayBlocksSet(uint256,uint256)\":{\"notice\":\"Emitted when the `withdrawalDelayBlocks` variable is modified from `previousValue` to `newValue`.\"},\"WithdrawalQueued(address,uint96,address,address,bytes32)\":{\"notice\":\"Emitted when a new withdrawal is queued by `depositor`.\"}},\"kind\":\"user\",\"methods\":{\"DEPOSIT_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the deposit struct used by the contract\"},\"DOMAIN_SEPARATOR()\":{\"notice\":\"EIP-712 Domain separator\"},\"DOMAIN_TYPEHASH()\":{\"notice\":\"The EIP-712 typehash for the contract's domain\"},\"addStrategiesToDepositWhitelist(address[])\":{\"notice\":\"Owner-only function that adds the provided Strategies to the 'whitelist' of strategies that stakers can deposit into\"},\"beaconChainETHStrategy()\":{\"notice\":\"returns the enshrined beaconChainETH Strategy\"},\"calculateWithdrawalRoot((address[],uint256[],address,(address,uint96),uint32,address))\":{\"notice\":\"Returns the keccak256 hash of `queuedWithdrawal`.\"},\"completeQueuedWithdrawal((address[],uint256[],address,(address,uint96),uint32,address),address[],uint256,bool)\":{\"notice\":\"Used to complete the specified `queuedWithdrawal`. The function caller must match `queuedWithdrawal.withdrawer`\"},\"completeQueuedWithdrawals((address[],uint256[],address,(address,uint96),uint32,address)[],address[][],uint256[],bool[])\":{\"notice\":\"Used to complete the specified `queuedWithdrawals`. The function caller must match `queuedWithdrawals[...].withdrawer`\"},\"delegation()\":{\"notice\":\"Returns the single, central Delegation contract of EigenLayer\"},\"depositBeaconChainETH(address,uint256)\":{\"notice\":\"Deposits `amount` of beaconchain ETH into this contract on behalf of `staker`\"},\"depositIntoStrategy(address,address,uint256)\":{\"notice\":\"Deposits `amount` of `token` into the specified `strategy`, with the resultant shares credited to `depositor`\"},\"depositIntoStrategyWithSignature(address,address,uint256,address,uint256,bytes)\":{\"notice\":\"Used for depositing an asset into the specified strategy with the resultant shared created to `staker`, who must sign off on the action\"},\"getDeposits(address)\":{\"notice\":\"Get all details on the depositor's deposits and corresponding shares\"},\"initialize(address,address,address,uint256,uint256)\":{\"notice\":\"Initializes the strategy manager contract. Sets the `pauserRegistry` (currently **not** modifiable after being set), and transfers contract ownership to the specified `initialOwner`.\"},\"numWithdrawalsQueued(address)\":{\"notice\":\"Mapping: staker => cumulative number of queued withdrawals they have ever initiated. only increments (doesn't decrement)\"},\"pause(uint256)\":{\"notice\":\"This function is used to pause an EigenLayer/DataLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig.\"},\"pauseAll()\":{\"notice\":\"Alias for `pause(type(uint256).max)`.\"},\"paused()\":{\"notice\":\"Returns the current paused status as a uint256.\"},\"paused(uint8)\":{\"notice\":\"Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise\"},\"pauserRegistry()\":{\"notice\":\"Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing).\"},\"queueWithdrawal(uint256[],address[],uint256[],address,bool)\":{\"notice\":\"Called by a staker to queue a withdrawal of the given amount of `shares` from each of the respective given `strategies`.\"},\"recordOvercommittedBeaconChainETH(address,uint256,uint256)\":{\"notice\":\"Records an overcommitment event on behalf of a staker. The staker's beaconChainETH shares are decremented by `amount`.\"},\"removeStrategiesFromDepositWhitelist(address[])\":{\"notice\":\"Owner-only function that removes the provided Strategies from the 'whitelist' of strategies that stakers can deposit into\"},\"setStrategyWhitelister(address)\":{\"notice\":\"Owner-only function to change the `strategyWhitelister` address.\"},\"setWithdrawalDelayBlocks(uint256)\":{\"notice\":\"Owner-only function for modifying the value of the `withdrawalDelayBlocks` variable.\"},\"slashQueuedWithdrawal(address,(address[],uint256[],address,(address,uint96),uint32,address),address[],uint256[])\":{\"notice\":\"Slashes an existing queued withdrawal that was created by a 'frozen' operator (or a staker delegated to one)\"},\"slashShares(address,address,address[],address[],uint256[],uint256[])\":{\"notice\":\"Slashes the shares of a 'frozen' operator (or a staker delegated to one)\"},\"slasher()\":{\"notice\":\"Returns the single, central Slasher contract of EigenLayer\"},\"stakerStrategyList(address,uint256)\":{\"notice\":\"Mapping: staker => array of strategies in which they have nonzero shares\"},\"stakerStrategyListLength(address)\":{\"notice\":\"Simple getter function that returns `stakerStrategyList[staker].length`.\"},\"stakerStrategyShares(address,address)\":{\"notice\":\"Mapping: staker => Strategy => number of shares which they currently hold\"},\"strategyIsWhitelistedForDeposit(address)\":{\"notice\":\"Mapping: strategy => whether or not stakers are allowed to deposit into it\"},\"strategyWhitelister()\":{\"notice\":\"Permissioned role, which can be changed by the contract owner. Has the ability to edit the strategy whitelist\"},\"undelegate()\":{\"notice\":\"Called by a staker to undelegate entirely from EigenLayer. The staker must first withdraw all of their existing deposits (through use of the `queueWithdrawal` function), or else otherwise have never deposited in EigenLayer prior to delegating.\"},\"unpause(uint256)\":{\"notice\":\"This function is used to unpause an EigenLayer/DataLayercontract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or goverance contract.\"},\"withdrawalDelayBlocks()\":{\"notice\":\"Minimum delay enforced by this contract for completing queued withdrawals. Measured in blocks, and adjustable by this contract's owner, up to a maximum of `MAX_WITHDRAWAL_DELAY_BLOCKS`. Minimum value is 0 (i.e. no delay enforced).\"},\"withdrawalRootPending(bytes32)\":{\"notice\":\"Mapping: hash of withdrawal inputs, aka 'withdrawalRoot' => whether the withdrawal is pending\"}},\"notice\":\"This contract is for managing deposits in different strategies. The main functionalities are: - adding and removing strategies that any delegator can deposit into - enabling deposit of assets into specified strategy(s) - enabling withdrawal of assets from specified strategy(s) - recording deposit of ETH into settlement layer - slashing of assets for permissioned strategies\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/core/StrategyManager.sol\":\"StrategyManager\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a\",\"dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497\",\"dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol\":{\"keccak256\":\"0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11\",\"dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol\":{\"keccak256\":\"0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4\",\"dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c\",\"dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol\":{\"keccak256\":\"0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e\",\"dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol\":{\"keccak256\":\"0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95\",\"dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol\":{\"keccak256\":\"0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6\",\"dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487\",\"dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG\"]},\"lib/openzeppelin-contracts/contracts/utils/Strings.sol\":{\"keccak256\":\"0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638\",\"dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9\"]},\"lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol\":{\"keccak256\":\"0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f\",\"dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF\"]},\"src/contracts/core/StrategyManager.sol\":{\"keccak256\":\"0xb2ac04195c7fd6df54d90c9f33d036903944a77ad6006df252965a120e6f4afb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://09cda53b5706e15bb9b3cb46645c3668d7d9b8109edf846463927e50a459887b\",\"dweb:/ipfs/QmSfTJMmLWnUFrLTG6rJUj3CctAoeazQA7sKh9G3c4fVNw\"]},\"src/contracts/core/StrategyManagerStorage.sol\":{\"keccak256\":\"0xe372c8cbbac742aa24318216c9460931325075d34cb74a340f631a1323c3442d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e34ff34bb695512d8661ff53277b924d2fbb3ff5b3f77055475537f05c216fd3\",\"dweb:/ipfs/QmNNzrwjJV1wv3EEFL8Y2V6JR4ii7xLRARKM5mpv5wzP52\"]},\"src/contracts/interfaces/IBeaconChainOracle.sol\":{\"keccak256\":\"0x29fa5d8622b28df98e4650fb1c7512ab8c0882652576c60daf3ae61071300a40\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://af2a5657343150d5b4dcd9453315d61c21c996cbf0f422a103b74213e3e30832\",\"dweb:/ipfs/QmWjt1cQvJFqr5kYWKEhN3Zj1YYUhj9xrt6pJVR9uHvfDj\"]},\"src/contracts/interfaces/IDelegationManager.sol\":{\"keccak256\":\"0x23a784e90deb832e06dda8896e0824dd11c6be4f2c1d9eece5a7940224429787\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://b55f793a01f25d11fac2db518e0b999474f2553d11fee4841656e0edb6bcacfa\",\"dweb:/ipfs/QmYfEPhFYQAoqu21XmAC35Y4ayyhMwjRDX8FpHTsUzbTx9\"]},\"src/contracts/interfaces/IDelegationTerms.sol\":{\"keccak256\":\"0x9296e4d375b90b8165fe587f69fb629148186c49eba88a3e80a9141f4ac7ade0\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://0509fb75fb6ec9e992ec0c8591bbce6b745bc171ae1e7c5eb905c8be9655fa6f\",\"dweb:/ipfs/QmNNDbv65MwHTnwNGb71SExMwas4GYo8d3cbgPPhPYHqiM\"]},\"src/contracts/interfaces/IEigenPod.sol\":{\"keccak256\":\"0x314d10944a545be05c30f61e418dfcda863b0888de0dc9ef8a8206c03ba28f8e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://36e46b5608249ae3ae273ba5ec255c866ee85237202da2d9f85f344860621cbc\",\"dweb:/ipfs/QmPYLFLumGv64wRFPpavaJkxfrz9tgmmwZGBn8ys5WviRi\"]},\"src/contracts/interfaces/IEigenPodManager.sol\":{\"keccak256\":\"0xca9c980e5dc25d552cf65462aaabb01cee8b8f6ceedbaa1d65d03fcdb8fbe2a3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ed9fa8f24bfa2fd84f76f0ce91b3fc7789deae16b0c75175f3d520e9b498b0fe\",\"dweb:/ipfs/Qmee8y4ZCU8cEYTjhFvwXn1sP5G5B8uRyYWAJDiLBiswXd\"]},\"src/contracts/interfaces/IPausable.sol\":{\"keccak256\":\"0x770f1a8f427931a1553cad488b1af1a88ce30aae5f879042a1b47bece91992b3\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://9d71f1c4ad5c48c7bae74651a0706bbd84fe0c6ae66e66d098cfeee2112412fe\",\"dweb:/ipfs/QmQKHU7eWDTtSsjuf9qUFFHouvn21B5eYihw6zoz369UnN\"]},\"src/contracts/interfaces/IPauserRegistry.sol\":{\"keccak256\":\"0x3ea07659059573da05c344fcf0c18348336d27a33f25afaddde5362a8bde634f\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://a957c2ff7cdc400b87c0d30bc90638411d0197f3171effe58e12a184c6cc9df6\",\"dweb:/ipfs/Qmb86ypg6LKCs1xyVZic6DmUZGgi8bJ6ZuEzcWauuEkNxJ\"]},\"src/contracts/interfaces/ISlasher.sol\":{\"keccak256\":\"0x1b76eeab81fdfa33b63066235e2c20c9c99cc49f6cf3cb0fe210a954d197574e\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://d7df3df25eea9cfe14bce1c5b80c4d5bb00bec9be9d075bf569805d09c5c8fce\",\"dweb:/ipfs/QmNzyJaTYQWCFnaD6TzBmehSELTCNrYzknUEZ7Xzw4hXdZ\"]},\"src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x0c3daab62258fedec77cf8208533e6e58514b28cfb5bed97e58ec90ed41074d1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://791c6196dacfe02aaf5fa19e78cd32f5a175344de5891ba6a2c8a4ba989c0263\",\"dweb:/ipfs/QmWJV7fR168qspKpSadFyKMwmwvPU9qiv5GyzuDYgNGWL7\"]},\"src/contracts/interfaces/IStrategyManager.sol\":{\"keccak256\":\"0x0f351bd573c29b6d2112f4ec1194f21ca3b739adaad5c053c6def4110081fc7d\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://efba3cdd573d4fa9f38c7dc8176c9cccafa567274b54532a56dccccdd8ebbb94\",\"dweb:/ipfs/QmWhQXrjmi8DfMmoZ13YuypFyPUANtwcFMNkfMPcuCnWRs\"]},\"src/contracts/libraries/BeaconChainProofs.sol\":{\"keccak256\":\"0x322fd1e384fbd0683d46a5ae67c9b1cf4853fcb4135a6c4adcb3274dcaa70070\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://3b3e2e9c135b2f2cbaea536fb6d4c40ce0f11ab90df6cea9e05af59cfdf17b8c\",\"dweb:/ipfs/QmbW8KbV6a1Q6rg4ZpAGuJXZfoCM7BoopPVBmyeMgvH5vY\"]},\"src/contracts/libraries/Endian.sol\":{\"keccak256\":\"0x65442f0fc44fa0a1a3092fbbd9df36a0873178905ac253f820f8e29a30f7befb\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://72dd0c1c01183d23867ea3298b8a5954202f89870cae78322cf1c58900e3cf2d\",\"dweb:/ipfs/QmRqogA9v899RbygwNW8wY3QP4RsnZXRAx6vMBbM6yNyrn\"]},\"src/contracts/libraries/Merkle.sol\":{\"keccak256\":\"0x4d3f0b3d7d04c5862a13882b5d21ee1fe6514966677ab93d270fb0d6b1949b12\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://e4717c374e8f31c97970609a450df66b420b8ffc33401504baef836c376f5cf2\",\"dweb:/ipfs/QmWUGaa1zELy8hkji9KDASZAe2mncF8iPCC1Gy7XFbF2Ru\"]},\"src/contracts/permissions/Pausable.sol\":{\"keccak256\":\"0x2f1b473b4fb5e3dcc96a1857eebafe21741ecec3d62e9140379f6052e15f2354\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://ac2b864416ec66f07d744d3eb5ee7847b7b77a721abdce7f13f7455f4a5fde35\",\"dweb:/ipfs/QmQbvZEE6ekZqvbp3o2oGvd8Vi2uvWspYuJ15h7TZ5wAPB\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "_delegation",
              "type": "address"
            },
            {
              "internalType": "contract IEigenPodManager",
              "name": "_eigenPodManager",
              "type": "address"
            },
            {
              "internalType": "contract ISlasher",
              "name": "_slasher",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "constructor"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "depositor",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Deposit",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "version",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Paused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "depositor",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint96",
              "name": "nonce",
              "type": "uint96",
              "indexed": false
            },
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ShareWithdrawalQueued",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyAddedToDepositWhitelist",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyRemovedFromDepositWhitelist",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "newAddress",
              "type": "address",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "StrategyWhitelisterChanged",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "account",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Unpaused",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "depositor",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint96",
              "name": "nonce",
              "type": "uint96",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "withdrawer",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "withdrawalRoot",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawalCompleted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "previousValue",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "newValue",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawalDelayBlocksSet",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "depositor",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint96",
              "name": "nonce",
              "type": "uint96",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "withdrawer",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "delegatedAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "bytes32",
              "name": "withdrawalRoot",
              "type": "bytes32",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "WithdrawalQueued",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DEPOSIT_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_SEPARATOR",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "DOMAIN_TYPEHASH",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "MAX_WITHDRAWAL_DELAY_BLOCKS",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "strategiesToWhitelist",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addStrategiesToDepositWhitelist"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "beaconChainETHSharesToDecrementOnWithdrawal",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "beaconChainETHStrategy",
          "outputs": [
            {
              "internalType": "contract IStrategy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IStrategyManager.QueuedWithdrawal",
              "name": "queuedWithdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address",
                  "name": "depositor",
                  "type": "address"
                },
                {
                  "internalType": "struct IStrategyManager.WithdrawerAndNonce",
                  "name": "withdrawerAndNonce",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "withdrawer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "nonce",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "uint32",
                  "name": "withdrawalStartBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "delegatedAddress",
                  "type": "address"
                }
              ]
            }
          ],
          "stateMutability": "pure",
          "type": "function",
          "name": "calculateWithdrawalRoot",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "struct IStrategyManager.QueuedWithdrawal",
              "name": "queuedWithdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address",
                  "name": "depositor",
                  "type": "address"
                },
                {
                  "internalType": "struct IStrategyManager.WithdrawerAndNonce",
                  "name": "withdrawerAndNonce",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "withdrawer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "nonce",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "uint32",
                  "name": "withdrawalStartBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "delegatedAddress",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256",
              "name": "middlewareTimesIndex",
              "type": "uint256"
            },
            {
              "internalType": "bool",
              "name": "receiveAsTokens",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "completeQueuedWithdrawal"
        },
        {
          "inputs": [
            {
              "internalType": "struct IStrategyManager.QueuedWithdrawal[]",
              "name": "queuedWithdrawals",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address",
                  "name": "depositor",
                  "type": "address"
                },
                {
                  "internalType": "struct IStrategyManager.WithdrawerAndNonce",
                  "name": "withdrawerAndNonce",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "withdrawer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "nonce",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "uint32",
                  "name": "withdrawalStartBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "delegatedAddress",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "contract IERC20[][]",
              "name": "tokens",
              "type": "address[][]"
            },
            {
              "internalType": "uint256[]",
              "name": "middlewareTimesIndexes",
              "type": "uint256[]"
            },
            {
              "internalType": "bool[]",
              "name": "receiveAsTokens",
              "type": "bool[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "completeQueuedWithdrawals"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "delegation",
          "outputs": [
            {
              "internalType": "contract IDelegationManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositBeaconChainETH"
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositIntoStrategy",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy",
              "name": "strategy",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "expiry",
              "type": "uint256"
            },
            {
              "internalType": "bytes",
              "name": "signature",
              "type": "bytes"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositIntoStrategyWithSignature",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "shares",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "eigenPodManager",
          "outputs": [
            {
              "internalType": "contract IEigenPodManager",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "depositor",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getDeposits",
          "outputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "",
              "type": "uint256[]"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "initialOwner",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "initialStrategyWhitelister",
              "type": "address"
            },
            {
              "internalType": "contract IPauserRegistry",
              "name": "_pauserRegistry",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "initialPausedStatus",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "_withdrawalDelayBlocks",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "nonces",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "numWithdrawalsQueued",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pause"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "pauseAll"
        },
        {
          "inputs": [
            {
              "internalType": "uint8",
              "name": "index",
              "type": "uint8"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "paused",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "pauserRegistry",
          "outputs": [
            {
              "internalType": "contract IPauserRegistry",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256[]",
              "name": "strategyIndexes",
              "type": "uint256[]"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "shares",
              "type": "uint256[]"
            },
            {
              "internalType": "address",
              "name": "withdrawer",
              "type": "address"
            },
            {
              "internalType": "bool",
              "name": "undelegateIfPossible",
              "type": "bool"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "queueWithdrawal",
          "outputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "overcommittedPodOwner",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "beaconChainETHStrategyIndex",
              "type": "uint256"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "recordOvercommittedBeaconChainETH"
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy[]",
              "name": "strategiesToRemoveFromWhitelist",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeStrategiesFromDepositWhitelist"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newStrategyWhitelister",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setStrategyWhitelister"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "_withdrawalDelayBlocks",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "setWithdrawalDelayBlocks"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "struct IStrategyManager.QueuedWithdrawal",
              "name": "queuedWithdrawal",
              "type": "tuple",
              "components": [
                {
                  "internalType": "contract IStrategy[]",
                  "name": "strategies",
                  "type": "address[]"
                },
                {
                  "internalType": "uint256[]",
                  "name": "shares",
                  "type": "uint256[]"
                },
                {
                  "internalType": "address",
                  "name": "depositor",
                  "type": "address"
                },
                {
                  "internalType": "struct IStrategyManager.WithdrawerAndNonce",
                  "name": "withdrawerAndNonce",
                  "type": "tuple",
                  "components": [
                    {
                      "internalType": "address",
                      "name": "withdrawer",
                      "type": "address"
                    },
                    {
                      "internalType": "uint96",
                      "name": "nonce",
                      "type": "uint96"
                    }
                  ]
                },
                {
                  "internalType": "uint32",
                  "name": "withdrawalStartBlock",
                  "type": "uint32"
                },
                {
                  "internalType": "address",
                  "name": "delegatedAddress",
                  "type": "address"
                }
              ]
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "indicesToSkip",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "slashQueuedWithdrawal"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "slashedAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "recipient",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy[]",
              "name": "strategies",
              "type": "address[]"
            },
            {
              "internalType": "contract IERC20[]",
              "name": "tokens",
              "type": "address[]"
            },
            {
              "internalType": "uint256[]",
              "name": "strategyIndexes",
              "type": "uint256[]"
            },
            {
              "internalType": "uint256[]",
              "name": "shareAmounts",
              "type": "uint256[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "slashShares"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "slasher",
          "outputs": [
            {
              "internalType": "contract ISlasher",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakerStrategyList",
          "outputs": [
            {
              "internalType": "contract IStrategy",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "staker",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakerStrategyListLength",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            },
            {
              "internalType": "contract IStrategy",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "stakerStrategyShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "contract IStrategy",
              "name": "",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyIsWhitelistedForDeposit",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "strategyWhitelister",
          "outputs": [
            {
              "internalType": "address",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "undelegate"
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "newPausedStatus",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "unpause"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawalDelayBlocks",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "bytes32",
              "name": "",
              "type": "bytes32"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "withdrawalRootPending",
          "outputs": [
            {
              "internalType": "bool",
              "name": "",
              "type": "bool"
            }
          ]
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "completeQueuedWithdrawal((address[],uint256[],address,(address,uint96),uint32,address),address[],uint256,bool)": {
            "details": "middlewareTimesIndex should be calculated off chain before calling this function by finding the first index that satisfies `slasher.canWithdraw`",
            "params": {
              "middlewareTimesIndex": "is the index in the operator that the staker who triggered the withdrawal was delegated to's middleware times array",
              "queuedWithdrawal": "The QueuedWithdrawal to complete.",
              "receiveAsTokens": "If true, the shares specified in the queued withdrawal will be withdrawn from the specified strategies themselves and sent to the caller, through calls to `queuedWithdrawal.strategies[i].withdraw`. If false, then the shares in the specified strategies will simply be transferred to the caller directly.",
              "tokens": "Array in which the i-th entry specifies the `token` input to the 'withdraw' function of the i-th Strategy in the `strategies` array of the `queuedWithdrawal`. This input can be provided with zero length if `receiveAsTokens` is set to 'false' (since in that case, this input will be unused)"
            }
          },
          "completeQueuedWithdrawals((address[],uint256[],address,(address,uint96),uint32,address)[],address[][],uint256[],bool[])": {
            "details": "Array-ified version of `completeQueuedWithdrawal`middlewareTimesIndex should be calculated off chain before calling this function by finding the first index that satisfies `slasher.canWithdraw`"
          },
          "constructor": {
            "params": {
              "_delegation": "The delegation contract of EigenLayer.",
              "_eigenPodManager": "The contract that keeps track of EigenPod stakes for restaking beacon chain ether.",
              "_slasher": "The primary slashing contract of EigenLayer."
            }
          },
          "depositBeaconChainETH(address,uint256)": {
            "details": "Only callable by EigenPodManager.",
            "params": {
              "amount": "is the amount of token to be deposited in the strategy by the depositor",
              "staker": "is the entity that is restaking in eigenlayer,"
            }
          },
          "depositIntoStrategy(address,address,uint256)": {
            "details": "The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.Cannot be called by an address that is 'frozen' (this function will revert if the `msg.sender` is frozen).  WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors          where the token balance and corresponding strategy shares are not in syncupon reentrancy.",
            "params": {
              "amount": "is the amount of token to be deposited in the strategy by the depositor",
              "strategy": "is the specified strategy where deposit is to be made,",
              "token": "is the denomination in which the deposit is to be made,"
            }
          },
          "depositIntoStrategyWithSignature(address,address,uint256,address,uint256,bytes)": {
            "details": "The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.A signature is required for this function to eliminate the possibility of griefing attacks, specifically those targetting stakers who may be attempting to undelegate.Cannot be called on behalf of a staker that is 'frozen' (this function will revert if the `staker` is frozen).   WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors          where the token balance and corresponding strategy shares are not in syncupon reentrancy",
            "params": {
              "amount": "is the amount of token to be deposited in the strategy by the depositor",
              "expiry": "the timestamp at which the signature expires",
              "signature": "is a valid signature from the `staker`. either an ECDSA signature if the `staker` is an EOA, or data to forward following EIP-1271 if the `staker` is a contract",
              "staker": "the staker that the assets will be deposited on behalf of",
              "strategy": "is the specified strategy where deposit is to be made,",
              "token": "is the denomination in which the deposit is to be made,"
            }
          },
          "getDeposits(address)": {
            "returns": {
              "_0": "(depositor's strategies, shares in these strategies)"
            }
          },
          "initialize(address,address,address,uint256,uint256)": {
            "params": {
              "_pauserRegistry": "Used for access control of pausing.",
              "_withdrawalDelayBlocks": "The initial value of `withdrawalDelayBlocks` to set.",
              "initialOwner": "Ownership of this contract is transferred to this address.",
              "initialStrategyWhitelister": "The initial value of `strategyWhitelister` to set. "
            }
          },
          "owner()": {
            "details": "Returns the address of the current owner."
          },
          "pause(uint256)": {
            "details": "This function can only pause functionality, and thus cannot 'unflip' any bit in `_paused` from 1 to 0.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          },
          "queueWithdrawal(uint256[],address[],uint256[],address,bool)": {
            "details": "Stakers will complete their withdrawal by calling the 'completeQueuedWithdrawal' function. User shares are decreased in this function, but the total number of shares in each strategy remains the same. The total number of shares is decremented in the 'completeQueuedWithdrawal' function instead, which is where the funds are actually sent to the user through use of the strategies' 'withdrawal' function. This ensures that the value per share reported by each strategy will remain consistent, and that the shares will continue to accrue gains during the enforced WITHDRAWAL_WAITING_PERIOD.Strategies are removed from `stakerStrategyList` by swapping the last entry with the entry to be removed, then popping off the last entry in `stakerStrategyList`. The simplest way to calculate the correct `strategyIndexes` to input is to order the strategies *for which `msg.sender` is withdrawing 100% of their shares* from highest index in `stakerStrategyList` to lowest indexNote that if the withdrawal includes shares in the enshrined 'beaconChainETH' strategy, then it must *only* include shares in this strategy, and `withdrawer` must match the caller's address. The first condition is because slashing of queued withdrawals cannot be guaranteed  for Beacon Chain ETH (since we cannot trigger a withdrawal from the beacon chain through a smart contract) and the second condition is because shares in the enshrined 'beaconChainETH' strategy technically represent non-fungible positions (deposits to the Beacon Chain, each pointed at a specific EigenPod).",
            "params": {
              "shares": "The amount of shares to withdraw from each of the respective Strategies in the `strategies` array",
              "strategies": "The Strategies to withdraw from",
              "strategyIndexes": "is a list of the indices in `stakerStrategyList[msg.sender]` that correspond to the strategies for which `msg.sender` is withdrawing 100% of their shares"
            }
          },
          "recordOvercommittedBeaconChainETH(address,uint256,uint256)": {
            "details": "Only callable by EigenPodManager.",
            "params": {
              "amount": "is the amount to decrement the slashedAddress's beaconChainETHStrategy shares",
              "beaconChainETHStrategyIndex": "is the index of the beaconChainETHStrategy in case it must be removed,",
              "overcommittedPodOwner": "is the pod owner to be slashed"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
          },
          "slashQueuedWithdrawal(address,(address[],uint256[],address,(address,uint96),uint32,address),address[],uint256[])": {
            "params": {
              "indicesToSkip": "Optional input parameter -- indices in the `strategies` array to skip (i.e. not call the 'withdraw' function on). This input exists so that, e.g., if the slashed QueuedWithdrawal contains a malicious strategy in the `strategies` array which always reverts on calls to its 'withdraw' function, then the malicious strategy can be skipped (with the shares in effect \"burned\"), while the non-malicious strategies are still called as normal.",
              "queuedWithdrawal": "The previously queued withdrawal to be slashed",
              "recipient": "The funds in the slashed withdrawal are withdrawn as tokens to this address.",
              "tokens": "Array in which the i-th entry specifies the `token` input to the 'withdraw' function of the i-th Strategy in the `strategies` array of the `queuedWithdrawal`."
            }
          },
          "slashShares(address,address,address[],address[],uint256[],uint256[])": {
            "details": "strategies are removed from `stakerStrategyList` by swapping the last entry with the entry to be removed, then popping off the last entry in `stakerStrategyList`. The simplest way to calculate the correct `strategyIndexes` to input is to order the strategies *for which `msg.sender` is withdrawing 100% of their shares* from highest index in `stakerStrategyList` to lowest index",
            "params": {
              "recipient": "The slashed funds are withdrawn as tokens to this address.",
              "slashedAddress": "is the frozen address that is having its shares slashed",
              "strategyIndexes": "is a list of the indices in `stakerStrategyList[msg.sender]` that correspond to the strategies for which `msg.sender` is withdrawing 100% of their shares"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "unpause(uint256)": {
            "details": "This function can only unpause functionality, and thus cannot 'flip' any bit in `_paused` from 0 to 1.",
            "params": {
              "newPausedStatus": "represents the new value for `_paused` to take, which means it may flip several bits at once."
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "DEPOSIT_TYPEHASH()": {
            "notice": "The EIP-712 typehash for the deposit struct used by the contract"
          },
          "DOMAIN_SEPARATOR()": {
            "notice": "EIP-712 Domain separator"
          },
          "DOMAIN_TYPEHASH()": {
            "notice": "The EIP-712 typehash for the contract's domain"
          },
          "addStrategiesToDepositWhitelist(address[])": {
            "notice": "Owner-only function that adds the provided Strategies to the 'whitelist' of strategies that stakers can deposit into"
          },
          "beaconChainETHStrategy()": {
            "notice": "returns the enshrined beaconChainETH Strategy"
          },
          "calculateWithdrawalRoot((address[],uint256[],address,(address,uint96),uint32,address))": {
            "notice": "Returns the keccak256 hash of `queuedWithdrawal`."
          },
          "completeQueuedWithdrawal((address[],uint256[],address,(address,uint96),uint32,address),address[],uint256,bool)": {
            "notice": "Used to complete the specified `queuedWithdrawal`. The function caller must match `queuedWithdrawal.withdrawer`"
          },
          "completeQueuedWithdrawals((address[],uint256[],address,(address,uint96),uint32,address)[],address[][],uint256[],bool[])": {
            "notice": "Used to complete the specified `queuedWithdrawals`. The function caller must match `queuedWithdrawals[...].withdrawer`"
          },
          "delegation()": {
            "notice": "Returns the single, central Delegation contract of EigenLayer"
          },
          "depositBeaconChainETH(address,uint256)": {
            "notice": "Deposits `amount` of beaconchain ETH into this contract on behalf of `staker`"
          },
          "depositIntoStrategy(address,address,uint256)": {
            "notice": "Deposits `amount` of `token` into the specified `strategy`, with the resultant shares credited to `depositor`"
          },
          "depositIntoStrategyWithSignature(address,address,uint256,address,uint256,bytes)": {
            "notice": "Used for depositing an asset into the specified strategy with the resultant shared created to `staker`, who must sign off on the action"
          },
          "getDeposits(address)": {
            "notice": "Get all details on the depositor's deposits and corresponding shares"
          },
          "initialize(address,address,address,uint256,uint256)": {
            "notice": "Initializes the strategy manager contract. Sets the `pauserRegistry` (currently **not** modifiable after being set), and transfers contract ownership to the specified `initialOwner`."
          },
          "numWithdrawalsQueued(address)": {
            "notice": "Mapping: staker => cumulative number of queued withdrawals they have ever initiated. only increments (doesn't decrement)"
          },
          "pause(uint256)": {
            "notice": "This function is used to pause an EigenLayer/DataLayer contract's functionality. It is permissioned to the `pauser` address, which is expected to be a low threshold multisig."
          },
          "pauseAll()": {
            "notice": "Alias for `pause(type(uint256).max)`."
          },
          "paused()": {
            "notice": "Returns the current paused status as a uint256."
          },
          "paused(uint8)": {
            "notice": "Returns 'true' if the `indexed`th bit of `_paused` is 1, and 'false' otherwise"
          },
          "pauserRegistry()": {
            "notice": "Address of the `PauserRegistry` contract that this contract defers to for determining access control (for pausing)."
          },
          "queueWithdrawal(uint256[],address[],uint256[],address,bool)": {
            "notice": "Called by a staker to queue a withdrawal of the given amount of `shares` from each of the respective given `strategies`."
          },
          "recordOvercommittedBeaconChainETH(address,uint256,uint256)": {
            "notice": "Records an overcommitment event on behalf of a staker. The staker's beaconChainETH shares are decremented by `amount`."
          },
          "removeStrategiesFromDepositWhitelist(address[])": {
            "notice": "Owner-only function that removes the provided Strategies from the 'whitelist' of strategies that stakers can deposit into"
          },
          "setStrategyWhitelister(address)": {
            "notice": "Owner-only function to change the `strategyWhitelister` address."
          },
          "setWithdrawalDelayBlocks(uint256)": {
            "notice": "Owner-only function for modifying the value of the `withdrawalDelayBlocks` variable."
          },
          "slashQueuedWithdrawal(address,(address[],uint256[],address,(address,uint96),uint32,address),address[],uint256[])": {
            "notice": "Slashes an existing queued withdrawal that was created by a 'frozen' operator (or a staker delegated to one)"
          },
          "slashShares(address,address,address[],address[],uint256[],uint256[])": {
            "notice": "Slashes the shares of a 'frozen' operator (or a staker delegated to one)"
          },
          "slasher()": {
            "notice": "Returns the single, central Slasher contract of EigenLayer"
          },
          "stakerStrategyList(address,uint256)": {
            "notice": "Mapping: staker => array of strategies in which they have nonzero shares"
          },
          "stakerStrategyListLength(address)": {
            "notice": "Simple getter function that returns `stakerStrategyList[staker].length`."
          },
          "stakerStrategyShares(address,address)": {
            "notice": "Mapping: staker => Strategy => number of shares which they currently hold"
          },
          "strategyIsWhitelistedForDeposit(address)": {
            "notice": "Mapping: strategy => whether or not stakers are allowed to deposit into it"
          },
          "strategyWhitelister()": {
            "notice": "Permissioned role, which can be changed by the contract owner. Has the ability to edit the strategy whitelist"
          },
          "undelegate()": {
            "notice": "Called by a staker to undelegate entirely from EigenLayer. The staker must first withdraw all of their existing deposits (through use of the `queueWithdrawal` function), or else otherwise have never deposited in EigenLayer prior to delegating."
          },
          "unpause(uint256)": {
            "notice": "This function is used to unpause an EigenLayer/DataLayercontract's functionality. It is permissioned to the `unpauser` address, which is expected to be a high threshold multisig or goverance contract."
          },
          "withdrawalDelayBlocks()": {
            "notice": "Minimum delay enforced by this contract for completing queued withdrawals. Measured in blocks, and adjustable by this contract's owner, up to a maximum of `MAX_WITHDRAWAL_DELAY_BLOCKS`. Minimum value is 0 (i.e. no delay enforced)."
          },
          "withdrawalRootPending(bytes32)": {
            "notice": "Mapping: hash of withdrawal inputs, aka 'withdrawalRoot' => whether the withdrawal is pending"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/core/StrategyManager.sol": "StrategyManager"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0x247c62047745915c0af6b955470a72d1696ebad4352d7d3011aef1a2463cd888",
        "urls": [
          "bzz-raw://d7fc8396619de513c96b6e00301b88dd790e83542aab918425633a5f7297a15a",
          "dweb:/ipfs/QmXbP4kiZyp7guuS7xe8KaybnwkRPGrBc2Kbi3vhcTfpxb"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x0203dcadc5737d9ef2c211d6fa15d18ebc3b30dfa51903b64870b01a062b0b4e",
        "urls": [
          "bzz-raw://6eb2fd1e9894dbe778f4b8131adecebe570689e63cf892f4e21257bfe1252497",
          "dweb:/ipfs/QmXgUGNfZvrn6N2miv3nooSs7Jm34A41qz94fu2GtDFcx8"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol": {
        "keccak256": "0x8cc03c5ac17e8a7396e487cda41fc1f1dfdb91db7d528e6da84bee3b6dd7e167",
        "urls": [
          "bzz-raw://607818f1b44548c2d8268176f73cdb290e1faed971b1061930d92698366e2a11",
          "dweb:/ipfs/QmQibMe3r5no95b6q7isGT5R75V8xSofWEDLXzp95b7LgZ"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/AddressUpgradeable.sol": {
        "keccak256": "0x611aa3f23e59cfdd1863c536776407b3e33d695152a266fa7cfb34440a29a8a3",
        "urls": [
          "bzz-raw://9b4b2110b7f2b3eb32951bc08046fa90feccffa594e1176cb91cdfb0e94726b4",
          "dweb:/ipfs/QmSxLwYjicf9zWFuieRc8WQwE4FisA1Um5jp1iSa731TGt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0x963ea7f0b48b032eef72fe3a7582edf78408d6f834115b9feadd673a4d5bd149",
        "urls": [
          "bzz-raw://d6520943ea55fdf5f0bafb39ed909f64de17051bc954ff3e88c9e5621412c79c",
          "dweb:/ipfs/QmWZ4rAKTQbNG2HxGs46AcTXShsVytKeLs7CUCdCSv5N7a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol": {
        "keccak256": "0x0705a4b1b86d7b0bd8432118f226ba139c44b9dcaba0a6eafba2dd7d0639c544",
        "urls": [
          "bzz-raw://c45b821ef9e882e57c256697a152e108f0f2ad6997609af8904cae99c9bd422e",
          "dweb:/ipfs/QmRKCJW6jjzR5UYZcLpGnhEJ75UVbH6EHkEa49sWx2SKng"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/draft-IERC20Permit.sol": {
        "keccak256": "0xf41ca991f30855bf80ffd11e9347856a517b977f0a6c2d52e6421a99b7840329",
        "urls": [
          "bzz-raw://b2717fd2bdac99daa960a6de500754ea1b932093c946388c381da48658234b95",
          "dweb:/ipfs/QmP6QVMn6UeA3ByahyJbYQr5M6coHKBKsf3ySZSfbyA8R7"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol": {
        "keccak256": "0x032807210d1d7d218963d7355d62e021a84bf1b3339f4f50be2f63b53cccaf29",
        "urls": [
          "bzz-raw://11756f42121f6541a35a8339ea899ee7514cfaa2e6d740625fcc844419296aa6",
          "dweb:/ipfs/QmekMuk6BY4DAjzeXr4MSbKdgoqqsZnA8JPtuyWc6CwXHf"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xd6153ce99bcdcce22b124f755e72553295be6abcd63804cfdffceb188b8bef10",
        "urls": [
          "bzz-raw://35c47bece3c03caaa07fab37dd2bb3413bfbca20db7bd9895024390e0a469487",
          "dweb:/ipfs/QmPGWT2x3QHcKxqe6gRmAkdakhbaRgx3DLzcakHz5M4eXG"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Strings.sol": {
        "keccak256": "0xaf159a8b1923ad2a26d516089bceca9bdeaeacd04be50983ea00ba63070f08a3",
        "urls": [
          "bzz-raw://6f2cf1c531122bc7ca96b8c8db6a60deae60441e5223065e792553d4849b5638",
          "dweb:/ipfs/QmPBdJmBBABMDCfyDjCbdxgiqRavgiSL88SYPGibgbPas9"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol": {
        "keccak256": "0x84ac2d2f343df1e683da7a12bbcf70db542a7a7a0cea90a5d70fcb5e5d035481",
        "urls": [
          "bzz-raw://73ae8e0c6f975052973265113d762629002ce33987b1933c2a378667e2816f2f",
          "dweb:/ipfs/QmQAootkVfoe4PLaYbT4Xob2dJRm3bZfbCffEHRbCYXNPF"
        ],
        "license": "MIT"
      },
      "src/contracts/core/StrategyManager.sol": {
        "keccak256": "0xb2ac04195c7fd6df54d90c9f33d036903944a77ad6006df252965a120e6f4afb",
        "urls": [
          "bzz-raw://09cda53b5706e15bb9b3cb46645c3668d7d9b8109edf846463927e50a459887b",
          "dweb:/ipfs/QmSfTJMmLWnUFrLTG6rJUj3CctAoeazQA7sKh9G3c4fVNw"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/core/StrategyManagerStorage.sol": {
        "keccak256": "0xe372c8cbbac742aa24318216c9460931325075d34cb74a340f631a1323c3442d",
        "urls": [
          "bzz-raw://e34ff34bb695512d8661ff53277b924d2fbb3ff5b3f77055475537f05c216fd3",
          "dweb:/ipfs/QmNNzrwjJV1wv3EEFL8Y2V6JR4ii7xLRARKM5mpv5wzP52"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IBeaconChainOracle.sol": {
        "keccak256": "0x29fa5d8622b28df98e4650fb1c7512ab8c0882652576c60daf3ae61071300a40",
        "urls": [
          "bzz-raw://af2a5657343150d5b4dcd9453315d61c21c996cbf0f422a103b74213e3e30832",
          "dweb:/ipfs/QmWjt1cQvJFqr5kYWKEhN3Zj1YYUhj9xrt6pJVR9uHvfDj"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IDelegationManager.sol": {
        "keccak256": "0x23a784e90deb832e06dda8896e0824dd11c6be4f2c1d9eece5a7940224429787",
        "urls": [
          "bzz-raw://b55f793a01f25d11fac2db518e0b999474f2553d11fee4841656e0edb6bcacfa",
          "dweb:/ipfs/QmYfEPhFYQAoqu21XmAC35Y4ayyhMwjRDX8FpHTsUzbTx9"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IDelegationTerms.sol": {
        "keccak256": "0x9296e4d375b90b8165fe587f69fb629148186c49eba88a3e80a9141f4ac7ade0",
        "urls": [
          "bzz-raw://0509fb75fb6ec9e992ec0c8591bbce6b745bc171ae1e7c5eb905c8be9655fa6f",
          "dweb:/ipfs/QmNNDbv65MwHTnwNGb71SExMwas4GYo8d3cbgPPhPYHqiM"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IEigenPod.sol": {
        "keccak256": "0x314d10944a545be05c30f61e418dfcda863b0888de0dc9ef8a8206c03ba28f8e",
        "urls": [
          "bzz-raw://36e46b5608249ae3ae273ba5ec255c866ee85237202da2d9f85f344860621cbc",
          "dweb:/ipfs/QmPYLFLumGv64wRFPpavaJkxfrz9tgmmwZGBn8ys5WviRi"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IEigenPodManager.sol": {
        "keccak256": "0xca9c980e5dc25d552cf65462aaabb01cee8b8f6ceedbaa1d65d03fcdb8fbe2a3",
        "urls": [
          "bzz-raw://ed9fa8f24bfa2fd84f76f0ce91b3fc7789deae16b0c75175f3d520e9b498b0fe",
          "dweb:/ipfs/Qmee8y4ZCU8cEYTjhFvwXn1sP5G5B8uRyYWAJDiLBiswXd"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPausable.sol": {
        "keccak256": "0x770f1a8f427931a1553cad488b1af1a88ce30aae5f879042a1b47bece91992b3",
        "urls": [
          "bzz-raw://9d71f1c4ad5c48c7bae74651a0706bbd84fe0c6ae66e66d098cfeee2112412fe",
          "dweb:/ipfs/QmQKHU7eWDTtSsjuf9qUFFHouvn21B5eYihw6zoz369UnN"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IPauserRegistry.sol": {
        "keccak256": "0x3ea07659059573da05c344fcf0c18348336d27a33f25afaddde5362a8bde634f",
        "urls": [
          "bzz-raw://a957c2ff7cdc400b87c0d30bc90638411d0197f3171effe58e12a184c6cc9df6",
          "dweb:/ipfs/Qmb86ypg6LKCs1xyVZic6DmUZGgi8bJ6ZuEzcWauuEkNxJ"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/ISlasher.sol": {
        "keccak256": "0x1b76eeab81fdfa33b63066235e2c20c9c99cc49f6cf3cb0fe210a954d197574e",
        "urls": [
          "bzz-raw://d7df3df25eea9cfe14bce1c5b80c4d5bb00bec9be9d075bf569805d09c5c8fce",
          "dweb:/ipfs/QmNzyJaTYQWCFnaD6TzBmehSELTCNrYzknUEZ7Xzw4hXdZ"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0x0c3daab62258fedec77cf8208533e6e58514b28cfb5bed97e58ec90ed41074d1",
        "urls": [
          "bzz-raw://791c6196dacfe02aaf5fa19e78cd32f5a175344de5891ba6a2c8a4ba989c0263",
          "dweb:/ipfs/QmWJV7fR168qspKpSadFyKMwmwvPU9qiv5GyzuDYgNGWL7"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/interfaces/IStrategyManager.sol": {
        "keccak256": "0x0f351bd573c29b6d2112f4ec1194f21ca3b739adaad5c053c6def4110081fc7d",
        "urls": [
          "bzz-raw://efba3cdd573d4fa9f38c7dc8176c9cccafa567274b54532a56dccccdd8ebbb94",
          "dweb:/ipfs/QmWhQXrjmi8DfMmoZ13YuypFyPUANtwcFMNkfMPcuCnWRs"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/BeaconChainProofs.sol": {
        "keccak256": "0x322fd1e384fbd0683d46a5ae67c9b1cf4853fcb4135a6c4adcb3274dcaa70070",
        "urls": [
          "bzz-raw://3b3e2e9c135b2f2cbaea536fb6d4c40ce0f11ab90df6cea9e05af59cfdf17b8c",
          "dweb:/ipfs/QmbW8KbV6a1Q6rg4ZpAGuJXZfoCM7BoopPVBmyeMgvH5vY"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/Endian.sol": {
        "keccak256": "0x65442f0fc44fa0a1a3092fbbd9df36a0873178905ac253f820f8e29a30f7befb",
        "urls": [
          "bzz-raw://72dd0c1c01183d23867ea3298b8a5954202f89870cae78322cf1c58900e3cf2d",
          "dweb:/ipfs/QmRqogA9v899RbygwNW8wY3QP4RsnZXRAx6vMBbM6yNyrn"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/libraries/Merkle.sol": {
        "keccak256": "0x4d3f0b3d7d04c5862a13882b5d21ee1fe6514966677ab93d270fb0d6b1949b12",
        "urls": [
          "bzz-raw://e4717c374e8f31c97970609a450df66b420b8ffc33401504baef836c376f5cf2",
          "dweb:/ipfs/QmWUGaa1zELy8hkji9KDASZAe2mncF8iPCC1Gy7XFbF2Ru"
        ],
        "license": "BUSL-1.1"
      },
      "src/contracts/permissions/Pausable.sol": {
        "keccak256": "0x2f1b473b4fb5e3dcc96a1857eebafe21741ecec3d62e9140379f6052e15f2354",
        "urls": [
          "bzz-raw://ac2b864416ec66f07d744d3eb5ee7847b7b77a721abdce7f13f7455f4a5fde35",
          "dweb:/ipfs/QmQbvZEE6ekZqvbp3o2oGvd8Vi2uvWspYuJ15h7TZ5wAPB"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/contracts/core/StrategyManager.sol",
    "id": 42305,
    "exportedSymbols": {
      "Address": [
        32599
      ],
      "AddressUpgradeable": [
        29595
      ],
      "BeaconChainProofs": [
        45863
      ],
      "ContextUpgradeable": [
        29637
      ],
      "ECDSA": [
        33425
      ],
      "Endian": [
        46280
      ],
      "IBeaconChainOracle": [
        42629
      ],
      "IDelegationManager": [
        42848
      ],
      "IDelegationTerms": [
        42889
      ],
      "IERC1271": [
        30307
      ],
      "IERC20": [
        31889
      ],
      "IERC20Permit": [
        31994
      ],
      "IEigenPod": [
        43095
      ],
      "IEigenPodManager": [
        43208
      ],
      "IPausable": [
        43250
      ],
      "IPauserRegistry": [
        43266
      ],
      "ISlasher": [
        43877
      ],
      "IStrategy": [
        43971
      ],
      "IStrategyManager": [
        44228
      ],
      "Initializable": [
        29293
      ],
      "Merkle": [
        46536
      ],
      "OwnableUpgradeable": [
        29142
      ],
      "Pausable": [
        53480
      ],
      "ReentrancyGuardUpgradeable": [
        29352
      ],
      "SafeERC20": [
        32304
      ],
      "StrategyManager": [
        42304
      ],
      "StrategyManagerStorage": [
        42426
      ],
      "Strings": [
        33018
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:45446:72",
    "nodes": [
      {
        "id": 40308,
        "nodeType": "PragmaDirective",
        "src": "37:24:72",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 40309,
        "nodeType": "ImportDirective",
        "src": "63:57:72",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/interfaces/IERC1271.sol",
        "file": "@openzeppelin/contracts/interfaces/IERC1271.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42305,
        "sourceUnit": 30308,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 40310,
        "nodeType": "ImportDirective",
        "src": "121:51:72",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/Address.sol",
        "file": "@openzeppelin/contracts/utils/Address.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42305,
        "sourceUnit": 32600,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 40311,
        "nodeType": "ImportDirective",
        "src": "173:72:72",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol",
        "file": "@openzeppelin-upgrades/contracts/proxy/utils/Initializable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42305,
        "sourceUnit": 29294,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 40312,
        "nodeType": "ImportDirective",
        "src": "246:72:72",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol",
        "file": "@openzeppelin-upgrades/contracts/access/OwnableUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42305,
        "sourceUnit": 29143,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 40313,
        "nodeType": "ImportDirective",
        "src": "319:82:72",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts-upgradeable/contracts/security/ReentrancyGuardUpgradeable.sol",
        "file": "@openzeppelin-upgrades/contracts/security/ReentrancyGuardUpgradeable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42305,
        "sourceUnit": 29353,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 40314,
        "nodeType": "ImportDirective",
        "src": "402:65:72",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/utils/SafeERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/utils/SafeERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42305,
        "sourceUnit": 32305,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 40315,
        "nodeType": "ImportDirective",
        "src": "468:62:72",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/utils/cryptography/ECDSA.sol",
        "file": "@openzeppelin/contracts/utils/cryptography/ECDSA.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42305,
        "sourceUnit": 33426,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 40316,
        "nodeType": "ImportDirective",
        "src": "531:44:72",
        "nodes": [],
        "absolutePath": "src/contracts/interfaces/IEigenPodManager.sol",
        "file": "../interfaces/IEigenPodManager.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42305,
        "sourceUnit": 43209,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 40317,
        "nodeType": "ImportDirective",
        "src": "576:37:72",
        "nodes": [],
        "absolutePath": "src/contracts/permissions/Pausable.sol",
        "file": "../permissions/Pausable.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42305,
        "sourceUnit": 53481,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 40318,
        "nodeType": "ImportDirective",
        "src": "614:38:72",
        "nodes": [],
        "absolutePath": "src/contracts/core/StrategyManagerStorage.sol",
        "file": "./StrategyManagerStorage.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 42305,
        "sourceUnit": 42427,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 42304,
        "nodeType": "ContractDefinition",
        "src": "1176:44306:72",
        "nodes": [
          {
            "id": 40333,
            "nodeType": "UsingForDirective",
            "src": "1326:27:72",
            "nodes": [],
            "libraryName": {
              "id": 40330,
              "name": "SafeERC20",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 32304,
              "src": "1332:9:72"
            },
            "typeName": {
              "id": 40332,
              "nodeType": "UserDefinedTypeName",
              "pathNode": {
                "id": 40331,
                "name": "IERC20",
                "nodeType": "IdentifierPath",
                "referencedDeclaration": 31889,
                "src": "1346:6:72"
              },
              "referencedDeclaration": 31889,
              "src": "1346:6:72",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_IERC20_$31889",
                "typeString": "contract IERC20"
              }
            }
          },
          {
            "id": 40336,
            "nodeType": "VariableDeclaration",
            "src": "1359:43:72",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "GWEI_TO_WEI",
            "nameLocation": "1385:11:72",
            "scope": 42304,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40334,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1359:7:72",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "value": {
              "hexValue": "316539",
              "id": 40335,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1399:3:72",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1000000000_by_1",
                "typeString": "int_const 1000000000"
              },
              "value": "1e9"
            },
            "visibility": "internal"
          },
          {
            "id": 40339,
            "nodeType": "VariableDeclaration",
            "src": "1461:43:72",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "PAUSED_DEPOSITS",
            "nameLocation": "1485:15:72",
            "scope": 42304,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 40337,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1461:5:72",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "30",
              "id": 40338,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1503:1:72",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_0_by_1",
                "typeString": "int_const 0"
              },
              "value": "0"
            },
            "visibility": "internal"
          },
          {
            "id": 40342,
            "nodeType": "VariableDeclaration",
            "src": "1565:46:72",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "PAUSED_WITHDRAWALS",
            "nameLocation": "1589:18:72",
            "scope": 42304,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 40340,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "1565:5:72",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "hexValue": "31",
              "id": 40341,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1610:1:72",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_1_by_1",
                "typeString": "int_const 1"
              },
              "value": "1"
            },
            "visibility": "internal"
          },
          {
            "id": 40344,
            "nodeType": "VariableDeclaration",
            "src": "1618:35:72",
            "nodes": [],
            "constant": false,
            "mutability": "immutable",
            "name": "ORIGINAL_CHAIN_ID",
            "nameLocation": "1636:17:72",
            "scope": 42304,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint256",
              "typeString": "uint256"
            },
            "typeName": {
              "id": 40343,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "1618:7:72",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            },
            "visibility": "internal"
          },
          {
            "id": 40347,
            "nodeType": "VariableDeclaration",
            "src": "1719:56:72",
            "nodes": [],
            "constant": true,
            "mutability": "constant",
            "name": "ERC1271_MAGICVALUE",
            "nameLocation": "1744:18:72",
            "scope": 42304,
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_bytes4",
              "typeString": "bytes4"
            },
            "typeName": {
              "id": 40345,
              "name": "bytes4",
              "nodeType": "ElementaryTypeName",
              "src": "1719:6:72",
              "typeDescriptions": {
                "typeIdentifier": "t_bytes4",
                "typeString": "bytes4"
              }
            },
            "value": {
              "hexValue": "30783136323662613765",
              "id": 40346,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "1765:10:72",
              "typeDescriptions": {
                "typeIdentifier": "t_rational_371636862_by_1",
                "typeString": "int_const 371636862"
              },
              "value": "0x1626ba7e"
            },
            "visibility": "internal"
          },
          {
            "id": 40360,
            "nodeType": "EventDefinition",
            "src": "2165:97:72",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 40348,
              "nodeType": "StructuredDocumentation",
              "src": "1782:378:72",
              "text": " @notice Emitted when a new deposit occurs on behalf of `depositor`.\n @param depositor Is the staker who is depositing funds into EigenLayer.\n @param strategy Is the strategy that `depositor` has deposited into.\n @param token Is the token that `depositor` deposited.\n @param shares Is the number of shares `depositor` has in `strategy`."
            },
            "name": "Deposit",
            "nameLocation": "2171:7:72",
            "parameters": {
              "id": 40359,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40350,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "depositor",
                  "nameLocation": "2196:9:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40360,
                  "src": "2188:17:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40349,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2188:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40353,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "2214:5:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40360,
                  "src": "2207:12:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$31889",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 40352,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40351,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31889,
                      "src": "2207:6:72"
                    },
                    "referencedDeclaration": 31889,
                    "src": "2207:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$31889",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40356,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "2231:8:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40360,
                  "src": "2221:18:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$43971",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 40355,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40354,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43971,
                      "src": "2221:9:72"
                    },
                    "referencedDeclaration": 43971,
                    "src": "2221:9:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$43971",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40358,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "2249:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40360,
                  "src": "2241:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40357,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2241:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2178:83:72"
            }
          },
          {
            "id": 40372,
            "nodeType": "EventDefinition",
            "src": "2689:111:72",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 40361,
              "nodeType": "StructuredDocumentation",
              "src": "2268:416:72",
              "text": " @notice Emitted when a new withdrawal occurs on behalf of `depositor`.\n @param depositor Is the staker who is queuing a withdrawal from EigenLayer.\n @param nonce Is the withdrawal's unique identifier (to the depositor).\n @param strategy Is the strategy that `depositor` has queued to withdraw from.\n @param shares Is the number of shares `depositor` has queued to withdraw."
            },
            "name": "ShareWithdrawalQueued",
            "nameLocation": "2695:21:72",
            "parameters": {
              "id": 40371,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40363,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "depositor",
                  "nameLocation": "2734:9:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40372,
                  "src": "2726:17:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40362,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2726:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40365,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "2752:5:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40372,
                  "src": "2745:12:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40364,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "2745:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40368,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "2769:8:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40372,
                  "src": "2759:18:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$43971",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 40367,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40366,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43971,
                      "src": "2759:9:72"
                    },
                    "referencedDeclaration": 43971,
                    "src": "2759:9:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$43971",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40370,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "2787:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40372,
                  "src": "2779:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40369,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2779:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2716:83:72"
            }
          },
          {
            "id": 40385,
            "nodeType": "EventDefinition",
            "src": "3396:140:72",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 40373,
              "nodeType": "StructuredDocumentation",
              "src": "2806:585:72",
              "text": " @notice Emitted when a new withdrawal is queued by `depositor`.\n @param depositor Is the staker who is withdrawing funds from EigenLayer.\n @param nonce Is the withdrawal's unique identifier (to the depositor).\n @param withdrawer Is the party specified by `staker` who will be able to complete the queued withdrawal and receive the withdrawn funds.\n @param delegatedAddress Is the party who the `staker` was delegated to at the time of creating the queued withdrawal\n @param withdrawalRoot Is a hash of the input data for the withdrawal."
            },
            "name": "WithdrawalQueued",
            "nameLocation": "3402:16:72",
            "parameters": {
              "id": 40384,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40375,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "depositor",
                  "nameLocation": "3436:9:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40385,
                  "src": "3428:17:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40374,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3428:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40377,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "3454:5:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40385,
                  "src": "3447:12:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40376,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3447:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40379,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withdrawer",
                  "nameLocation": "3469:10:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40385,
                  "src": "3461:18:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40378,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3461:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40381,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "delegatedAddress",
                  "nameLocation": "3489:16:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40385,
                  "src": "3481:24:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40380,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3481:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40383,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withdrawalRoot",
                  "nameLocation": "3515:14:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40385,
                  "src": "3507:22:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 40382,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3507:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3418:117:72"
            }
          },
          {
            "id": 40396,
            "nodeType": "EventDefinition",
            "src": "3604:119:72",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 40386,
              "nodeType": "StructuredDocumentation",
              "src": "3542:57:72",
              "text": "@notice Emitted when a queued withdrawal is completed"
            },
            "name": "WithdrawalCompleted",
            "nameLocation": "3610:19:72",
            "parameters": {
              "id": 40395,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40388,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "depositor",
                  "nameLocation": "3646:9:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40396,
                  "src": "3630:25:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40387,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3630:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40390,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "nonce",
                  "nameLocation": "3664:5:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40396,
                  "src": "3657:12:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint96",
                    "typeString": "uint96"
                  },
                  "typeName": {
                    "id": 40389,
                    "name": "uint96",
                    "nodeType": "ElementaryTypeName",
                    "src": "3657:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40392,
                  "indexed": true,
                  "mutability": "mutable",
                  "name": "withdrawer",
                  "nameLocation": "3687:10:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40396,
                  "src": "3671:26:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40391,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3671:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40394,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "withdrawalRoot",
                  "nameLocation": "3707:14:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40396,
                  "src": "3699:22:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 40393,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "3699:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3629:93:72"
            }
          },
          {
            "id": 40403,
            "nodeType": "EventDefinition",
            "src": "3795:78:72",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 40397,
              "nodeType": "StructuredDocumentation",
              "src": "3729:61:72",
              "text": "@notice Emitted when the `strategyWhitelister` is changed"
            },
            "name": "StrategyWhitelisterChanged",
            "nameLocation": "3801:26:72",
            "parameters": {
              "id": 40402,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40399,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousAddress",
                  "nameLocation": "3836:15:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40403,
                  "src": "3828:23:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40398,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3828:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40401,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newAddress",
                  "nameLocation": "3861:10:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40403,
                  "src": "3853:18:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40400,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "3853:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3827:45:72"
            }
          },
          {
            "id": 40409,
            "nodeType": "EventDefinition",
            "src": "3975:58:72",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 40404,
              "nodeType": "StructuredDocumentation",
              "src": "3879:91:72",
              "text": "@notice Emitted when a strategy is added to the approved list of strategies for deposit"
            },
            "name": "StrategyAddedToDepositWhitelist",
            "nameLocation": "3981:31:72",
            "parameters": {
              "id": 40408,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40407,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "4023:8:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40409,
                  "src": "4013:18:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$43971",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 40406,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40405,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43971,
                      "src": "4013:9:72"
                    },
                    "referencedDeclaration": 43971,
                    "src": "4013:9:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$43971",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4012:20:72"
            }
          },
          {
            "id": 40415,
            "nodeType": "EventDefinition",
            "src": "4139:62:72",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 40410,
              "nodeType": "StructuredDocumentation",
              "src": "4039:95:72",
              "text": "@notice Emitted when a strategy is removed from the approved list of strategies for deposit"
            },
            "name": "StrategyRemovedFromDepositWhitelist",
            "nameLocation": "4145:35:72",
            "parameters": {
              "id": 40414,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40413,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "4191:8:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40415,
                  "src": "4181:18:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$43971",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 40412,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40411,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43971,
                      "src": "4181:9:72"
                    },
                    "referencedDeclaration": 43971,
                    "src": "4181:9:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$43971",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4180:20:72"
            }
          },
          {
            "id": 40422,
            "nodeType": "EventDefinition",
            "src": "4321:72:72",
            "nodes": [],
            "anonymous": false,
            "documentation": {
              "id": 40416,
              "nodeType": "StructuredDocumentation",
              "src": "4207:109:72",
              "text": "@notice Emitted when the `withdrawalDelayBlocks` variable is modified from `previousValue` to `newValue`."
            },
            "name": "WithdrawalDelayBlocksSet",
            "nameLocation": "4327:24:72",
            "parameters": {
              "id": 40421,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40418,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "previousValue",
                  "nameLocation": "4360:13:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40422,
                  "src": "4352:21:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40417,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4352:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40420,
                  "indexed": false,
                  "mutability": "mutable",
                  "name": "newValue",
                  "nameLocation": "4383:8:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40422,
                  "src": "4375:16:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40419,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4375:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4351:41:72"
            }
          },
          {
            "id": 40437,
            "nodeType": "ModifierDefinition",
            "src": "4399:223:72",
            "nodes": [],
            "body": {
              "id": 40436,
              "nodeType": "Block",
              "src": "4438:184:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40431,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "UnaryOperation",
                        "operator": "!",
                        "prefix": true,
                        "src": "4469:25:72",
                        "subExpression": {
                          "arguments": [
                            {
                              "id": 40429,
                              "name": "staker",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40424,
                              "src": "4487:6:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 40427,
                              "name": "slasher",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42345,
                              "src": "4470:7:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_ISlasher_$43877",
                                "typeString": "contract ISlasher"
                              }
                            },
                            "id": 40428,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "isFrozen",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43763,
                            "src": "4470:16:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                              "typeString": "function (address) view external returns (bool)"
                            }
                          },
                          "id": 40430,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4470:24:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e6f6e6c794e6f7446726f7a656e3a207374616b657220686173206265656e2066726f7a656e20616e64206d6179206265207375626a65637420746f20736c617368696e67",
                        "id": 40432,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4508:86:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_1262a1a1ae745e2d58b69551a39fe209f46023d6baadf3e3e7b44538248ea327",
                          "typeString": "literal_string \"StrategyManager.onlyNotFrozen: staker has been frozen and may be subject to slashing\""
                        },
                        "value": "StrategyManager.onlyNotFrozen: staker has been frozen and may be subject to slashing"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_1262a1a1ae745e2d58b69551a39fe209f46023d6baadf3e3e7b44538248ea327",
                          "typeString": "literal_string \"StrategyManager.onlyNotFrozen: staker has been frozen and may be subject to slashing\""
                        }
                      ],
                      "id": 40426,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4448:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 40433,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4448:156:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40434,
                  "nodeType": "ExpressionStatement",
                  "src": "4448:156:72"
                },
                {
                  "id": 40435,
                  "nodeType": "PlaceholderStatement",
                  "src": "4614:1:72"
                }
              ]
            },
            "name": "onlyNotFrozen",
            "nameLocation": "4408:13:72",
            "parameters": {
              "id": 40425,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40424,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "4430:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40437,
                  "src": "4422:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40423,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4422:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4421:16:72"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 40451,
            "nodeType": "ModifierDefinition",
            "src": "4628:155:72",
            "nodes": [],
            "body": {
              "id": 40450,
              "nodeType": "Block",
              "src": "4664:119:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40444,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40439,
                            "src": "4699:6:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          ],
                          "expression": {
                            "id": 40442,
                            "name": "slasher",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42345,
                            "src": "4682:7:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISlasher_$43877",
                              "typeString": "contract ISlasher"
                            }
                          },
                          "id": 40443,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "isFrozen",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43763,
                          "src": "4682:16:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_bool_$",
                            "typeString": "function (address) view external returns (bool)"
                          }
                        },
                        "id": 40445,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "4682:24:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e6f6e6c7946726f7a656e3a207374616b657220686173206e6f74206265656e2066726f7a656e",
                        "id": 40446,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4708:56:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2c091e33c1871d5a198629515762cc308bb24249cb4ab324279f6b9c67eadd7c",
                          "typeString": "literal_string \"StrategyManager.onlyFrozen: staker has not been frozen\""
                        },
                        "value": "StrategyManager.onlyFrozen: staker has not been frozen"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2c091e33c1871d5a198629515762cc308bb24249cb4ab324279f6b9c67eadd7c",
                          "typeString": "literal_string \"StrategyManager.onlyFrozen: staker has not been frozen\""
                        }
                      ],
                      "id": 40441,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4674:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 40447,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4674:91:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40448,
                  "nodeType": "ExpressionStatement",
                  "src": "4674:91:72"
                },
                {
                  "id": 40449,
                  "nodeType": "PlaceholderStatement",
                  "src": "4775:1:72"
                }
              ]
            },
            "name": "onlyFrozen",
            "nameLocation": "4637:10:72",
            "parameters": {
              "id": 40440,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40439,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "4656:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40451,
                  "src": "4648:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40438,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4648:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4647:16:72"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 40466,
            "nodeType": "ModifierDefinition",
            "src": "4789:168:72",
            "nodes": [],
            "body": {
              "id": 40465,
              "nodeType": "Block",
              "src": "4818:139:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 40460,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "arguments": [
                            {
                              "id": 40456,
                              "name": "eigenPodManager",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42342,
                              "src": "4844:15:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IEigenPodManager_$43208",
                                "typeString": "contract IEigenPodManager"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IEigenPodManager_$43208",
                                "typeString": "contract IEigenPodManager"
                              }
                            ],
                            "id": 40455,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "4836:7:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40454,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "4836:7:72",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40457,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "4836:24:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 40458,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "4864:3:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 40459,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "4864:10:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "4836:38:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e6f6e6c79456967656e506f644d616e616765723a206e6f742074686520656967656e506f644d616e61676572",
                        "id": 40461,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "4876:62:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a6ad200553dd9ee87ba4b74c50ead673fd9c775a7838c1c641c06cd5d5a4319a",
                          "typeString": "literal_string \"StrategyManager.onlyEigenPodManager: not the eigenPodManager\""
                        },
                        "value": "StrategyManager.onlyEigenPodManager: not the eigenPodManager"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a6ad200553dd9ee87ba4b74c50ead673fd9c775a7838c1c641c06cd5d5a4319a",
                          "typeString": "literal_string \"StrategyManager.onlyEigenPodManager: not the eigenPodManager\""
                        }
                      ],
                      "id": 40453,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "4828:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 40462,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "4828:111:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40463,
                  "nodeType": "ExpressionStatement",
                  "src": "4828:111:72"
                },
                {
                  "id": 40464,
                  "nodeType": "PlaceholderStatement",
                  "src": "4949:1:72"
                }
              ]
            },
            "name": "onlyEigenPodManager",
            "nameLocation": "4798:19:72",
            "parameters": {
              "id": 40452,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4818:0:72"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 40478,
            "nodeType": "ModifierDefinition",
            "src": "4963:175:72",
            "nodes": [],
            "body": {
              "id": 40477,
              "nodeType": "Block",
              "src": "4996:142:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 40472,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 40469,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "5014:3:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 40470,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "5014:10:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "id": 40471,
                          "name": "strategyWhitelister",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42348,
                          "src": "5028:19:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "5014:33:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e6f6e6c79537472617465677957686974656c69737465723a206e6f742074686520737472617465677957686974656c6973746572",
                        "id": 40473,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5049:70:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_7eed5718e5f8918dd27a217047b762f206c0ebaa785baaebb5afad02662fe015",
                          "typeString": "literal_string \"StrategyManager.onlyStrategyWhitelister: not the strategyWhitelister\""
                        },
                        "value": "StrategyManager.onlyStrategyWhitelister: not the strategyWhitelister"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_7eed5718e5f8918dd27a217047b762f206c0ebaa785baaebb5afad02662fe015",
                          "typeString": "literal_string \"StrategyManager.onlyStrategyWhitelister: not the strategyWhitelister\""
                        }
                      ],
                      "id": 40468,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5006:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 40474,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5006:114:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40475,
                  "nodeType": "ExpressionStatement",
                  "src": "5006:114:72"
                },
                {
                  "id": 40476,
                  "nodeType": "PlaceholderStatement",
                  "src": "5130:1:72"
                }
              ]
            },
            "name": "onlyStrategyWhitelister",
            "nameLocation": "4972:23:72",
            "parameters": {
              "id": 40467,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4996:0:72"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 40492,
            "nodeType": "ModifierDefinition",
            "src": "5144:224:72",
            "nodes": [],
            "body": {
              "id": 40491,
              "nodeType": "Block",
              "src": "5209:159:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 40484,
                          "name": "strategyIsWhitelistedForDeposit",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42385,
                          "src": "5227:31:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$43971_$_t_bool_$",
                            "typeString": "mapping(contract IStrategy => bool)"
                          }
                        },
                        "id": 40486,
                        "indexExpression": {
                          "id": 40485,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40481,
                          "src": "5259:8:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$43971",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "5227:41:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e6f6e6c795374726174656769657357686974656c6973746564466f724465706f7369743a207374726174656779206e6f742077686974656c6973746564",
                        "id": 40487,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "5270:79:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a08b3e3f20ff77ec50f5e9e2b14191dfdb6adee44cea1ab3aa52c0f06173907f",
                          "typeString": "literal_string \"StrategyManager.onlyStrategiesWhitelistedForDeposit: strategy not whitelisted\""
                        },
                        "value": "StrategyManager.onlyStrategiesWhitelistedForDeposit: strategy not whitelisted"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a08b3e3f20ff77ec50f5e9e2b14191dfdb6adee44cea1ab3aa52c0f06173907f",
                          "typeString": "literal_string \"StrategyManager.onlyStrategiesWhitelistedForDeposit: strategy not whitelisted\""
                        }
                      ],
                      "id": 40483,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "5219:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 40488,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5219:131:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40489,
                  "nodeType": "ExpressionStatement",
                  "src": "5219:131:72"
                },
                {
                  "id": 40490,
                  "nodeType": "PlaceholderStatement",
                  "src": "5360:1:72"
                }
              ]
            },
            "name": "onlyStrategiesWhitelistedForDeposit",
            "nameLocation": "5153:35:72",
            "parameters": {
              "id": 40482,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40481,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "5199:8:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40492,
                  "src": "5189:18:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$43971",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 40480,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40479,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43971,
                      "src": "5189:9:72"
                    },
                    "referencedDeclaration": 43971,
                    "src": "5189:9:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$43971",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5188:20:72"
            },
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 40519,
            "nodeType": "FunctionDefinition",
            "src": "5637:256:72",
            "nodes": [],
            "body": {
              "id": 40518,
              "nodeType": "Block",
              "src": "5811:82:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "id": 40510,
                      "name": "_disableInitializers",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29292,
                      "src": "5821:20:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$__$returns$__$",
                        "typeString": "function ()"
                      }
                    },
                    "id": 40511,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "5821:22:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40512,
                  "nodeType": "ExpressionStatement",
                  "src": "5821:22:72"
                },
                {
                  "expression": {
                    "id": 40516,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40513,
                      "name": "ORIGINAL_CHAIN_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40344,
                      "src": "5853:17:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "expression": {
                        "id": 40514,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "5873:5:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 40515,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "chainid",
                      "nodeType": "MemberAccess",
                      "src": "5873:13:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "5853:33:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40517,
                  "nodeType": "ExpressionStatement",
                  "src": "5853:33:72"
                }
              ]
            },
            "documentation": {
              "id": 40493,
              "nodeType": "StructuredDocumentation",
              "src": "5374:258:72",
              "text": " @param _delegation The delegation contract of EigenLayer.\n @param _slasher The primary slashing contract of EigenLayer.\n @param _eigenPodManager The contract that keeps track of EigenPod stakes for restaking beacon chain ether."
            },
            "implemented": true,
            "kind": "constructor",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 40505,
                    "name": "_delegation",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40496,
                    "src": "5766:11:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDelegationManager_$42848",
                      "typeString": "contract IDelegationManager"
                    }
                  },
                  {
                    "id": 40506,
                    "name": "_eigenPodManager",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40499,
                    "src": "5779:16:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEigenPodManager_$43208",
                      "typeString": "contract IEigenPodManager"
                    }
                  },
                  {
                    "id": 40507,
                    "name": "_slasher",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40502,
                    "src": "5797:8:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISlasher_$43877",
                      "typeString": "contract ISlasher"
                    }
                  }
                ],
                "id": 40508,
                "kind": "baseConstructorSpecifier",
                "modifierName": {
                  "id": 40504,
                  "name": "StrategyManagerStorage",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 42426,
                  "src": "5743:22:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "5743:63:72"
              }
            ],
            "name": "",
            "nameLocation": "-1:-1:-1",
            "parameters": {
              "id": 40503,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40496,
                  "mutability": "mutable",
                  "name": "_delegation",
                  "nameLocation": "5668:11:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40519,
                  "src": "5649:30:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IDelegationManager_$42848",
                    "typeString": "contract IDelegationManager"
                  },
                  "typeName": {
                    "id": 40495,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40494,
                      "name": "IDelegationManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 42848,
                      "src": "5649:18:72"
                    },
                    "referencedDeclaration": 42848,
                    "src": "5649:18:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IDelegationManager_$42848",
                      "typeString": "contract IDelegationManager"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40499,
                  "mutability": "mutable",
                  "name": "_eigenPodManager",
                  "nameLocation": "5698:16:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40519,
                  "src": "5681:33:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IEigenPodManager_$43208",
                    "typeString": "contract IEigenPodManager"
                  },
                  "typeName": {
                    "id": 40498,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40497,
                      "name": "IEigenPodManager",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43208,
                      "src": "5681:16:72"
                    },
                    "referencedDeclaration": 43208,
                    "src": "5681:16:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IEigenPodManager_$43208",
                      "typeString": "contract IEigenPodManager"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40502,
                  "mutability": "mutable",
                  "name": "_slasher",
                  "nameLocation": "5725:8:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40519,
                  "src": "5716:17:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_ISlasher_$43877",
                    "typeString": "contract ISlasher"
                  },
                  "typeName": {
                    "id": 40501,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40500,
                      "name": "ISlasher",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43877,
                      "src": "5716:8:72"
                    },
                    "referencedDeclaration": 43877,
                    "src": "5716:8:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_ISlasher_$43877",
                      "typeString": "contract ISlasher"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "5648:86:72"
            },
            "returnParameters": {
              "id": 40509,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "5811:0:72"
            },
            "scope": 42304,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "public"
          },
          {
            "id": 40574,
            "nodeType": "FunctionDefinition",
            "src": "6482:580:72",
            "nodes": [],
            "body": {
              "id": 40573,
              "nodeType": "Block",
              "src": "6695:367:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 40554,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40536,
                      "name": "DOMAIN_SEPARATOR",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42329,
                      "src": "6705:16:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "arguments": [
                            {
                              "id": 40540,
                              "name": "DOMAIN_TYPEHASH",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42320,
                              "src": "6745:15:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "arguments": [
                                    {
                                      "hexValue": "456967656e4c61796572",
                                      "id": 40544,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "string",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "6778:12:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_stringliteral_71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea",
                                        "typeString": "literal_string \"EigenLayer\""
                                      },
                                      "value": "EigenLayer"
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_stringliteral_71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea",
                                        "typeString": "literal_string \"EigenLayer\""
                                      }
                                    ],
                                    "id": 40543,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "6772:5:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                      "typeString": "type(bytes storage pointer)"
                                    },
                                    "typeName": {
                                      "id": 40542,
                                      "name": "bytes",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "6772:5:72",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 40545,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "6772:19:72",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes_memory_ptr",
                                    "typeString": "bytes memory"
                                  }
                                ],
                                "id": 40541,
                                "name": "keccak256",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -8,
                                "src": "6762:9:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                  "typeString": "function (bytes memory) pure returns (bytes32)"
                                }
                              },
                              "id": 40546,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6762:30:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            {
                              "id": 40547,
                              "name": "ORIGINAL_CHAIN_ID",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40344,
                              "src": "6794:17:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "id": 40550,
                                  "name": "this",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -28,
                                  "src": "6821:4:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_StrategyManager_$42304",
                                    "typeString": "contract StrategyManager"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_contract$_StrategyManager_$42304",
                                    "typeString": "contract StrategyManager"
                                  }
                                ],
                                "id": 40549,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "6813:7:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_address_$",
                                  "typeString": "type(address)"
                                },
                                "typeName": {
                                  "id": 40548,
                                  "name": "address",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "6813:7:72",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 40551,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "6813:13:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "expression": {
                              "id": 40538,
                              "name": "abi",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -1,
                              "src": "6734:3:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_abi",
                                "typeString": "abi"
                              }
                            },
                            "id": 40539,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "memberName": "encode",
                            "nodeType": "MemberAccess",
                            "src": "6734:10:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                              "typeString": "function () pure returns (bytes memory)"
                            }
                          },
                          "id": 40552,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "6734:93:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_bytes_memory_ptr",
                            "typeString": "bytes memory"
                          }
                        ],
                        "id": 40537,
                        "name": "keccak256",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -8,
                        "src": "6724:9:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                          "typeString": "function (bytes memory) pure returns (bytes32)"
                        }
                      },
                      "id": 40553,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "6724:104:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      }
                    },
                    "src": "6705:123:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "id": 40555,
                  "nodeType": "ExpressionStatement",
                  "src": "6705:123:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40557,
                        "name": "_pauserRegistry",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40527,
                        "src": "6856:15:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$43266",
                          "typeString": "contract IPauserRegistry"
                        }
                      },
                      {
                        "id": 40558,
                        "name": "initialPausedStatus",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40529,
                        "src": "6873:19:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_contract$_IPauserRegistry_$43266",
                          "typeString": "contract IPauserRegistry"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 40556,
                      "name": "_initializePauser",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 53353,
                      "src": "6838:17:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IPauserRegistry_$43266_$_t_uint256_$returns$__$",
                        "typeString": "function (contract IPauserRegistry,uint256)"
                      }
                    },
                    "id": 40559,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6838:55:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40560,
                  "nodeType": "ExpressionStatement",
                  "src": "6838:55:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40562,
                        "name": "initialOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40522,
                        "src": "6922:12:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 40561,
                      "name": "_transferOwnership",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 29136,
                      "src": "6903:18:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 40563,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6903:32:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40564,
                  "nodeType": "ExpressionStatement",
                  "src": "6903:32:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40566,
                        "name": "initialStrategyWhitelister",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40524,
                        "src": "6969:26:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 40565,
                      "name": "_setStrategyWhitelister",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42195,
                      "src": "6945:23:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 40567,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "6945:51:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40568,
                  "nodeType": "ExpressionStatement",
                  "src": "6945:51:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40570,
                        "name": "_withdrawalDelayBlocks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40531,
                        "src": "7032:22:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 40569,
                      "name": "_setWithdrawalDelayBlocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42179,
                      "src": "7006:25:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 40571,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7006:49:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40572,
                  "nodeType": "ExpressionStatement",
                  "src": "7006:49:72"
                }
              ]
            },
            "documentation": {
              "id": 40520,
              "nodeType": "StructuredDocumentation",
              "src": "5926:551:72",
              "text": " @notice Initializes the strategy manager contract. Sets the `pauserRegistry` (currently **not** modifiable after being set),\n and transfers contract ownership to the specified `initialOwner`.\n @param _pauserRegistry Used for access control of pausing.\n @param initialOwner Ownership of this contract is transferred to this address.\n @param initialStrategyWhitelister The initial value of `strategyWhitelister` to set. \n @param _withdrawalDelayBlocks The initial value of `withdrawalDelayBlocks` to set."
            },
            "functionSelector": "a6b63eb8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 40534,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40533,
                  "name": "initializer",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29213,
                  "src": "6679:11:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "6679:11:72"
              }
            ],
            "name": "initialize",
            "nameLocation": "6491:10:72",
            "parameters": {
              "id": 40532,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40522,
                  "mutability": "mutable",
                  "name": "initialOwner",
                  "nameLocation": "6510:12:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40574,
                  "src": "6502:20:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40521,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6502:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40524,
                  "mutability": "mutable",
                  "name": "initialStrategyWhitelister",
                  "nameLocation": "6532:26:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40574,
                  "src": "6524:34:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40523,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "6524:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40527,
                  "mutability": "mutable",
                  "name": "_pauserRegistry",
                  "nameLocation": "6576:15:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40574,
                  "src": "6560:31:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IPauserRegistry_$43266",
                    "typeString": "contract IPauserRegistry"
                  },
                  "typeName": {
                    "id": 40526,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40525,
                      "name": "IPauserRegistry",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43266,
                      "src": "6560:15:72"
                    },
                    "referencedDeclaration": 43266,
                    "src": "6560:15:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IPauserRegistry_$43266",
                      "typeString": "contract IPauserRegistry"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40529,
                  "mutability": "mutable",
                  "name": "initialPausedStatus",
                  "nameLocation": "6601:19:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40574,
                  "src": "6593:27:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40528,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6593:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40531,
                  "mutability": "mutable",
                  "name": "_withdrawalDelayBlocks",
                  "nameLocation": "6630:22:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40574,
                  "src": "6622:30:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40530,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "6622:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "6501:152:72"
            },
            "returnParameters": {
              "id": 40535,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "6695:0:72"
            },
            "scope": 42304,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40599,
            "nodeType": "FunctionDefinition",
            "src": "7454:339:72",
            "nodes": [],
            "body": {
              "id": 40598,
              "nodeType": "Block",
              "src": "7660:133:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40593,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40577,
                        "src": "7747:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 40594,
                        "name": "beaconChainETHStrategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42395,
                        "src": "7755:22:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$43971",
                          "typeString": "contract IStrategy"
                        }
                      },
                      {
                        "id": 40595,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40579,
                        "src": "7779:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$43971",
                          "typeString": "contract IStrategy"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 40592,
                      "name": "_addShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41660,
                      "src": "7736:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IStrategy_$43971_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract IStrategy,uint256)"
                      }
                    },
                    "id": 40596,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "7736:50:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40597,
                  "nodeType": "ExpressionStatement",
                  "src": "7736:50:72"
                }
              ]
            },
            "baseFunctions": [
              44021
            ],
            "documentation": {
              "id": 40575,
              "nodeType": "StructuredDocumentation",
              "src": "7068:381:72",
              "text": " @notice Deposits `amount` of beaconchain ETH into this contract on behalf of `staker`\n @param staker is the entity that is restaking in eigenlayer,\n @param amount is the amount of beaconchain ETH being restaked,\n @param amount is the amount of token to be deposited in the strategy by the depositor\n @dev Only callable by EigenPodManager."
            },
            "functionSelector": "9f00fa24",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 40582,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40581,
                  "name": "onlyEigenPodManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40466,
                  "src": "7542:19:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "7542:19:72"
              },
              {
                "arguments": [
                  {
                    "id": 40584,
                    "name": "PAUSED_DEPOSITS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40339,
                    "src": "7588:15:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 40585,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40583,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53306,
                  "src": "7570:17:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "7570:34:72"
              },
              {
                "arguments": [
                  {
                    "id": 40587,
                    "name": "staker",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40577,
                    "src": "7627:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 40588,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40586,
                  "name": "onlyNotFrozen",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40437,
                  "src": "7613:13:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "7613:21:72"
              },
              {
                "id": 40590,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40589,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29346,
                  "src": "7643:12:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "7643:12:72"
              }
            ],
            "name": "depositBeaconChainETH",
            "nameLocation": "7463:21:72",
            "parameters": {
              "id": 40580,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40577,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "7493:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40599,
                  "src": "7485:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40576,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "7485:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40579,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "7509:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40599,
                  "src": "7501:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40578,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "7501:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "7484:32:72"
            },
            "returnParameters": {
              "id": 40591,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "7660:0:72"
            },
            "scope": 42304,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40698,
            "nodeType": "FunctionDefinition",
            "src": "8274:1384:72",
            "nodes": [],
            "body": {
              "id": 40697,
              "nodeType": "Block",
              "src": "8471:1187:72",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    40614
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40614,
                      "mutability": "mutable",
                      "name": "userShares",
                      "nameLocation": "8580:10:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 40697,
                      "src": "8572:18:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 40613,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "8572:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40620,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 40615,
                        "name": "stakerStrategyShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42362,
                        "src": "8593:20:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IStrategy_$43971_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(contract IStrategy => uint256))"
                        }
                      },
                      "id": 40617,
                      "indexExpression": {
                        "id": 40616,
                        "name": "overcommittedPodOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40602,
                        "src": "8614:21:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "8593:43:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$43971_$_t_uint256_$",
                        "typeString": "mapping(contract IStrategy => uint256)"
                      }
                    },
                    "id": 40619,
                    "indexExpression": {
                      "id": 40618,
                      "name": "beaconChainETHStrategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42395,
                      "src": "8637:22:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$43971",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "8593:67:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "8572:88:72"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 40623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 40621,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40606,
                      "src": "8808:6:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": ">",
                    "rightExpression": {
                      "id": 40622,
                      "name": "userShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40614,
                      "src": "8817:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "8808:19:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40641,
                  "nodeType": "IfStatement",
                  "src": "8804:200:72",
                  "trueBody": {
                    "id": 40640,
                    "nodeType": "Block",
                    "src": "8829:175:72",
                    "statements": [
                      {
                        "assignments": [
                          40625
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 40625,
                            "mutability": "mutable",
                            "name": "debt",
                            "nameLocation": "8851:4:72",
                            "nodeType": "VariableDeclaration",
                            "scope": 40640,
                            "src": "8843:12:72",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 40624,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "8843:7:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 40629,
                        "initialValue": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 40628,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 40626,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40606,
                            "src": "8858:6:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 40627,
                            "name": "userShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40614,
                            "src": "8867:10:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8858:19:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "8843:34:72"
                      },
                      {
                        "expression": {
                          "id": 40634,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 40630,
                              "name": "beaconChainETHSharesToDecrementOnWithdrawal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42389,
                              "src": "8891:43:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                "typeString": "mapping(address => uint256)"
                              }
                            },
                            "id": 40632,
                            "indexExpression": {
                              "id": 40631,
                              "name": "overcommittedPodOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40602,
                              "src": "8935:21:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "8891:66:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "+=",
                          "rightHandSide": {
                            "id": 40633,
                            "name": "debt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40625,
                            "src": "8961:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8891:74:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 40635,
                        "nodeType": "ExpressionStatement",
                        "src": "8891:74:72"
                      },
                      {
                        "expression": {
                          "id": 40638,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 40636,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40606,
                            "src": "8979:6:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "-=",
                          "rightHandSide": {
                            "id": 40637,
                            "name": "debt",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40625,
                            "src": "8989:4:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "8979:14:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 40639,
                        "nodeType": "ExpressionStatement",
                        "src": "8979:14:72"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 40644,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 40642,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40606,
                      "src": "9087:6:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 40643,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "9097:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "9087:11:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 40653,
                  "nodeType": "IfStatement",
                  "src": "9083:151:72",
                  "trueBody": {
                    "id": 40652,
                    "nodeType": "Block",
                    "src": "9100:134:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 40646,
                              "name": "overcommittedPodOwner",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40602,
                              "src": "9128:21:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 40647,
                              "name": "beaconChainETHStrategyIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40604,
                              "src": "9151:27:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 40648,
                              "name": "beaconChainETHStrategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42395,
                              "src": "9180:22:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$43971",
                                "typeString": "contract IStrategy"
                              }
                            },
                            {
                              "id": 40649,
                              "name": "amount",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40606,
                              "src": "9204:6:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_IStrategy_$43971",
                                "typeString": "contract IStrategy"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 40645,
                            "name": "_removeShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41793,
                            "src": "9114:13:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_contract$_IStrategy_$43971_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256,contract IStrategy,uint256) returns (bool)"
                            }
                          },
                          "id": 40650,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "9114:97:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 40651,
                        "nodeType": "ExpressionStatement",
                        "src": "9114:97:72"
                      }
                    ]
                  }
                },
                {
                  "assignments": [
                    40658
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40658,
                      "mutability": "mutable",
                      "name": "strategies",
                      "nameLocation": "9325:10:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 40697,
                      "src": "9306:29:72",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_memory_ptr",
                        "typeString": "contract IStrategy[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 40656,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 40655,
                            "name": "IStrategy",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 43971,
                            "src": "9306:9:72"
                          },
                          "referencedDeclaration": 43971,
                          "src": "9306:9:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$43971",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "id": 40657,
                        "nodeType": "ArrayTypeName",
                        "src": "9306:11:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_storage_ptr",
                          "typeString": "contract IStrategy[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40665,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 40663,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9354:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 40662,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9338:15:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_contract$_IStrategy_$43971_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (contract IStrategy[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 40660,
                          "nodeType": "UserDefinedTypeName",
                          "pathNode": {
                            "id": 40659,
                            "name": "IStrategy",
                            "nodeType": "IdentifierPath",
                            "referencedDeclaration": 43971,
                            "src": "9342:9:72"
                          },
                          "referencedDeclaration": 43971,
                          "src": "9342:9:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$43971",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "id": 40661,
                        "nodeType": "ArrayTypeName",
                        "src": "9342:11:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_storage_ptr",
                          "typeString": "contract IStrategy[]"
                        }
                      }
                    },
                    "id": 40664,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9338:18:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_memory_ptr",
                      "typeString": "contract IStrategy[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9306:50:72"
                },
                {
                  "expression": {
                    "id": 40670,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 40666,
                        "name": "strategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40658,
                        "src": "9366:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_memory_ptr",
                          "typeString": "contract IStrategy[] memory"
                        }
                      },
                      "id": 40668,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 40667,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9377:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9366:13:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$43971",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 40669,
                      "name": "beaconChainETHStrategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42395,
                      "src": "9382:22:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$43971",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "src": "9366:38:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$43971",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "id": 40671,
                  "nodeType": "ExpressionStatement",
                  "src": "9366:38:72"
                },
                {
                  "assignments": [
                    40676
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40676,
                      "mutability": "mutable",
                      "name": "shareAmounts",
                      "nameLocation": "9431:12:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 40697,
                      "src": "9414:29:72",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 40674,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9414:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 40675,
                        "nodeType": "ArrayTypeName",
                        "src": "9414:9:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40682,
                  "initialValue": {
                    "arguments": [
                      {
                        "hexValue": "31",
                        "id": 40680,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9460:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        },
                        "value": "1"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_rational_1_by_1",
                          "typeString": "int_const 1"
                        }
                      ],
                      "id": 40679,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "9446:13:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 40677,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "9450:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 40678,
                        "nodeType": "ArrayTypeName",
                        "src": "9450:9:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 40681,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9446:16:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "9414:48:72"
                },
                {
                  "expression": {
                    "id": 40687,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 40683,
                        "name": "shareAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40676,
                        "src": "9472:12:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      },
                      "id": 40685,
                      "indexExpression": {
                        "hexValue": "30",
                        "id": 40684,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "9485:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "9472:15:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 40686,
                      "name": "amount",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40606,
                      "src": "9490:6:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "9472:24:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40688,
                  "nodeType": "ExpressionStatement",
                  "src": "9472:24:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 40692,
                        "name": "overcommittedPodOwner",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40602,
                        "src": "9603:21:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 40693,
                        "name": "strategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40658,
                        "src": "9626:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_memory_ptr",
                          "typeString": "contract IStrategy[] memory"
                        }
                      },
                      {
                        "id": 40694,
                        "name": "shareAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40676,
                        "src": "9638:12:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_memory_ptr",
                          "typeString": "contract IStrategy[] memory"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      ],
                      "expression": {
                        "id": 40689,
                        "name": "delegation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42339,
                        "src": "9568:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDelegationManager_$42848",
                          "typeString": "contract IDelegationManager"
                        }
                      },
                      "id": 40691,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decreaseDelegatedShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42823,
                      "src": "9568:34:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_contract$_IStrategy_$43971_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,contract IStrategy[] memory,uint256[] memory) external"
                      }
                    },
                    "id": 40695,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "9568:83:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40696,
                  "nodeType": "ExpressionStatement",
                  "src": "9568:83:72"
                }
              ]
            },
            "baseFunctions": [
              44031
            ],
            "documentation": {
              "id": 40600,
              "nodeType": "StructuredDocumentation",
              "src": "7799:470:72",
              "text": " @notice Records an overcommitment event on behalf of a staker. The staker's beaconChainETH shares are decremented by `amount`.\n @param overcommittedPodOwner is the pod owner to be slashed\n @param beaconChainETHStrategyIndex is the index of the beaconChainETHStrategy in case it must be removed,\n @param amount is the amount to decrement the slashedAddress's beaconChainETHStrategy shares\n @dev Only callable by EigenPodManager."
            },
            "functionSelector": "63ecafb6",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 40609,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40608,
                  "name": "onlyEigenPodManager",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40466,
                  "src": "8426:19:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "8426:19:72"
              },
              {
                "id": 40611,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40610,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29346,
                  "src": "8454:12:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "8454:12:72"
              }
            ],
            "name": "recordOvercommittedBeaconChainETH",
            "nameLocation": "8283:33:72",
            "parameters": {
              "id": 40607,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40602,
                  "mutability": "mutable",
                  "name": "overcommittedPodOwner",
                  "nameLocation": "8325:21:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40698,
                  "src": "8317:29:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40601,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "8317:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40604,
                  "mutability": "mutable",
                  "name": "beaconChainETHStrategyIndex",
                  "nameLocation": "8356:27:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40698,
                  "src": "8348:35:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40603,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8348:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40606,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "8393:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40698,
                  "src": "8385:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40605,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "8385:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "8316:84:72"
            },
            "returnParameters": {
              "id": 40612,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "8471:0:72"
            },
            "scope": 42304,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40732,
            "nodeType": "FunctionDefinition",
            "src": "10556:314:72",
            "nodes": [],
            "body": {
              "id": 40731,
              "nodeType": "Block",
              "src": "10787:83:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "id": 40729,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40721,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40719,
                      "src": "10797:6:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "expression": {
                            "id": 40723,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "10827:3:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 40724,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "10827:10:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 40725,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40702,
                          "src": "10839:8:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$43971",
                            "typeString": "contract IStrategy"
                          }
                        },
                        {
                          "id": 40726,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40705,
                          "src": "10849:5:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$31889",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 40727,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40707,
                          "src": "10856:6:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_contract$_IStrategy_$43971",
                            "typeString": "contract IStrategy"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$31889",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 40722,
                        "name": "_depositIntoStrategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41715,
                        "src": "10806:20:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IStrategy_$43971_$_t_contract$_IERC20_$31889_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,contract IStrategy,contract IERC20,uint256) returns (uint256)"
                        }
                      },
                      "id": 40728,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "10806:57:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "10797:66:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40730,
                  "nodeType": "ExpressionStatement",
                  "src": "10797:66:72"
                }
              ]
            },
            "baseFunctions": [
              44013
            ],
            "documentation": {
              "id": 40699,
              "nodeType": "StructuredDocumentation",
              "src": "9664:886:72",
              "text": " @notice Deposits `amount` of `token` into the specified `strategy`, with the resultant shares credited to `depositor`\n @param strategy is the specified strategy where deposit is to be made,\n @param token is the denomination in which the deposit is to be made,\n @param amount is the amount of token to be deposited in the strategy by the depositor\n @dev The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.\n @dev Cannot be called by an address that is 'frozen' (this function will revert if the `msg.sender` is frozen).\n \n WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors\n          where the token balance and corresponding strategy shares are not in syncupon reentrancy."
            },
            "functionSelector": "e7a050aa",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 40710,
                    "name": "PAUSED_DEPOSITS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40339,
                    "src": "10678:15:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 40711,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40709,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53306,
                  "src": "10660:17:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "10660:34:72"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 40713,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "10717:3:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 40714,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "10717:10:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 40715,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40712,
                  "name": "onlyNotFrozen",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40437,
                  "src": "10703:13:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "10703:25:72"
              },
              {
                "id": 40717,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40716,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29346,
                  "src": "10737:12:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "10737:12:72"
              }
            ],
            "name": "depositIntoStrategy",
            "nameLocation": "10565:19:72",
            "parameters": {
              "id": 40708,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40702,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "10595:8:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40732,
                  "src": "10585:18:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$43971",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 40701,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40700,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43971,
                      "src": "10585:9:72"
                    },
                    "referencedDeclaration": 43971,
                    "src": "10585:9:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$43971",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40705,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "10612:5:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40732,
                  "src": "10605:12:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$31889",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 40704,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40703,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31889,
                      "src": "10605:6:72"
                    },
                    "referencedDeclaration": 31889,
                    "src": "10605:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$31889",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40707,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "10627:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40732,
                  "src": "10619:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40706,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10619:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10584:50:72"
            },
            "returnParameters": {
              "id": 40720,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40719,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "10775:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40732,
                  "src": "10767:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40718,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "10767:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "10766:16:72"
            },
            "scope": 42304,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40891,
            "nodeType": "FunctionDefinition",
            "src": "12327:2141:72",
            "nodes": [],
            "body": {
              "id": 40890,
              "nodeType": "Block",
              "src": "12677:1791:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 40764,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 40761,
                          "name": "expiry",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40745,
                          "src": "12708:6:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": ">=",
                        "rightExpression": {
                          "expression": {
                            "id": 40762,
                            "name": "block",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -4,
                            "src": "12718:5:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_block",
                              "typeString": "block"
                            }
                          },
                          "id": 40763,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "timestamp",
                          "nodeType": "MemberAccess",
                          "src": "12718:15:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "12708:25:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e6465706f736974496e746f5374726174656779576974685369676e61747572653a207369676e61747572652065787069726564",
                        "id": 40765,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "12747:69:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_327b1335c32999e9b8f96bc33eca3a20f63765c34e4f380b93bceca3bbeeb560",
                          "typeString": "literal_string \"StrategyManager.depositIntoStrategyWithSignature: signature expired\""
                        },
                        "value": "StrategyManager.depositIntoStrategyWithSignature: signature expired"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_327b1335c32999e9b8f96bc33eca3a20f63765c34e4f380b93bceca3bbeeb560",
                          "typeString": "literal_string \"StrategyManager.depositIntoStrategyWithSignature: signature expired\""
                        }
                      ],
                      "id": 40760,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "12687:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 40766,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12687:139:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40767,
                  "nodeType": "ExpressionStatement",
                  "src": "12687:139:72"
                },
                {
                  "assignments": [
                    40769
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40769,
                      "mutability": "mutable",
                      "name": "nonce",
                      "nameLocation": "12910:5:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 40890,
                      "src": "12902:13:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 40768,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "12902:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40773,
                  "initialValue": {
                    "baseExpression": {
                      "id": 40770,
                      "name": "nonces",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42333,
                      "src": "12918:6:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 40772,
                    "indexExpression": {
                      "id": 40771,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40743,
                      "src": "12925:6:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "12918:14:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12902:30:72"
                },
                {
                  "assignments": [
                    40775
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40775,
                      "mutability": "mutable",
                      "name": "structHash",
                      "nameLocation": "12950:10:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 40890,
                      "src": "12942:18:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 40774,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "12942:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40787,
                  "initialValue": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "id": 40779,
                            "name": "DEPOSIT_TYPEHASH",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42326,
                            "src": "12984:16:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          {
                            "id": 40780,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40736,
                            "src": "13002:8:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$43971",
                              "typeString": "contract IStrategy"
                            }
                          },
                          {
                            "id": 40781,
                            "name": "token",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40739,
                            "src": "13012:5:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IERC20_$31889",
                              "typeString": "contract IERC20"
                            }
                          },
                          {
                            "id": 40782,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40741,
                            "src": "13019:6:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 40783,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40769,
                            "src": "13027:5:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          {
                            "id": 40784,
                            "name": "expiry",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40745,
                            "src": "13034:6:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            {
                              "typeIdentifier": "t_contract$_IStrategy_$43971",
                              "typeString": "contract IStrategy"
                            },
                            {
                              "typeIdentifier": "t_contract$_IERC20_$31889",
                              "typeString": "contract IERC20"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 40777,
                            "name": "abi",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -1,
                            "src": "12973:3:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_abi",
                              "typeString": "abi"
                            }
                          },
                          "id": 40778,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "memberName": "encode",
                          "nodeType": "MemberAccess",
                          "src": "12973:10:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                            "typeString": "function () pure returns (bytes memory)"
                          }
                        },
                        "id": 40785,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "12973:68:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bytes_memory_ptr",
                          "typeString": "bytes memory"
                        }
                      ],
                      "id": 40776,
                      "name": "keccak256",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -8,
                      "src": "12963:9:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (bytes memory) pure returns (bytes32)"
                      }
                    },
                    "id": 40786,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "12963:79:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "12942:100:72"
                },
                {
                  "id": 40796,
                  "nodeType": "UncheckedBlock",
                  "src": "13052:61:72",
                  "statements": [
                    {
                      "expression": {
                        "id": 40794,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "baseExpression": {
                            "id": 40788,
                            "name": "nonces",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42333,
                            "src": "13076:6:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                              "typeString": "mapping(address => uint256)"
                            }
                          },
                          "id": 40790,
                          "indexExpression": {
                            "id": 40789,
                            "name": "staker",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40743,
                            "src": "13083:6:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": true,
                          "nodeType": "IndexAccess",
                          "src": "13076:14:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 40793,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 40791,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40769,
                            "src": "13093:5:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "+",
                          "rightExpression": {
                            "hexValue": "31",
                            "id": 40792,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "13101:1:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_1_by_1",
                              "typeString": "int_const 1"
                            },
                            "value": "1"
                          },
                          "src": "13093:9:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "13076:26:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 40795,
                      "nodeType": "ExpressionStatement",
                      "src": "13076:26:72"
                    }
                  ]
                },
                {
                  "assignments": [
                    40798
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40798,
                      "mutability": "mutable",
                      "name": "digestHash",
                      "nameLocation": "13131:10:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 40890,
                      "src": "13123:18:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 40797,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "13123:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40799,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "13123:18:72"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 40803,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "expression": {
                        "id": 40800,
                        "name": "block",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": -4,
                        "src": "13229:5:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_magic_block",
                          "typeString": "block"
                        }
                      },
                      "id": 40801,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "chainid",
                      "nodeType": "MemberAccess",
                      "src": "13229:13:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "id": 40802,
                      "name": "ORIGINAL_CHAIN_ID",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40344,
                      "src": "13246:17:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "13229:34:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 40848,
                    "nodeType": "Block",
                    "src": "13519:107:72",
                    "statements": [
                      {
                        "expression": {
                          "id": 40846,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 40837,
                            "name": "digestHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40798,
                            "src": "13533:10:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "1901",
                                    "id": 40841,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13573:10:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                      "typeString": "literal_string hex\"1901\""
                                    },
                                    "value": "\u0019\u0001"
                                  },
                                  {
                                    "id": 40842,
                                    "name": "DOMAIN_SEPARATOR",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 42329,
                                    "src": "13585:16:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 40843,
                                    "name": "structHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40775,
                                    "src": "13603:10:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                      "typeString": "literal_string hex\"1901\""
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 40839,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "13556:3:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 40840,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "13556:16:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 40844,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13556:58:72",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 40838,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "13546:9:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 40845,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13546:69:72",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "13533:82:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 40847,
                        "nodeType": "ExpressionStatement",
                        "src": "13533:82:72"
                      }
                    ]
                  },
                  "id": 40849,
                  "nodeType": "IfStatement",
                  "src": "13225:401:72",
                  "trueBody": {
                    "id": 40836,
                    "nodeType": "Block",
                    "src": "13265:248:72",
                    "statements": [
                      {
                        "assignments": [
                          40805
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 40805,
                            "mutability": "mutable",
                            "name": "domain_separator",
                            "nameLocation": "13287:16:72",
                            "nodeType": "VariableDeclaration",
                            "scope": 40836,
                            "src": "13279:24:72",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            },
                            "typeName": {
                              "id": 40804,
                              "name": "bytes32",
                              "nodeType": "ElementaryTypeName",
                              "src": "13279:7:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes32",
                                "typeString": "bytes32"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 40824,
                        "initialValue": {
                          "arguments": [
                            {
                              "arguments": [
                                {
                                  "id": 40809,
                                  "name": "DOMAIN_TYPEHASH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42320,
                                  "src": "13327:15:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "arguments": [
                                        {
                                          "hexValue": "456967656e4c61796572",
                                          "id": 40813,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": true,
                                          "kind": "string",
                                          "lValueRequested": false,
                                          "nodeType": "Literal",
                                          "src": "13360:12:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_stringliteral_71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea",
                                            "typeString": "literal_string \"EigenLayer\""
                                          },
                                          "value": "EigenLayer"
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_stringliteral_71b625cfad44bac63b13dba07f2e1d6084ee04b6f8752101ece6126d584ee6ea",
                                            "typeString": "literal_string \"EigenLayer\""
                                          }
                                        ],
                                        "id": 40812,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": true,
                                        "lValueRequested": false,
                                        "nodeType": "ElementaryTypeNameExpression",
                                        "src": "13354:5:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_type$_t_bytes_storage_ptr_$",
                                          "typeString": "type(bytes storage pointer)"
                                        },
                                        "typeName": {
                                          "id": 40811,
                                          "name": "bytes",
                                          "nodeType": "ElementaryTypeName",
                                          "src": "13354:5:72",
                                          "typeDescriptions": {}
                                        }
                                      },
                                      "id": 40814,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "typeConversion",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "13354:19:72",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_bytes_memory_ptr",
                                        "typeString": "bytes memory"
                                      }
                                    ],
                                    "id": 40810,
                                    "name": "keccak256",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -8,
                                    "src": "13344:9:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                      "typeString": "function (bytes memory) pure returns (bytes32)"
                                    }
                                  },
                                  "id": 40815,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "functionCall",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13344:30:72",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  }
                                },
                                {
                                  "expression": {
                                    "id": 40816,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "13376:5:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 40817,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "chainid",
                                  "nodeType": "MemberAccess",
                                  "src": "13376:13:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                {
                                  "arguments": [
                                    {
                                      "id": 40820,
                                      "name": "this",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -28,
                                      "src": "13399:4:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_StrategyManager_$42304",
                                        "typeString": "contract StrategyManager"
                                      }
                                    }
                                  ],
                                  "expression": {
                                    "argumentTypes": [
                                      {
                                        "typeIdentifier": "t_contract$_StrategyManager_$42304",
                                        "typeString": "contract StrategyManager"
                                      }
                                    ],
                                    "id": 40819,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "lValueRequested": false,
                                    "nodeType": "ElementaryTypeNameExpression",
                                    "src": "13391:7:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_address_$",
                                      "typeString": "type(address)"
                                    },
                                    "typeName": {
                                      "id": 40818,
                                      "name": "address",
                                      "nodeType": "ElementaryTypeName",
                                      "src": "13391:7:72",
                                      "typeDescriptions": {}
                                    }
                                  },
                                  "id": 40821,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "kind": "typeConversion",
                                  "lValueRequested": false,
                                  "names": [],
                                  "nodeType": "FunctionCall",
                                  "src": "13391:13:72",
                                  "tryCall": false,
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_bytes32",
                                    "typeString": "bytes32"
                                  },
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  },
                                  {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                ],
                                "expression": {
                                  "id": 40807,
                                  "name": "abi",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -1,
                                  "src": "13316:3:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_abi",
                                    "typeString": "abi"
                                  }
                                },
                                "id": 40808,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "memberName": "encode",
                                "nodeType": "MemberAccess",
                                "src": "13316:10:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                  "typeString": "function () pure returns (bytes memory)"
                                }
                              },
                              "id": 40822,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "functionCall",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "13316:89:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bytes_memory_ptr",
                                "typeString": "bytes memory"
                              }
                            ],
                            "id": 40806,
                            "name": "keccak256",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -8,
                            "src": "13306:9:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                              "typeString": "function (bytes memory) pure returns (bytes32)"
                            }
                          },
                          "id": 40823,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "13306:100:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "13279:127:72"
                      },
                      {
                        "expression": {
                          "id": 40834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "id": 40825,
                            "name": "digestHash",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40798,
                            "src": "13420:10:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "arguments": [
                              {
                                "arguments": [
                                  {
                                    "hexValue": "1901",
                                    "id": 40829,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "13460:10:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                      "typeString": "literal_string hex\"1901\""
                                    },
                                    "value": "\u0019\u0001"
                                  },
                                  {
                                    "id": 40830,
                                    "name": "domain_separator",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40805,
                                    "src": "13472:16:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 40831,
                                    "name": "structHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40775,
                                    "src": "13490:10:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_stringliteral_301a50b291d33ce1e8e9064e3f6a6c51d902ec22892b50d58abf6357c6a45541",
                                      "typeString": "literal_string hex\"1901\""
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  ],
                                  "expression": {
                                    "id": 40827,
                                    "name": "abi",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -1,
                                    "src": "13443:3:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_abi",
                                      "typeString": "abi"
                                    }
                                  },
                                  "id": 40828,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "memberName": "encodePacked",
                                  "nodeType": "MemberAccess",
                                  "src": "13443:16:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_abiencodepacked_pure$__$returns$_t_bytes_memory_ptr_$",
                                    "typeString": "function () pure returns (bytes memory)"
                                  }
                                },
                                "id": 40832,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "13443:58:72",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_bytes_memory_ptr",
                                  "typeString": "bytes memory"
                                }
                              ],
                              "id": 40826,
                              "name": "keccak256",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -8,
                              "src": "13433:9:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                                "typeString": "function (bytes memory) pure returns (bytes32)"
                              }
                            },
                            "id": 40833,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "13433:69:72",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes32",
                              "typeString": "bytes32"
                            }
                          },
                          "src": "13420:82:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "id": 40835,
                        "nodeType": "ExpressionStatement",
                        "src": "13420:82:72"
                      }
                    ]
                  }
                },
                {
                  "condition": {
                    "arguments": [
                      {
                        "id": 40852,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40743,
                        "src": "13980:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 40850,
                        "name": "Address",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 32599,
                        "src": "13961:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_type$_t_contract$_Address_$32599_$",
                          "typeString": "type(library Address)"
                        }
                      },
                      "id": 40851,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "isContract",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32322,
                      "src": "13961:18:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_view$_t_address_$returns$_t_bool_$",
                        "typeString": "function (address) view returns (bool)"
                      }
                    },
                    "id": 40853,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "13961:26:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": " check validity of signature:\n 1) if `staker` is an EOA, then `signature` must be a valid ECSDA signature from `staker`,\n indicating their intention for this action\n 2) if `staker` is a contract, then `signature` must will be checked according to EIP-1271",
                  "falseBody": {
                    "id": 40879,
                    "nodeType": "Block",
                    "src": "14214:175:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              "id": 40875,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 40871,
                                    "name": "digestHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40798,
                                    "src": "14250:10:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 40872,
                                    "name": "signature",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40747,
                                    "src": "14262:9:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "id": 40869,
                                    "name": "ECDSA",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 33425,
                                    "src": "14236:5:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_type$_t_contract$_ECDSA_$33425_$",
                                      "typeString": "type(library ECDSA)"
                                    }
                                  },
                                  "id": 40870,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "recover",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 33174,
                                  "src": "14236:13:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_pure$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_address_$",
                                    "typeString": "function (bytes32,bytes memory) pure returns (address)"
                                  }
                                },
                                "id": 40873,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14236:36:72",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 40874,
                                "name": "staker",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40743,
                                "src": "14276:6:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "src": "14236:46:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53747261746567794d616e616765722e6465706f736974496e746f5374726174656779576974685369676e61747572653a207369676e6174757265206e6f742066726f6d207374616b6572",
                              "id": 40876,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14300:77:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_38289c8cf13cdf0b0ad2a32e52c863b835f1cf31b2133eee557dab42a4e5d351",
                                "typeString": "literal_string \"StrategyManager.depositIntoStrategyWithSignature: signature not from staker\""
                              },
                              "value": "StrategyManager.depositIntoStrategyWithSignature: signature not from staker"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_38289c8cf13cdf0b0ad2a32e52c863b835f1cf31b2133eee557dab42a4e5d351",
                                "typeString": "literal_string \"StrategyManager.depositIntoStrategyWithSignature: signature not from staker\""
                              }
                            ],
                            "id": 40868,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14228:7:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 40877,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14228:150:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 40878,
                        "nodeType": "ExpressionStatement",
                        "src": "14228:150:72"
                      }
                    ]
                  },
                  "id": 40880,
                  "nodeType": "IfStatement",
                  "src": "13957:432:72",
                  "trueBody": {
                    "id": 40867,
                    "nodeType": "Block",
                    "src": "13989:219:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_bytes4",
                                "typeString": "bytes4"
                              },
                              "id": 40863,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "arguments": [
                                  {
                                    "id": 40859,
                                    "name": "digestHash",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40798,
                                    "src": "14045:10:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    }
                                  },
                                  {
                                    "id": 40860,
                                    "name": "signature",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 40747,
                                    "src": "14057:9:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bytes32",
                                      "typeString": "bytes32"
                                    },
                                    {
                                      "typeIdentifier": "t_bytes_memory_ptr",
                                      "typeString": "bytes memory"
                                    }
                                  ],
                                  "expression": {
                                    "arguments": [
                                      {
                                        "id": 40856,
                                        "name": "staker",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 40743,
                                        "src": "14020:6:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      }
                                    ],
                                    "expression": {
                                      "argumentTypes": [
                                        {
                                          "typeIdentifier": "t_address",
                                          "typeString": "address"
                                        }
                                      ],
                                      "id": 40855,
                                      "name": "IERC1271",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 30307,
                                      "src": "14011:8:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_type$_t_contract$_IERC1271_$30307_$",
                                        "typeString": "type(contract IERC1271)"
                                      }
                                    },
                                    "id": 40857,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "kind": "typeConversion",
                                    "lValueRequested": false,
                                    "names": [],
                                    "nodeType": "FunctionCall",
                                    "src": "14011:16:72",
                                    "tryCall": false,
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC1271_$30307",
                                      "typeString": "contract IERC1271"
                                    }
                                  },
                                  "id": 40858,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "isValidSignature",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 30306,
                                  "src": "14011:33:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_view$_t_bytes32_$_t_bytes_memory_ptr_$returns$_t_bytes4_$",
                                    "typeString": "function (bytes32,bytes memory) view external returns (bytes4)"
                                  }
                                },
                                "id": 40861,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "14011:56:72",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "id": 40862,
                                "name": "ERC1271_MAGICVALUE",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40347,
                                "src": "14071:18:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bytes4",
                                  "typeString": "bytes4"
                                }
                              },
                              "src": "14011:78:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53747261746567794d616e616765722e6465706f736974496e746f5374726174656779576974685369676e61747572653a2045524331323731207369676e617475726520766572696669636174696f6e206661696c6564",
                              "id": 40864,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "14107:89:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_fce63997ef128a161184d7e3edb2a7e5936a0365552a1e9536617fdb5cbcc8e4",
                                "typeString": "literal_string \"StrategyManager.depositIntoStrategyWithSignature: ERC1271 signature verification failed\""
                              },
                              "value": "StrategyManager.depositIntoStrategyWithSignature: ERC1271 signature verification failed"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_fce63997ef128a161184d7e3edb2a7e5936a0365552a1e9536617fdb5cbcc8e4",
                                "typeString": "literal_string \"StrategyManager.depositIntoStrategyWithSignature: ERC1271 signature verification failed\""
                              }
                            ],
                            "id": 40854,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "14003:7:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 40865,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "14003:194:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 40866,
                        "nodeType": "ExpressionStatement",
                        "src": "14003:194:72"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 40888,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 40881,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40758,
                      "src": "14399:6:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 40883,
                          "name": "staker",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40743,
                          "src": "14429:6:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        {
                          "id": 40884,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40736,
                          "src": "14437:8:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$43971",
                            "typeString": "contract IStrategy"
                          }
                        },
                        {
                          "id": 40885,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40739,
                          "src": "14447:5:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$31889",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 40886,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40741,
                          "src": "14454:6:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          },
                          {
                            "typeIdentifier": "t_contract$_IStrategy_$43971",
                            "typeString": "contract IStrategy"
                          },
                          {
                            "typeIdentifier": "t_contract$_IERC20_$31889",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "id": 40882,
                        "name": "_depositIntoStrategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41715,
                        "src": "14408:20:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IStrategy_$43971_$_t_contract$_IERC20_$31889_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (address,contract IStrategy,contract IERC20,uint256) returns (uint256)"
                        }
                      },
                      "id": 40887,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "14408:53:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "14399:62:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 40889,
                  "nodeType": "ExpressionStatement",
                  "src": "14399:62:72"
                }
              ]
            },
            "baseFunctions": [
              44051
            ],
            "documentation": {
              "id": 40733,
              "nodeType": "StructuredDocumentation",
              "src": "10876:1446:72",
              "text": " @notice Used for depositing an asset into the specified strategy with the resultant shared created to `staker`,\n who must sign off on the action\n @param strategy is the specified strategy where deposit is to be made,\n @param token is the denomination in which the deposit is to be made,\n @param amount is the amount of token to be deposited in the strategy by the depositor\n @param staker the staker that the assets will be deposited on behalf of\n @param expiry the timestamp at which the signature expires\n @param signature is a valid signature from the `staker`. either an ECDSA signature if the `staker` is an EOA, or data to forward\n following EIP-1271 if the `staker` is a contract\n @dev The `msg.sender` must have previously approved this contract to transfer at least `amount` of `token` on their behalf.\n @dev A signature is required for this function to eliminate the possibility of griefing attacks, specifically those\n targetting stakers who may be attempting to undelegate.\n @dev Cannot be called on behalf of a staker that is 'frozen' (this function will revert if the `staker` is frozen).\n \n  WARNING: Depositing tokens that allow reentrancy (eg. ERC-777) into a strategy is not recommended.  This can lead to attack vectors\n          where the token balance and corresponding strategy shares are not in syncupon reentrancy"
            },
            "functionSelector": "32e89ace",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 40750,
                    "name": "PAUSED_DEPOSITS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40339,
                    "src": "12572:15:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 40751,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40749,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53306,
                  "src": "12554:17:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "12554:34:72"
              },
              {
                "arguments": [
                  {
                    "id": 40753,
                    "name": "staker",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40743,
                    "src": "12611:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 40754,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40752,
                  "name": "onlyNotFrozen",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40437,
                  "src": "12597:13:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "12597:21:72"
              },
              {
                "id": 40756,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40755,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29346,
                  "src": "12627:12:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "12627:12:72"
              }
            ],
            "name": "depositIntoStrategyWithSignature",
            "nameLocation": "12336:32:72",
            "parameters": {
              "id": 40748,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40736,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "12388:8:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40891,
                  "src": "12378:18:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$43971",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 40735,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40734,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43971,
                      "src": "12378:9:72"
                    },
                    "referencedDeclaration": 43971,
                    "src": "12378:9:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$43971",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40739,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "12413:5:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40891,
                  "src": "12406:12:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$31889",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 40738,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 40737,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31889,
                      "src": "12406:6:72"
                    },
                    "referencedDeclaration": 31889,
                    "src": "12406:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$31889",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40741,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "12436:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40891,
                  "src": "12428:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40740,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12428:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40743,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "12460:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40891,
                  "src": "12452:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40742,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "12452:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40745,
                  "mutability": "mutable",
                  "name": "expiry",
                  "nameLocation": "12484:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40891,
                  "src": "12476:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40744,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12476:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40747,
                  "mutability": "mutable",
                  "name": "signature",
                  "nameLocation": "12513:9:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40891,
                  "src": "12500:22:72",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes_memory_ptr",
                    "typeString": "bytes"
                  },
                  "typeName": {
                    "id": 40746,
                    "name": "bytes",
                    "nodeType": "ElementaryTypeName",
                    "src": "12500:5:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes_storage_ptr",
                      "typeString": "bytes"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12368:160:72"
            },
            "returnParameters": {
              "id": 40759,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40758,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "12665:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 40891,
                  "src": "12657:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 40757,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "12657:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "12656:16:72"
            },
            "scope": 42304,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 40901,
            "nodeType": "FunctionDefinition",
            "src": "14756:71:72",
            "nodes": [],
            "body": {
              "id": 40900,
              "nodeType": "Block",
              "src": "14787:40:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 40896,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "14809:3:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 40897,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "14809:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 40895,
                      "name": "_undelegate",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42101,
                      "src": "14797:11:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 40898,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "14797:23:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40899,
                  "nodeType": "ExpressionStatement",
                  "src": "14797:23:72"
                }
              ]
            },
            "documentation": {
              "id": 40892,
              "nodeType": "StructuredDocumentation",
              "src": "14474:277:72",
              "text": " @notice Called by a staker to undelegate entirely from EigenLayer. The staker must first withdraw all of their existing deposits\n (through use of the `queueWithdrawal` function), or else otherwise have never deposited in EigenLayer prior to delegating."
            },
            "functionSelector": "92ab89bb",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "undelegate",
            "nameLocation": "14765:10:72",
            "parameters": {
              "id": 40893,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14775:2:72"
            },
            "returnParameters": {
              "id": 40894,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "14787:0:72"
            },
            "scope": 42304,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 41137,
            "nodeType": "FunctionDefinition",
            "src": "17015:4408:72",
            "nodes": [],
            "body": {
              "id": 41136,
              "nodeType": "Block",
              "src": "17377:4046:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 40935,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 40931,
                            "name": "strategies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40909,
                            "src": "17395:10:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                              "typeString": "contract IStrategy[] calldata"
                            }
                          },
                          "id": 40932,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "17395:17:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 40933,
                            "name": "shares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40912,
                            "src": "17416:6:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                              "typeString": "uint256[] calldata"
                            }
                          },
                          "id": 40934,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "17416:13:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "17395:34:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e71756575655769746864726177616c3a20696e707574206c656e677468206d69736d61746368",
                        "id": 40936,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17431:56:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_a465d19d3a9df43b3fb6940acb54a1b7b88fcce07c22ff4d66590d54740e663b",
                          "typeString": "literal_string \"StrategyManager.queueWithdrawal: input length mismatch\""
                        },
                        "value": "StrategyManager.queueWithdrawal: input length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_a465d19d3a9df43b3fb6940acb54a1b7b88fcce07c22ff4d66590d54740e663b",
                          "typeString": "literal_string \"StrategyManager.queueWithdrawal: input length mismatch\""
                        }
                      ],
                      "id": 40930,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17387:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 40937,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17387:101:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40938,
                  "nodeType": "ExpressionStatement",
                  "src": "17387:101:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 40945,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 40940,
                          "name": "withdrawer",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 40914,
                          "src": "17506:10:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 40943,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "17528:1:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 40942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "17520:7:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 40941,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "17520:7:72",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 40944,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "17520:10:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "17506:24:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e71756575655769746864726177616c3a2063616e6e6f7420776974686472617720746f207a65726f2061646472657373",
                        "id": 40946,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "17532:66:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b1d66687e176e1ff83cbec05d624fb4ae8ae6f3b0e2be3867ed503b13b5bc55e",
                          "typeString": "literal_string \"StrategyManager.queueWithdrawal: cannot withdraw to zero address\""
                        },
                        "value": "StrategyManager.queueWithdrawal: cannot withdraw to zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b1d66687e176e1ff83cbec05d624fb4ae8ae6f3b0e2be3867ed503b13b5bc55e",
                          "typeString": "literal_string \"StrategyManager.queueWithdrawal: cannot withdraw to zero address\""
                        }
                      ],
                      "id": 40939,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "17498:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 40947,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17498:101:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40948,
                  "nodeType": "ExpressionStatement",
                  "src": "17498:101:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 40952,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "17711:3:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 40953,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "17711:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 40954,
                        "name": "strategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40909,
                        "src": "17723:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                          "typeString": "contract IStrategy[] calldata"
                        }
                      },
                      {
                        "id": 40955,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40912,
                        "src": "17735:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                          "typeString": "contract IStrategy[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 40949,
                        "name": "delegation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42339,
                        "src": "17676:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDelegationManager_$42848",
                          "typeString": "contract IDelegationManager"
                        }
                      },
                      "id": 40951,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decreaseDelegatedShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42823,
                      "src": "17676:34:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_contract$_IStrategy_$43971_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,contract IStrategy[] memory,uint256[] memory) external"
                      }
                    },
                    "id": 40956,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17676:66:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 40957,
                  "nodeType": "ExpressionStatement",
                  "src": "17676:66:72"
                },
                {
                  "assignments": [
                    40959
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40959,
                      "mutability": "mutable",
                      "name": "nonce",
                      "nameLocation": "17760:5:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 41136,
                      "src": "17753:12:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint96",
                        "typeString": "uint96"
                      },
                      "typeName": {
                        "id": 40958,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "17753:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40967,
                  "initialValue": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 40962,
                          "name": "numWithdrawalsQueued",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42379,
                          "src": "17775:20:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                            "typeString": "mapping(address => uint256)"
                          }
                        },
                        "id": 40965,
                        "indexExpression": {
                          "expression": {
                            "id": 40963,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "17796:3:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 40964,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "17796:10:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "17775:32:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 40961,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "ElementaryTypeNameExpression",
                      "src": "17768:6:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_type$_t_uint96_$",
                        "typeString": "type(uint96)"
                      },
                      "typeName": {
                        "id": 40960,
                        "name": "uint96",
                        "nodeType": "ElementaryTypeName",
                        "src": "17768:6:72",
                        "typeDescriptions": {}
                      }
                    },
                    "id": 40966,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "typeConversion",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "17768:40:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint96",
                      "typeString": "uint96"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17753:55:72"
                },
                {
                  "assignments": [
                    40969
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 40969,
                      "mutability": "mutable",
                      "name": "strategyIndexIndex",
                      "nameLocation": "17910:18:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 41136,
                      "src": "17902:26:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 40968,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "17902:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 40970,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "17902:26:72"
                },
                {
                  "body": {
                    "id": 41048,
                    "nodeType": "Block",
                    "src": "18361:1205:72",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IStrategy_$43971",
                            "typeString": "contract IStrategy"
                          },
                          "id": 40983,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 40979,
                              "name": "strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40909,
                              "src": "18379:10:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                                "typeString": "contract IStrategy[] calldata"
                              }
                            },
                            "id": 40981,
                            "indexExpression": {
                              "id": 40980,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40972,
                              "src": "18390:1:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "18379:13:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$43971",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 40982,
                            "name": "beaconChainETHStrategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42395,
                            "src": "18396:22:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$43971",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "src": "18379:39:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 41012,
                        "nodeType": "IfStatement",
                        "src": "18375:600:72",
                        "trueBody": {
                          "id": 41011,
                          "nodeType": "Block",
                          "src": "18420:555:72",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    "id": 40988,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "id": 40985,
                                      "name": "withdrawer",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 40914,
                                      "src": "18446:10:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "expression": {
                                        "id": 40986,
                                        "name": "msg",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": -15,
                                        "src": "18460:3:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_magic_message",
                                          "typeString": "msg"
                                        }
                                      },
                                      "id": 40987,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "sender",
                                      "nodeType": "MemberAccess",
                                      "src": "18460:10:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "src": "18446:24:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "53747261746567794d616e616765722e71756575655769746864726177616c3a2063616e6e6f742071756575652061207769746864726177616c206f6620426561636f6e20436861696e2045544820746f206120646966666572656e742061646472657373",
                                    "id": 40989,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "18492:103:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_592d28e13f3efe2ec97edb5a62810e2c5bc25c24241cfd29e53dd8644b4b91a3",
                                      "typeString": "literal_string \"StrategyManager.queueWithdrawal: cannot queue a withdrawal of Beacon Chain ETH to a different address\""
                                    },
                                    "value": "StrategyManager.queueWithdrawal: cannot queue a withdrawal of Beacon Chain ETH to a different address"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_592d28e13f3efe2ec97edb5a62810e2c5bc25c24241cfd29e53dd8644b4b91a3",
                                      "typeString": "literal_string \"StrategyManager.queueWithdrawal: cannot queue a withdrawal of Beacon Chain ETH to a different address\""
                                    }
                                  ],
                                  "id": 40984,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "18438:7:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 40990,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18438:158:72",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 40991,
                              "nodeType": "ExpressionStatement",
                              "src": "18438:158:72"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 40996,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "expression": {
                                        "id": 40993,
                                        "name": "strategies",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 40909,
                                        "src": "18622:10:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                                          "typeString": "contract IStrategy[] calldata"
                                        }
                                      },
                                      "id": 40994,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "length",
                                      "nodeType": "MemberAccess",
                                      "src": "18622:17:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "31",
                                      "id": 40995,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "18643:1:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_1_by_1",
                                        "typeString": "int_const 1"
                                      },
                                      "value": "1"
                                    },
                                    "src": "18622:22:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "53747261746567794d616e616765722e71756575655769746864726177616c3a2063616e6e6f742071756575652061207769746864726177616c20696e636c7564696e6720426561636f6e20436861696e2045544820616e64206f7468657220746f6b656e73",
                                    "id": 40997,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "18666:104:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_f90f78ae866c716b2934d9eccb53239c79d97c6d6540b6b04192151ef4b99689",
                                      "typeString": "literal_string \"StrategyManager.queueWithdrawal: cannot queue a withdrawal including Beacon Chain ETH and other tokens\""
                                    },
                                    "value": "StrategyManager.queueWithdrawal: cannot queue a withdrawal including Beacon Chain ETH and other tokens"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_f90f78ae866c716b2934d9eccb53239c79d97c6d6540b6b04192151ef4b99689",
                                      "typeString": "literal_string \"StrategyManager.queueWithdrawal: cannot queue a withdrawal including Beacon Chain ETH and other tokens\""
                                    }
                                  ],
                                  "id": 40992,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "18614:7:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 40998,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18614:157:72",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 40999,
                              "nodeType": "ExpressionStatement",
                              "src": "18614:157:72"
                            },
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "commonType": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    },
                                    "id": 41007,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "leftExpression": {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 41005,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "baseExpression": {
                                          "id": 41001,
                                          "name": "shares",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 40912,
                                          "src": "18797:6:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                            "typeString": "uint256[] calldata"
                                          }
                                        },
                                        "id": 41003,
                                        "indexExpression": {
                                          "id": 41002,
                                          "name": "i",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 40972,
                                          "src": "18804:1:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "18797:9:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "%",
                                      "rightExpression": {
                                        "id": 41004,
                                        "name": "GWEI_TO_WEI",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 40336,
                                        "src": "18809:11:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "18797:23:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "nodeType": "BinaryOperation",
                                    "operator": "==",
                                    "rightExpression": {
                                      "hexValue": "30",
                                      "id": 41006,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": true,
                                      "kind": "number",
                                      "lValueRequested": false,
                                      "nodeType": "Literal",
                                      "src": "18824:1:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_rational_0_by_1",
                                        "typeString": "int_const 0"
                                      },
                                      "value": "0"
                                    },
                                    "src": "18797:28:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    }
                                  },
                                  {
                                    "hexValue": "53747261746567794d616e616765722e71756575655769746864726177616c3a2063616e6e6f742071756575652061207769746864726177616c206f6620426561636f6e20436861696e2045544820666f7220616e206e6f6e2d77686f6c6520616d6f756e74206f662067776569",
                                    "id": 41008,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": true,
                                    "kind": "string",
                                    "lValueRequested": false,
                                    "nodeType": "Literal",
                                    "src": "18847:112:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_stringliteral_5f8d0660c3e1bceaea16737135da30f1c3398e05433310a142ccf022dd3c46e7",
                                      "typeString": "literal_string \"StrategyManager.queueWithdrawal: cannot queue a withdrawal of Beacon Chain ETH for an non-whole amount of gwei\""
                                    },
                                    "value": "StrategyManager.queueWithdrawal: cannot queue a withdrawal of Beacon Chain ETH for an non-whole amount of gwei"
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_bool",
                                      "typeString": "bool"
                                    },
                                    {
                                      "typeIdentifier": "t_stringliteral_5f8d0660c3e1bceaea16737135da30f1c3398e05433310a142ccf022dd3c46e7",
                                      "typeString": "literal_string \"StrategyManager.queueWithdrawal: cannot queue a withdrawal of Beacon Chain ETH for an non-whole amount of gwei\""
                                    }
                                  ],
                                  "id": 41000,
                                  "name": "require",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [
                                    -18,
                                    -18
                                  ],
                                  "referencedDeclaration": -18,
                                  "src": "18789:7:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                                    "typeString": "function (bool,string memory) pure"
                                  }
                                },
                                "id": 41009,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "18789:171:72",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 41010,
                              "nodeType": "ExpressionStatement",
                              "src": "18789:171:72"
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 41014,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "19198:3:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 41015,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "19198:10:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 41016,
                                "name": "strategyIndexes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40905,
                                "src": "19210:15:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 41018,
                              "indexExpression": {
                                "id": 41017,
                                "name": "strategyIndexIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40969,
                                "src": "19226:18:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "19210:35:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 41019,
                                "name": "strategies",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40909,
                                "src": "19247:10:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                                  "typeString": "contract IStrategy[] calldata"
                                }
                              },
                              "id": 41021,
                              "indexExpression": {
                                "id": 41020,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40972,
                                "src": "19258:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "19247:13:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$43971",
                                "typeString": "contract IStrategy"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 41022,
                                "name": "shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40912,
                                "src": "19262:6:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 41024,
                              "indexExpression": {
                                "id": 41023,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40972,
                                "src": "19269:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "19262:9:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_IStrategy_$43971",
                                "typeString": "contract IStrategy"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 41013,
                            "name": "_removeShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41793,
                            "src": "19184:13:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_contract$_IStrategy_$43971_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256,contract IStrategy,uint256) returns (bool)"
                            }
                          },
                          "id": 41025,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19184:88:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 41031,
                        "nodeType": "IfStatement",
                        "src": "19180:197:72",
                        "trueBody": {
                          "id": 41030,
                          "nodeType": "Block",
                          "src": "19274:103:72",
                          "statements": [
                            {
                              "id": 41029,
                              "nodeType": "UncheckedBlock",
                              "src": "19292:71:72",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 41027,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "19324:20:72",
                                    "subExpression": {
                                      "id": 41026,
                                      "name": "strategyIndexIndex",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 40969,
                                      "src": "19326:18:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 41028,
                                  "nodeType": "ExpressionStatement",
                                  "src": "19324:20:72"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "eventCall": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 41033,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "19418:3:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 41034,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "19418:10:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 41035,
                              "name": "nonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40959,
                              "src": "19430:5:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 41036,
                                "name": "strategies",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40909,
                                "src": "19437:10:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                                  "typeString": "contract IStrategy[] calldata"
                                }
                              },
                              "id": 41038,
                              "indexExpression": {
                                "id": 41037,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40972,
                                "src": "19448:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "19437:13:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$43971",
                                "typeString": "contract IStrategy"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 41039,
                                "name": "shares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40912,
                                "src": "19452:6:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 41041,
                              "indexExpression": {
                                "id": 41040,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40972,
                                "src": "19459:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "19452:9:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              },
                              {
                                "typeIdentifier": "t_contract$_IStrategy_$43971",
                                "typeString": "contract IStrategy"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 41032,
                            "name": "ShareWithdrawalQueued",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40372,
                            "src": "19396:21:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint96_$_t_contract$_IStrategy_$43971_$_t_uint256_$returns$__$",
                              "typeString": "function (address,uint96,contract IStrategy,uint256)"
                            }
                          },
                          "id": 41042,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "19396:66:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 41043,
                        "nodeType": "EmitStatement",
                        "src": "19391:71:72"
                      },
                      {
                        "id": 41047,
                        "nodeType": "UncheckedBlock",
                        "src": "19510:46:72",
                        "statements": [
                          {
                            "expression": {
                              "id": 41045,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "19538:3:72",
                              "subExpression": {
                                "id": 41044,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40972,
                                "src": "19540:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 41046,
                            "nodeType": "ExpressionStatement",
                            "src": "19538:3:72"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 40978,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 40975,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40972,
                      "src": "18337:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 40976,
                        "name": "strategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40909,
                        "src": "18341:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                          "typeString": "contract IStrategy[] calldata"
                        }
                      },
                      "id": 40977,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "18341:17:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "18337:21:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": " Ensure that if the withdrawal includes beacon chain ETH, the specified 'withdrawer' is not different than the caller.\n This is because shares in the enshrined `beaconChainETHStrategy` ultimately represent tokens in **non-fungible** EigenPods,\n while other share in all other strategies represent purely fungible positions.",
                  "id": 41049,
                  "initializationExpression": {
                    "assignments": [
                      40972
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 40972,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "18330:1:72",
                        "nodeType": "VariableDeclaration",
                        "scope": 41049,
                        "src": "18322:9:72",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 40971,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "18322:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 40974,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 40973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "18334:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "18322:13:72"
                  },
                  "nodeType": "ForStatement",
                  "src": "18317:1249:72"
                },
                {
                  "assignments": [
                    41051
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41051,
                      "mutability": "mutable",
                      "name": "delegatedAddress",
                      "nameLocation": "19651:16:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 41136,
                      "src": "19643:24:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      },
                      "typeName": {
                        "id": 41050,
                        "name": "address",
                        "nodeType": "ElementaryTypeName",
                        "src": "19643:7:72",
                        "stateMutability": "nonpayable",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41057,
                  "initialValue": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 41054,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "19693:3:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 41055,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "19693:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 41052,
                        "name": "delegation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42339,
                        "src": "19670:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDelegationManager_$42848",
                          "typeString": "contract IDelegationManager"
                        }
                      },
                      "id": 41053,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "delegatedTo",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42779,
                      "src": "19670:22:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_view$_t_address_$returns$_t_address_$",
                        "typeString": "function (address) view external returns (address)"
                      }
                    },
                    "id": 41056,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "19670:34:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19643:61:72"
                },
                {
                  "assignments": [
                    41060
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41060,
                      "mutability": "mutable",
                      "name": "queuedWithdrawal",
                      "nameLocation": "19739:16:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 41136,
                      "src": "19715:40:72",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_memory_ptr",
                        "typeString": "struct IStrategyManager.QueuedWithdrawal"
                      },
                      "typeName": {
                        "id": 41059,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41058,
                          "name": "QueuedWithdrawal",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 43999,
                          "src": "19715:16:72"
                        },
                        "referencedDeclaration": 43999,
                        "src": "19715:16:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_storage_ptr",
                          "typeString": "struct IStrategyManager.QueuedWithdrawal"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41061,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "19715:40:72"
                },
                {
                  "id": 41096,
                  "nodeType": "Block",
                  "src": "19766:753:72",
                  "statements": [
                    {
                      "assignments": [
                        41064
                      ],
                      "declarations": [
                        {
                          "constant": false,
                          "id": 41064,
                          "mutability": "mutable",
                          "name": "withdrawerAndNonce",
                          "nameLocation": "19806:18:72",
                          "nodeType": "VariableDeclaration",
                          "scope": 41096,
                          "src": "19780:44:72",
                          "stateVariable": false,
                          "storageLocation": "memory",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawerAndNonce_$43982_memory_ptr",
                            "typeString": "struct IStrategyManager.WithdrawerAndNonce"
                          },
                          "typeName": {
                            "id": 41063,
                            "nodeType": "UserDefinedTypeName",
                            "pathNode": {
                              "id": 41062,
                              "name": "WithdrawerAndNonce",
                              "nodeType": "IdentifierPath",
                              "referencedDeclaration": 43982,
                              "src": "19780:18:72"
                            },
                            "referencedDeclaration": 43982,
                            "src": "19780:18:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WithdrawerAndNonce_$43982_storage_ptr",
                              "typeString": "struct IStrategyManager.WithdrawerAndNonce"
                            }
                          },
                          "visibility": "internal"
                        }
                      ],
                      "id": 41069,
                      "initialValue": {
                        "arguments": [
                          {
                            "id": 41066,
                            "name": "withdrawer",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40914,
                            "src": "19876:10:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "id": 41067,
                            "name": "nonce",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 40959,
                            "src": "19911:5:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint96",
                              "typeString": "uint96"
                            }
                          ],
                          "id": 41065,
                          "name": "WithdrawerAndNonce",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 43982,
                          "src": "19827:18:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_struct$_WithdrawerAndNonce_$43982_storage_ptr_$",
                            "typeString": "type(struct IStrategyManager.WithdrawerAndNonce storage pointer)"
                          }
                        },
                        "id": 41068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "structConstructorCall",
                        "lValueRequested": false,
                        "names": [
                          "withdrawer",
                          "nonce"
                        ],
                        "nodeType": "FunctionCall",
                        "src": "19827:104:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_WithdrawerAndNonce_$43982_memory_ptr",
                          "typeString": "struct IStrategyManager.WithdrawerAndNonce memory"
                        }
                      },
                      "nodeType": "VariableDeclarationStatement",
                      "src": "19780:151:72"
                    },
                    {
                      "id": 41079,
                      "nodeType": "UncheckedBlock",
                      "src": "20009:87:72",
                      "statements": [
                        {
                          "expression": {
                            "id": 41077,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftHandSide": {
                              "baseExpression": {
                                "id": 41070,
                                "name": "numWithdrawalsQueued",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42379,
                                "src": "20037:20:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                  "typeString": "mapping(address => uint256)"
                                }
                              },
                              "id": 41073,
                              "indexExpression": {
                                "expression": {
                                  "id": 41071,
                                  "name": "msg",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": -15,
                                  "src": "20058:3:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_magic_message",
                                    "typeString": "msg"
                                  }
                                },
                                "id": 41072,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "sender",
                                "nodeType": "MemberAccess",
                                "src": "20058:10:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "nodeType": "IndexAccess",
                              "src": "20037:32:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "Assignment",
                            "operator": "=",
                            "rightHandSide": {
                              "commonType": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              },
                              "id": 41076,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 41074,
                                "name": "nonce",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 40959,
                                "src": "20072:5:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint96",
                                  "typeString": "uint96"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "+",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 41075,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "20080:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "20072:9:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint96",
                                "typeString": "uint96"
                              }
                            },
                            "src": "20037:44:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "id": 41078,
                          "nodeType": "ExpressionStatement",
                          "src": "20037:44:72"
                        }
                      ]
                    },
                    {
                      "expression": {
                        "id": 41094,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 41080,
                          "name": "queuedWithdrawal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41060,
                          "src": "20177:16:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_memory_ptr",
                            "typeString": "struct IStrategyManager.QueuedWithdrawal memory"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "arguments": [
                            {
                              "id": 41082,
                              "name": "strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40909,
                              "src": "20243:10:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                                "typeString": "contract IStrategy[] calldata"
                              }
                            },
                            {
                              "id": 41083,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 40912,
                              "src": "20279:6:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              }
                            },
                            {
                              "expression": {
                                "id": 41084,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "20314:3:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 41085,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "20314:10:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 41086,
                              "name": "withdrawerAndNonce",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41064,
                              "src": "20362:18:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_WithdrawerAndNonce_$43982_memory_ptr",
                                "typeString": "struct IStrategyManager.WithdrawerAndNonce memory"
                              }
                            },
                            {
                              "arguments": [
                                {
                                  "expression": {
                                    "id": 41089,
                                    "name": "block",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": -4,
                                    "src": "20427:5:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_magic_block",
                                      "typeString": "block"
                                    }
                                  },
                                  "id": 41090,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "number",
                                  "nodeType": "MemberAccess",
                                  "src": "20427:12:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                }
                              ],
                              "expression": {
                                "argumentTypes": [
                                  {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                ],
                                "id": 41088,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "lValueRequested": false,
                                "nodeType": "ElementaryTypeNameExpression",
                                "src": "20420:6:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_type$_t_uint32_$",
                                  "typeString": "type(uint32)"
                                },
                                "typeName": {
                                  "id": 41087,
                                  "name": "uint32",
                                  "nodeType": "ElementaryTypeName",
                                  "src": "20420:6:72",
                                  "typeDescriptions": {}
                                }
                              },
                              "id": 41091,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "kind": "typeConversion",
                              "lValueRequested": false,
                              "names": [],
                              "nodeType": "FunctionCall",
                              "src": "20420:20:72",
                              "tryCall": false,
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            {
                              "id": 41092,
                              "name": "delegatedAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41051,
                              "src": "20476:16:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                                "typeString": "contract IStrategy[] calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                "typeString": "uint256[] calldata"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_struct$_WithdrawerAndNonce_$43982_memory_ptr",
                                "typeString": "struct IStrategyManager.WithdrawerAndNonce memory"
                              },
                              {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              },
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 41081,
                            "name": "QueuedWithdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 43999,
                            "src": "20196:16:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_struct$_QueuedWithdrawal_$43999_storage_ptr_$",
                              "typeString": "type(struct IStrategyManager.QueuedWithdrawal storage pointer)"
                            }
                          },
                          "id": 41093,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "structConstructorCall",
                          "lValueRequested": false,
                          "names": [
                            "strategies",
                            "shares",
                            "depositor",
                            "withdrawerAndNonce",
                            "withdrawalStartBlock",
                            "delegatedAddress"
                          ],
                          "nodeType": "FunctionCall",
                          "src": "20196:311:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_memory_ptr",
                            "typeString": "struct IStrategyManager.QueuedWithdrawal memory"
                          }
                        },
                        "src": "20177:330:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_memory_ptr",
                          "typeString": "struct IStrategyManager.QueuedWithdrawal memory"
                        }
                      },
                      "id": 41095,
                      "nodeType": "ExpressionStatement",
                      "src": "20177:330:72"
                    }
                  ]
                },
                {
                  "assignments": [
                    41098
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41098,
                      "mutability": "mutable",
                      "name": "withdrawalRoot",
                      "nameLocation": "20578:14:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 41136,
                      "src": "20570:22:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 41097,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "20570:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41102,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 41100,
                        "name": "queuedWithdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41060,
                        "src": "20619:16:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_memory_ptr",
                          "typeString": "struct IStrategyManager.QueuedWithdrawal memory"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_memory_ptr",
                          "typeString": "struct IStrategyManager.QueuedWithdrawal memory"
                        }
                      ],
                      "id": 41099,
                      "name": "calculateWithdrawalRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42303,
                      "src": "20595:23:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_QueuedWithdrawal_$43999_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct IStrategyManager.QueuedWithdrawal memory) pure returns (bytes32)"
                      }
                    },
                    "id": 41101,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "20595:41:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "20570:66:72"
                },
                {
                  "expression": {
                    "id": 41107,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 41103,
                        "name": "withdrawalRootPending",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42374,
                        "src": "20685:21:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 41105,
                      "indexExpression": {
                        "id": 41104,
                        "name": "withdrawalRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41098,
                        "src": "20707:14:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "20685:37:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "74727565",
                      "id": 41106,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "20725:4:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "true"
                    },
                    "src": "20685:44:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41108,
                  "nodeType": "ExpressionStatement",
                  "src": "20685:44:72"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "id": 41117,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41109,
                      "name": "undelegateIfPossible",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40916,
                      "src": "21172:20:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "&&",
                    "rightExpression": {
                      "commonType": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "id": 41116,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "leftExpression": {
                        "expression": {
                          "baseExpression": {
                            "id": 41110,
                            "name": "stakerStrategyList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42369,
                            "src": "21196:18:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$43971_$dyn_storage_$",
                              "typeString": "mapping(address => contract IStrategy[] storage ref)"
                            }
                          },
                          "id": 41113,
                          "indexExpression": {
                            "expression": {
                              "id": 41111,
                              "name": "msg",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -15,
                              "src": "21215:3:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_message",
                                "typeString": "msg"
                              }
                            },
                            "id": 41112,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "sender",
                            "nodeType": "MemberAccess",
                            "src": "21215:10:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "21196:30:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_storage",
                            "typeString": "contract IStrategy[] storage ref"
                          }
                        },
                        "id": 41114,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "length",
                        "nodeType": "MemberAccess",
                        "src": "21196:37:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "nodeType": "BinaryOperation",
                      "operator": "==",
                      "rightExpression": {
                        "hexValue": "30",
                        "id": 41115,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "number",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "21237:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_rational_0_by_1",
                          "typeString": "int_const 0"
                        },
                        "value": "0"
                      },
                      "src": "21196:42:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "src": "21172:66:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "documentation": " Checking that `stakerStrategyList[msg.sender].length == 0` is not strictly necessary here, but prevents reverting very late in logic,\n in the case that 'undelegate' is set to true but the `msg.sender` still has active deposits in EigenLayer.",
                  "id": 41124,
                  "nodeType": "IfStatement",
                  "src": "21168:120:72",
                  "trueBody": {
                    "id": 41123,
                    "nodeType": "Block",
                    "src": "21240:48:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "expression": {
                                "id": 41119,
                                "name": "msg",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -15,
                                "src": "21266:3:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_message",
                                  "typeString": "msg"
                                }
                              },
                              "id": 41120,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "sender",
                              "nodeType": "MemberAccess",
                              "src": "21266:10:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            ],
                            "id": 41118,
                            "name": "_undelegate",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42101,
                            "src": "21254:11:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                              "typeString": "function (address)"
                            }
                          },
                          "id": 41121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "21254:23:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 41122,
                        "nodeType": "ExpressionStatement",
                        "src": "21254:23:72"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 41126,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "21320:3:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 41127,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "21320:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 41128,
                        "name": "nonce",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40959,
                        "src": "21332:5:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "id": 41129,
                        "name": "withdrawer",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 40914,
                        "src": "21339:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 41130,
                        "name": "delegatedAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41051,
                        "src": "21351:16:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 41131,
                        "name": "withdrawalRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41098,
                        "src": "21369:14:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 41125,
                      "name": "WithdrawalQueued",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40385,
                      "src": "21303:16:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint96_$_t_address_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint96,address,address,bytes32)"
                      }
                    },
                    "id": 41132,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "21303:81:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41133,
                  "nodeType": "EmitStatement",
                  "src": "21298:86:72"
                },
                {
                  "expression": {
                    "id": 41134,
                    "name": "withdrawalRoot",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41098,
                    "src": "21402:14:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 40929,
                  "id": 41135,
                  "nodeType": "Return",
                  "src": "21395:21:72"
                }
              ]
            },
            "baseFunctions": [
              44103
            ],
            "documentation": {
              "id": 40902,
              "nodeType": "StructuredDocumentation",
              "src": "14833:2177:72",
              "text": " @notice Called by a staker to queue a withdrawal of the given amount of `shares` from each of the respective given `strategies`.\n @dev Stakers will complete their withdrawal by calling the 'completeQueuedWithdrawal' function.\n User shares are decreased in this function, but the total number of shares in each strategy remains the same.\n The total number of shares is decremented in the 'completeQueuedWithdrawal' function instead, which is where\n the funds are actually sent to the user through use of the strategies' 'withdrawal' function. This ensures\n that the value per share reported by each strategy will remain consistent, and that the shares will continue\n to accrue gains during the enforced WITHDRAWAL_WAITING_PERIOD.\n @param strategyIndexes is a list of the indices in `stakerStrategyList[msg.sender]` that correspond to the strategies\n for which `msg.sender` is withdrawing 100% of their shares\n @param strategies The Strategies to withdraw from\n @param shares The amount of shares to withdraw from each of the respective Strategies in the `strategies` array\n @dev Strategies are removed from `stakerStrategyList` by swapping the last entry with the entry to be removed, then\n popping off the last entry in `stakerStrategyList`. The simplest way to calculate the correct `strategyIndexes` to input\n is to order the strategies *for which `msg.sender` is withdrawing 100% of their shares* from highest index in\n `stakerStrategyList` to lowest index\n @dev Note that if the withdrawal includes shares in the enshrined 'beaconChainETH' strategy, then it must *only* include shares in this strategy, and\n `withdrawer` must match the caller's address. The first condition is because slashing of queued withdrawals cannot be guaranteed \n for Beacon Chain ETH (since we cannot trigger a withdrawal from the beacon chain through a smart contract) and the second condition is because shares in\n the enshrined 'beaconChainETH' strategy technically represent non-fungible positions (deposits to the Beacon Chain, each pointed at a specific EigenPod)."
            },
            "functionSelector": "f123991e",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 40919,
                    "name": "PAUSED_WITHDRAWALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40342,
                    "src": "17272:18:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 40920,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40918,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53306,
                  "src": "17254:17:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "17254:37:72"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 40922,
                      "name": "msg",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": -15,
                      "src": "17314:3:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_magic_message",
                        "typeString": "msg"
                      }
                    },
                    "id": 40923,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "sender",
                    "nodeType": "MemberAccess",
                    "src": "17314:10:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 40924,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40921,
                  "name": "onlyNotFrozen",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40437,
                  "src": "17300:13:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "17300:25:72"
              },
              {
                "id": 40926,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 40925,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29346,
                  "src": "17334:12:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "17334:12:72"
              }
            ],
            "name": "queueWithdrawal",
            "nameLocation": "17024:15:72",
            "parameters": {
              "id": 40917,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40905,
                  "mutability": "mutable",
                  "name": "strategyIndexes",
                  "nameLocation": "17068:15:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41137,
                  "src": "17049:34:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 40903,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "17049:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 40904,
                    "nodeType": "ArrayTypeName",
                    "src": "17049:9:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40909,
                  "mutability": "mutable",
                  "name": "strategies",
                  "nameLocation": "17114:10:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41137,
                  "src": "17093:31:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 40907,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 40906,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 43971,
                        "src": "17093:9:72"
                      },
                      "referencedDeclaration": 43971,
                      "src": "17093:9:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$43971",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 40908,
                    "nodeType": "ArrayTypeName",
                    "src": "17093:11:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40912,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "17153:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41137,
                  "src": "17134:25:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 40910,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "17134:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 40911,
                    "nodeType": "ArrayTypeName",
                    "src": "17134:9:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40914,
                  "mutability": "mutable",
                  "name": "withdrawer",
                  "nameLocation": "17177:10:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41137,
                  "src": "17169:18:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 40913,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "17169:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 40916,
                  "mutability": "mutable",
                  "name": "undelegateIfPossible",
                  "nameLocation": "17202:20:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41137,
                  "src": "17197:25:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 40915,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "17197:4:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17039:189:72"
            },
            "returnParameters": {
              "id": 40929,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 40928,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41137,
                  "src": "17364:7:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 40927,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "17364:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "17363:9:72"
            },
            "scope": 42304,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 41165,
            "nodeType": "FunctionDefinition",
            "src": "22610:486:72",
            "nodes": [],
            "body": {
              "id": 41164,
              "nodeType": "Block",
              "src": "22989:107:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41158,
                        "name": "queuedWithdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41141,
                        "src": "23025:16:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                          "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                        }
                      },
                      {
                        "id": 41159,
                        "name": "tokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41145,
                        "src": "23043:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$31889_$dyn_calldata_ptr",
                          "typeString": "contract IERC20[] calldata"
                        }
                      },
                      {
                        "id": 41160,
                        "name": "middlewareTimesIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41147,
                        "src": "23051:20:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 41161,
                        "name": "receiveAsTokens",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41149,
                        "src": "23073:15:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                          "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_contract$_IERC20_$31889_$dyn_calldata_ptr",
                          "typeString": "contract IERC20[] calldata"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 41157,
                      "name": "_completeQueuedWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42078,
                      "src": "22999:25:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_QueuedWithdrawal_$43999_calldata_ptr_$_t_array$_t_contract$_IERC20_$31889_$dyn_calldata_ptr_$_t_uint256_$_t_bool_$returns$__$",
                        "typeString": "function (struct IStrategyManager.QueuedWithdrawal calldata,contract IERC20[] calldata,uint256,bool)"
                      }
                    },
                    "id": 41162,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "22999:90:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41163,
                  "nodeType": "ExpressionStatement",
                  "src": "22999:90:72"
                }
              ]
            },
            "baseFunctions": [
              44118
            ],
            "documentation": {
              "id": 41138,
              "nodeType": "StructuredDocumentation",
              "src": "21429:1176:72",
              "text": " @notice Used to complete the specified `queuedWithdrawal`. The function caller must match `queuedWithdrawal.withdrawer`\n @param queuedWithdrawal The QueuedWithdrawal to complete.\n @param tokens Array in which the i-th entry specifies the `token` input to the 'withdraw' function of the i-th Strategy in the `strategies` array\n of the `queuedWithdrawal`. This input can be provided with zero length if `receiveAsTokens` is set to 'false' (since in that case, this input will be unused)\n @param middlewareTimesIndex is the index in the operator that the staker who triggered the withdrawal was delegated to's middleware times array\n @param receiveAsTokens If true, the shares specified in the queued withdrawal will be withdrawn from the specified strategies themselves\n and sent to the caller, through calls to `queuedWithdrawal.strategies[i].withdraw`. If false, then the shares in the specified strategies\n will simply be transferred to the caller directly.\n @dev middlewareTimesIndex should be calculated off chain before calling this function by finding the first index that satisfies `slasher.canWithdraw`"
            },
            "functionSelector": "f3be65d3",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 41152,
                    "name": "PAUSED_WITHDRAWALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40342,
                    "src": "22809:18:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 41153,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41151,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53306,
                  "src": "22791:17:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "22791:37:72"
              },
              {
                "id": 41155,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41154,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29346,
                  "src": "22972:12:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "22972:12:72"
              }
            ],
            "name": "completeQueuedWithdrawal",
            "nameLocation": "22619:24:72",
            "parameters": {
              "id": 41150,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41141,
                  "mutability": "mutable",
                  "name": "queuedWithdrawal",
                  "nameLocation": "22670:16:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41165,
                  "src": "22644:42:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                    "typeString": "struct IStrategyManager.QueuedWithdrawal"
                  },
                  "typeName": {
                    "id": 41140,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41139,
                      "name": "QueuedWithdrawal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43999,
                      "src": "22644:16:72"
                    },
                    "referencedDeclaration": 43999,
                    "src": "22644:16:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_storage_ptr",
                      "typeString": "struct IStrategyManager.QueuedWithdrawal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41145,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "22706:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41165,
                  "src": "22688:24:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$31889_$dyn_calldata_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 41143,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 41142,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31889,
                        "src": "22688:6:72"
                      },
                      "referencedDeclaration": 31889,
                      "src": "22688:6:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$31889",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 41144,
                    "nodeType": "ArrayTypeName",
                    "src": "22688:8:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$31889_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41147,
                  "mutability": "mutable",
                  "name": "middlewareTimesIndex",
                  "nameLocation": "22722:20:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41165,
                  "src": "22714:28:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41146,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "22714:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41149,
                  "mutability": "mutable",
                  "name": "receiveAsTokens",
                  "nameLocation": "22749:15:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41165,
                  "src": "22744:20:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 41148,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "22744:4:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "22643:122:72"
            },
            "returnParameters": {
              "id": 41156,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "22989:0:72"
            },
            "scope": 42304,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 41218,
            "nodeType": "FunctionDefinition",
            "src": "23471:639:72",
            "nodes": [],
            "body": {
              "id": 41217,
              "nodeType": "Block",
              "src": "23910:200:72",
              "nodes": [],
              "statements": [
                {
                  "body": {
                    "id": 41215,
                    "nodeType": "Block",
                    "src": "23974:130:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "baseExpression": {
                                "id": 41201,
                                "name": "queuedWithdrawals",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41170,
                                "src": "24014:17:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_struct$_QueuedWithdrawal_$43999_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "struct IStrategyManager.QueuedWithdrawal calldata[] calldata"
                                }
                              },
                              "id": 41203,
                              "indexExpression": {
                                "id": 41202,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41190,
                                "src": "24032:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "24014:20:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                                "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 41204,
                                "name": "tokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41175,
                                "src": "24036:6:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_array$_t_contract$_IERC20_$31889_$dyn_calldata_ptr_$dyn_calldata_ptr",
                                  "typeString": "contract IERC20[] calldata[] calldata"
                                }
                              },
                              "id": 41206,
                              "indexExpression": {
                                "id": 41205,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41190,
                                "src": "24043:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "24036:9:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IERC20_$31889_$dyn_calldata_ptr",
                                "typeString": "contract IERC20[] calldata"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 41207,
                                "name": "middlewareTimesIndexes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41178,
                                "src": "24047:22:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 41209,
                              "indexExpression": {
                                "id": 41208,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41190,
                                "src": "24070:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "24047:25:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 41210,
                                "name": "receiveAsTokens",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41181,
                                "src": "24074:15:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_bool_$dyn_calldata_ptr",
                                  "typeString": "bool[] calldata"
                                }
                              },
                              "id": 41212,
                              "indexExpression": {
                                "id": 41211,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41190,
                                "src": "24090:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "24074:18:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                                "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                              },
                              {
                                "typeIdentifier": "t_array$_t_contract$_IERC20_$31889_$dyn_calldata_ptr",
                                "typeString": "contract IERC20[] calldata"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            ],
                            "id": 41200,
                            "name": "_completeQueuedWithdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42078,
                            "src": "23988:25:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_struct$_QueuedWithdrawal_$43999_calldata_ptr_$_t_array$_t_contract$_IERC20_$31889_$dyn_calldata_ptr_$_t_uint256_$_t_bool_$returns$__$",
                              "typeString": "function (struct IStrategyManager.QueuedWithdrawal calldata,contract IERC20[] calldata,uint256,bool)"
                            }
                          },
                          "id": 41213,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "23988:105:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 41214,
                        "nodeType": "ExpressionStatement",
                        "src": "23988:105:72"
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41196,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41193,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41190,
                      "src": "23939:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "expression": {
                        "id": 41194,
                        "name": "queuedWithdrawals",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41170,
                        "src": "23943:17:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_struct$_QueuedWithdrawal_$43999_calldata_ptr_$dyn_calldata_ptr",
                          "typeString": "struct IStrategyManager.QueuedWithdrawal calldata[] calldata"
                        }
                      },
                      "id": 41195,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "length",
                      "nodeType": "MemberAccess",
                      "src": "23943:24:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "23939:28:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41216,
                  "initializationExpression": {
                    "assignments": [
                      41190
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 41190,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "23932:1:72",
                        "nodeType": "VariableDeclaration",
                        "scope": 41216,
                        "src": "23924:9:72",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 41189,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "23924:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 41192,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 41191,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "23936:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "23924:13:72"
                  },
                  "loopExpression": {
                    "expression": {
                      "id": 41198,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "UnaryOperation",
                      "operator": "++",
                      "prefix": false,
                      "src": "23969:3:72",
                      "subExpression": {
                        "id": 41197,
                        "name": "i",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41190,
                        "src": "23969:1:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 41199,
                    "nodeType": "ExpressionStatement",
                    "src": "23969:3:72"
                  },
                  "nodeType": "ForStatement",
                  "src": "23920:184:72"
                }
              ]
            },
            "baseFunctions": [
              44137
            ],
            "documentation": {
              "id": 41166,
              "nodeType": "StructuredDocumentation",
              "src": "23102:364:72",
              "text": " @notice Used to complete the specified `queuedWithdrawals`. The function caller must match `queuedWithdrawals[...].withdrawer`\n @dev Array-ified version of `completeQueuedWithdrawal`\n @dev middlewareTimesIndex should be calculated off chain before calling this function by finding the first index that satisfies `slasher.canWithdraw`"
            },
            "functionSelector": "a782d945",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 41184,
                    "name": "PAUSED_WITHDRAWALS",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 40342,
                    "src": "23730:18:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  }
                ],
                "id": 41185,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41183,
                  "name": "onlyWhenNotPaused",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 53306,
                  "src": "23712:17:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "23712:37:72"
              },
              {
                "id": 41187,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41186,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29346,
                  "src": "23893:12:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "23893:12:72"
              }
            ],
            "name": "completeQueuedWithdrawals",
            "nameLocation": "23480:25:72",
            "parameters": {
              "id": 41182,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41170,
                  "mutability": "mutable",
                  "name": "queuedWithdrawals",
                  "nameLocation": "23543:17:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41218,
                  "src": "23515:45:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_struct$_QueuedWithdrawal_$43999_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "struct IStrategyManager.QueuedWithdrawal[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 41168,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 41167,
                        "name": "QueuedWithdrawal",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 43999,
                        "src": "23515:16:72"
                      },
                      "referencedDeclaration": 43999,
                      "src": "23515:16:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_storage_ptr",
                        "typeString": "struct IStrategyManager.QueuedWithdrawal"
                      }
                    },
                    "id": 41169,
                    "nodeType": "ArrayTypeName",
                    "src": "23515:18:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_struct$_QueuedWithdrawal_$43999_storage_$dyn_storage_ptr",
                      "typeString": "struct IStrategyManager.QueuedWithdrawal[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41175,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "23590:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41218,
                  "src": "23570:26:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_array$_t_contract$_IERC20_$31889_$dyn_calldata_ptr_$dyn_calldata_ptr",
                    "typeString": "contract IERC20[][]"
                  },
                  "typeName": {
                    "baseType": {
                      "baseType": {
                        "id": 41172,
                        "nodeType": "UserDefinedTypeName",
                        "pathNode": {
                          "id": 41171,
                          "name": "IERC20",
                          "nodeType": "IdentifierPath",
                          "referencedDeclaration": 31889,
                          "src": "23570:6:72"
                        },
                        "referencedDeclaration": 31889,
                        "src": "23570:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$31889",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 41173,
                      "nodeType": "ArrayTypeName",
                      "src": "23570:8:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IERC20_$31889_$dyn_storage_ptr",
                        "typeString": "contract IERC20[]"
                      }
                    },
                    "id": 41174,
                    "nodeType": "ArrayTypeName",
                    "src": "23570:10:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_array$_t_contract$_IERC20_$31889_$dyn_storage_$dyn_storage_ptr",
                      "typeString": "contract IERC20[][]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41178,
                  "mutability": "mutable",
                  "name": "middlewareTimesIndexes",
                  "nameLocation": "23625:22:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41218,
                  "src": "23606:41:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 41176,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "23606:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 41177,
                    "nodeType": "ArrayTypeName",
                    "src": "23606:9:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41181,
                  "mutability": "mutable",
                  "name": "receiveAsTokens",
                  "nameLocation": "23673:15:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41218,
                  "src": "23657:31:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_bool_$dyn_calldata_ptr",
                    "typeString": "bool[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 41179,
                      "name": "bool",
                      "nodeType": "ElementaryTypeName",
                      "src": "23657:4:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "id": 41180,
                    "nodeType": "ArrayTypeName",
                    "src": "23657:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_bool_$dyn_storage_ptr",
                      "typeString": "bool[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "23505:189:72"
            },
            "returnParameters": {
              "id": 41188,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "23910:0:72"
            },
            "scope": 42304,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 41333,
            "nodeType": "FunctionDefinition",
            "src": "24991:1675:72",
            "nodes": [],
            "body": {
              "id": 41332,
              "nodeType": "Block",
              "src": "25332:1334:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41252,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 41248,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41231,
                            "src": "25350:6:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IERC20_$31889_$dyn_calldata_ptr",
                              "typeString": "contract IERC20[] calldata"
                            }
                          },
                          "id": 41249,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "25350:13:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "id": 41250,
                            "name": "strategies",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41227,
                            "src": "25367:10:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                              "typeString": "contract IStrategy[] calldata"
                            }
                          },
                          "id": 41251,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "25367:17:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "25350:34:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e736c6173685368617265733a20696e707574206c656e677468206d69736d61746368",
                        "id": 41253,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "25386:52:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_9f9b2ddd85ac56de0fca42bc43ff3b069cd0b629b8be999b0c193dd2bccb5af6",
                          "typeString": "literal_string \"StrategyManager.slashShares: input length mismatch\""
                        },
                        "value": "StrategyManager.slashShares: input length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_9f9b2ddd85ac56de0fca42bc43ff3b069cd0b629b8be999b0c193dd2bccb5af6",
                          "typeString": "literal_string \"StrategyManager.slashShares: input length mismatch\""
                        }
                      ],
                      "id": 41247,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "25342:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 41254,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "25342:97:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41255,
                  "nodeType": "ExpressionStatement",
                  "src": "25342:97:72"
                },
                {
                  "assignments": [
                    41257
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41257,
                      "mutability": "mutable",
                      "name": "strategyIndexIndex",
                      "nameLocation": "25457:18:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 41332,
                      "src": "25449:26:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41256,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25449:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41258,
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25449:26:72"
                },
                {
                  "assignments": [
                    41260
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41260,
                      "mutability": "mutable",
                      "name": "strategiesLength",
                      "nameLocation": "25493:16:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 41332,
                      "src": "25485:24:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41259,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "25485:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41263,
                  "initialValue": {
                    "expression": {
                      "id": 41261,
                      "name": "strategies",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41227,
                      "src": "25512:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                        "typeString": "contract IStrategy[] calldata"
                      }
                    },
                    "id": 41262,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "25512:17:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "25485:44:72"
                },
                {
                  "body": {
                    "id": 41322,
                    "nodeType": "Block",
                    "src": "25582:929:72",
                    "statements": [
                      {
                        "condition": {
                          "arguments": [
                            {
                              "id": 41272,
                              "name": "slashedAddress",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41221,
                              "src": "25812:14:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 41273,
                                "name": "strategyIndexes",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41234,
                                "src": "25828:15:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 41275,
                              "indexExpression": {
                                "id": 41274,
                                "name": "strategyIndexIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41257,
                                "src": "25844:18:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "25828:35:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 41276,
                                "name": "strategies",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41227,
                                "src": "25865:10:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                                  "typeString": "contract IStrategy[] calldata"
                                }
                              },
                              "id": 41278,
                              "indexExpression": {
                                "id": 41277,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41265,
                                "src": "25876:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "25865:13:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$43971",
                                "typeString": "contract IStrategy"
                              }
                            },
                            {
                              "baseExpression": {
                                "id": 41279,
                                "name": "shareAmounts",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41237,
                                "src": "25880:12:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 41281,
                              "indexExpression": {
                                "id": 41280,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41265,
                                "src": "25893:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "25880:15:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_IStrategy_$43971",
                                "typeString": "contract IStrategy"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            ],
                            "id": 41271,
                            "name": "_removeShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41793,
                            "src": "25798:13:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_contract$_IStrategy_$43971_$_t_uint256_$returns$_t_bool_$",
                              "typeString": "function (address,uint256,contract IStrategy,uint256) returns (bool)"
                            }
                          },
                          "id": 41282,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "25798:98:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 41288,
                        "nodeType": "IfStatement",
                        "src": "25794:207:72",
                        "trueBody": {
                          "id": 41287,
                          "nodeType": "Block",
                          "src": "25898:103:72",
                          "statements": [
                            {
                              "id": 41286,
                              "nodeType": "UncheckedBlock",
                              "src": "25916:71:72",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 41284,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "25948:20:72",
                                    "subExpression": {
                                      "id": 41283,
                                      "name": "strategyIndexIndex",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41257,
                                      "src": "25950:18:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 41285,
                                  "nodeType": "ExpressionStatement",
                                  "src": "25948:20:72"
                                }
                              ]
                            }
                          ]
                        }
                      },
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IStrategy_$43971",
                            "typeString": "contract IStrategy"
                          },
                          "id": 41293,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "id": 41289,
                              "name": "strategies",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41227,
                              "src": "26019:10:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                                "typeString": "contract IStrategy[] calldata"
                              }
                            },
                            "id": 41291,
                            "indexExpression": {
                              "id": 41290,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41265,
                              "src": "26030:1:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "26019:13:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$43971",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 41292,
                            "name": "beaconChainETHStrategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42395,
                            "src": "26036:22:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$43971",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "src": "26019:39:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 41316,
                          "nodeType": "Block",
                          "src": "26242:165:72",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 41307,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 41223,
                                    "src": "26354:9:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 41308,
                                      "name": "tokens",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41231,
                                      "src": "26365:6:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IERC20_$31889_$dyn_calldata_ptr",
                                        "typeString": "contract IERC20[] calldata"
                                      }
                                    },
                                    "id": 41310,
                                    "indexExpression": {
                                      "id": 41309,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41265,
                                      "src": "26372:1:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "26365:9:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IERC20_$31889",
                                      "typeString": "contract IERC20"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 41311,
                                      "name": "shareAmounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41237,
                                      "src": "26376:12:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                        "typeString": "uint256[] calldata"
                                      }
                                    },
                                    "id": 41313,
                                    "indexExpression": {
                                      "id": 41312,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41265,
                                      "src": "26389:1:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "26376:15:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_IERC20_$31889",
                                      "typeString": "contract IERC20"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "expression": {
                                    "baseExpression": {
                                      "id": 41303,
                                      "name": "strategies",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41227,
                                      "src": "26331:10:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                                        "typeString": "contract IStrategy[] calldata"
                                      }
                                    },
                                    "id": 41305,
                                    "indexExpression": {
                                      "id": 41304,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41265,
                                      "src": "26342:1:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "26331:13:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$43971",
                                      "typeString": "contract IStrategy"
                                    }
                                  },
                                  "id": 41306,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "withdraw",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 43903,
                                  "src": "26331:22:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_IERC20_$31889_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,contract IERC20,uint256) external"
                                  }
                                },
                                "id": 41314,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "26331:61:72",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 41315,
                              "nodeType": "ExpressionStatement",
                              "src": "26331:61:72"
                            }
                          ]
                        },
                        "id": 41317,
                        "nodeType": "IfStatement",
                        "src": "26015:392:72",
                        "trueBody": {
                          "id": 41302,
                          "nodeType": "Block",
                          "src": "26060:164:72",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "id": 41295,
                                    "name": "slashedAddress",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 41221,
                                    "src": "26166:14:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "id": 41296,
                                    "name": "recipient",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 41223,
                                    "src": "26182:9:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "id": 41297,
                                      "name": "shareAmounts",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41237,
                                      "src": "26193:12:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                        "typeString": "uint256[] calldata"
                                      }
                                    },
                                    "id": 41299,
                                    "indexExpression": {
                                      "id": 41298,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41265,
                                      "src": "26206:1:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "26193:15:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 41294,
                                  "name": "_withdrawBeaconChainETH",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42156,
                                  "src": "26142:23:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,address,uint256)"
                                  }
                                },
                                "id": 41300,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "26142:67:72",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 41301,
                              "nodeType": "ExpressionStatement",
                              "src": "26142:67:72"
                            }
                          ]
                        }
                      },
                      {
                        "id": 41321,
                        "nodeType": "UncheckedBlock",
                        "src": "26455:46:72",
                        "statements": [
                          {
                            "expression": {
                              "id": 41319,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "26483:3:72",
                              "subExpression": {
                                "id": 41318,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41265,
                                "src": "26485:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 41320,
                            "nodeType": "ExpressionStatement",
                            "src": "26483:3:72"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41270,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41268,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41265,
                      "src": "25559:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 41269,
                      "name": "strategiesLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41260,
                      "src": "25563:16:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "25559:20:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41323,
                  "initializationExpression": {
                    "assignments": [
                      41265
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 41265,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "25552:1:72",
                        "nodeType": "VariableDeclaration",
                        "scope": 41323,
                        "src": "25544:9:72",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 41264,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "25544:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 41267,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 41266,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "25556:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "25544:13:72"
                  },
                  "nodeType": "ForStatement",
                  "src": "25539:972:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41327,
                        "name": "slashedAddress",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41221,
                        "src": "26618:14:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 41328,
                        "name": "strategies",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41227,
                        "src": "26634:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                          "typeString": "contract IStrategy[] calldata"
                        }
                      },
                      {
                        "id": 41329,
                        "name": "shareAmounts",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41237,
                        "src": "26646:12:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                          "typeString": "contract IStrategy[] calldata"
                        },
                        {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                          "typeString": "uint256[] calldata"
                        }
                      ],
                      "expression": {
                        "id": 41324,
                        "name": "delegation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42339,
                        "src": "26583:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDelegationManager_$42848",
                          "typeString": "contract IDelegationManager"
                        }
                      },
                      "id": 41326,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "decreaseDelegatedShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42823,
                      "src": "26583:34:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_array$_t_contract$_IStrategy_$43971_$dyn_memory_ptr_$_t_array$_t_uint256_$dyn_memory_ptr_$returns$__$",
                        "typeString": "function (address,contract IStrategy[] memory,uint256[] memory) external"
                      }
                    },
                    "id": 41330,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "26583:76:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41331,
                  "nodeType": "ExpressionStatement",
                  "src": "26583:76:72"
                }
              ]
            },
            "baseFunctions": [
              44159
            ],
            "documentation": {
              "id": 41219,
              "nodeType": "StructuredDocumentation",
              "src": "24116:870:72",
              "text": " @notice Slashes the shares of a 'frozen' operator (or a staker delegated to one)\n @param slashedAddress is the frozen address that is having its shares slashed\n @param strategyIndexes is a list of the indices in `stakerStrategyList[msg.sender]` that correspond to the strategies\n for which `msg.sender` is withdrawing 100% of their shares\n @param recipient The slashed funds are withdrawn as tokens to this address.\n @dev strategies are removed from `stakerStrategyList` by swapping the last entry with the entry to be removed, then\n popping off the last entry in `stakerStrategyList`. The simplest way to calculate the correct `strategyIndexes` to input\n is to order the strategies *for which `msg.sender` is withdrawing 100% of their shares* from highest index in\n `stakerStrategyList` to lowest index"
            },
            "functionSelector": "06f1f684",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 41240,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41239,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29056,
                  "src": "25262:9:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "25262:9:72"
              },
              {
                "arguments": [
                  {
                    "id": 41242,
                    "name": "slashedAddress",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41221,
                    "src": "25291:14:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 41243,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41241,
                  "name": "onlyFrozen",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40451,
                  "src": "25280:10:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "25280:26:72"
              },
              {
                "id": 41245,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41244,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29346,
                  "src": "25315:12:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "25315:12:72"
              }
            ],
            "name": "slashShares",
            "nameLocation": "25000:11:72",
            "parameters": {
              "id": 41238,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41221,
                  "mutability": "mutable",
                  "name": "slashedAddress",
                  "nameLocation": "25029:14:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41333,
                  "src": "25021:22:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41220,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25021:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41223,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "25061:9:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41333,
                  "src": "25053:17:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41222,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "25053:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41227,
                  "mutability": "mutable",
                  "name": "strategies",
                  "nameLocation": "25101:10:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41333,
                  "src": "25080:31:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 41225,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 41224,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 43971,
                        "src": "25080:9:72"
                      },
                      "referencedDeclaration": 43971,
                      "src": "25080:9:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$43971",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 41226,
                    "nodeType": "ArrayTypeName",
                    "src": "25080:11:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41231,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "25139:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41333,
                  "src": "25121:24:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$31889_$dyn_calldata_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 41229,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 41228,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31889,
                        "src": "25121:6:72"
                      },
                      "referencedDeclaration": 31889,
                      "src": "25121:6:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$31889",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 41230,
                    "nodeType": "ArrayTypeName",
                    "src": "25121:8:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$31889_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41234,
                  "mutability": "mutable",
                  "name": "strategyIndexes",
                  "nameLocation": "25174:15:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41333,
                  "src": "25155:34:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 41232,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "25155:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 41233,
                    "nodeType": "ArrayTypeName",
                    "src": "25155:9:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41237,
                  "mutability": "mutable",
                  "name": "shareAmounts",
                  "nameLocation": "25218:12:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41333,
                  "src": "25199:31:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 41235,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "25199:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 41236,
                    "nodeType": "ArrayTypeName",
                    "src": "25199:9:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "25011:225:72"
            },
            "returnParameters": {
              "id": 41246,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "25332:0:72"
            },
            "scope": 42304,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 41462,
            "nodeType": "FunctionDefinition",
            "src": "27661:2010:72",
            "nodes": [],
            "body": {
              "id": 41461,
              "nodeType": "Block",
              "src": "27929:1742:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41363,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 41358,
                            "name": "tokens",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41343,
                            "src": "27947:6:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IERC20_$31889_$dyn_calldata_ptr",
                              "typeString": "contract IERC20[] calldata"
                            }
                          },
                          "id": 41359,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "27947:13:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 41360,
                              "name": "queuedWithdrawal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41339,
                              "src": "27964:16:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                                "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                              }
                            },
                            "id": 41361,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "strategies",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43986,
                            "src": "27964:27:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                              "typeString": "contract IStrategy[] calldata"
                            }
                          },
                          "id": 41362,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "27964:34:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "27947:51:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e736c6173685175657565645769746864726177616c3a20696e707574206c656e677468206d69736d61746368",
                        "id": 41364,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28000:62:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_be9bceb822d3f79e65d1374d4019b59ad1477d001b55f45dc3ba4e6086a99878",
                          "typeString": "literal_string \"StrategyManager.slashQueuedWithdrawal: input length mismatch\""
                        },
                        "value": "StrategyManager.slashQueuedWithdrawal: input length mismatch"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_be9bceb822d3f79e65d1374d4019b59ad1477d001b55f45dc3ba4e6086a99878",
                          "typeString": "literal_string \"StrategyManager.slashQueuedWithdrawal: input length mismatch\""
                        }
                      ],
                      "id": 41357,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "27939:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 41365,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "27939:124:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41366,
                  "nodeType": "ExpressionStatement",
                  "src": "27939:124:72"
                },
                {
                  "assignments": [
                    41368
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41368,
                      "mutability": "mutable",
                      "name": "withdrawalRoot",
                      "nameLocation": "28117:14:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 41461,
                      "src": "28109:22:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 41367,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "28109:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41372,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 41370,
                        "name": "queuedWithdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41339,
                        "src": "28158:16:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                          "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                          "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                        }
                      ],
                      "id": 41369,
                      "name": "calculateWithdrawalRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42303,
                      "src": "28134:23:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_QueuedWithdrawal_$43999_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct IStrategyManager.QueuedWithdrawal memory) pure returns (bytes32)"
                      }
                    },
                    "id": 41371,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28134:41:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28109:66:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 41374,
                          "name": "withdrawalRootPending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42374,
                          "src": "28263:21:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                            "typeString": "mapping(bytes32 => bool)"
                          }
                        },
                        "id": 41376,
                        "indexExpression": {
                          "id": 41375,
                          "name": "withdrawalRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41368,
                          "src": "28285:14:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "28263:37:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e736c6173685175657565645769746864726177616c3a207769746864726177616c206973206e6f742070656e64696e67",
                        "id": 41377,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "28314:66:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_db0d31224c5c637b53f074da3fec1acdee1cf5fe1b7201f3872e0ce1ed37bb44",
                          "typeString": "literal_string \"StrategyManager.slashQueuedWithdrawal: withdrawal is not pending\""
                        },
                        "value": "StrategyManager.slashQueuedWithdrawal: withdrawal is not pending"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_db0d31224c5c637b53f074da3fec1acdee1cf5fe1b7201f3872e0ce1ed37bb44",
                          "typeString": "literal_string \"StrategyManager.slashQueuedWithdrawal: withdrawal is not pending\""
                        }
                      ],
                      "id": 41373,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "28242:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 41378,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "28242:148:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41379,
                  "nodeType": "ExpressionStatement",
                  "src": "28242:148:72"
                },
                {
                  "expression": {
                    "id": 41384,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 41380,
                        "name": "withdrawalRootPending",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42374,
                        "src": "28468:21:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 41382,
                      "indexExpression": {
                        "id": 41381,
                        "name": "withdrawalRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41368,
                        "src": "28490:14:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "28468:37:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 41383,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28508:5:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "28468:45:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41385,
                  "nodeType": "ExpressionStatement",
                  "src": "28468:45:72"
                },
                {
                  "assignments": [
                    41387
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41387,
                      "mutability": "mutable",
                      "name": "indicesToSkipIndex",
                      "nameLocation": "28597:18:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 41461,
                      "src": "28589:26:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41386,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "28589:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41389,
                  "initialValue": {
                    "hexValue": "30",
                    "id": 41388,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "number",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "28618:1:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_rational_0_by_1",
                      "typeString": "int_const 0"
                    },
                    "value": "0"
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28589:30:72"
                },
                {
                  "assignments": [
                    41391
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41391,
                      "mutability": "mutable",
                      "name": "strategiesLength",
                      "nameLocation": "28638:16:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 41461,
                      "src": "28630:24:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41390,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "28630:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41395,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 41392,
                        "name": "queuedWithdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41339,
                        "src": "28657:16:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                          "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                        }
                      },
                      "id": 41393,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "strategies",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43986,
                      "src": "28657:27:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                        "typeString": "contract IStrategy[] calldata"
                      }
                    },
                    "id": 41394,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "28657:34:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "28630:61:72"
                },
                {
                  "body": {
                    "id": 41459,
                    "nodeType": "Block",
                    "src": "28744:921:72",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "id": 41412,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 41406,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "id": 41403,
                              "name": "indicesToSkipIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41387,
                              "src": "28864:18:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "<",
                            "rightExpression": {
                              "expression": {
                                "id": 41404,
                                "name": "indicesToSkip",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41346,
                                "src": "28885:13:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 41405,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "length",
                              "nodeType": "MemberAccess",
                              "src": "28885:20:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "28864:41:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "&&",
                          "rightExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 41411,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "baseExpression": {
                                "id": 41407,
                                "name": "indicesToSkip",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41346,
                                "src": "28909:13:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                  "typeString": "uint256[] calldata"
                                }
                              },
                              "id": 41409,
                              "indexExpression": {
                                "id": 41408,
                                "name": "indicesToSkipIndex",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41387,
                                "src": "28923:18:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "28909:33:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "==",
                            "rightExpression": {
                              "id": 41410,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41397,
                              "src": "28946:1:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "28909:38:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "src": "28864:83:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 41457,
                          "nodeType": "Block",
                          "src": "29058:597:72",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_contract$_IStrategy_$43971",
                                  "typeString": "contract IStrategy"
                                },
                                "id": 41423,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 41418,
                                      "name": "queuedWithdrawal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41339,
                                      "src": "29080:16:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                                        "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                                      }
                                    },
                                    "id": 41419,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "strategies",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 43986,
                                    "src": "29080:27:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                                      "typeString": "contract IStrategy[] calldata"
                                    }
                                  },
                                  "id": 41421,
                                  "indexExpression": {
                                    "id": 41420,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 41397,
                                    "src": "29108:1:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "29080:30:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$43971",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 41422,
                                  "name": "beaconChainETHStrategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42395,
                                  "src": "29114:22:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$43971",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "src": "29080:56:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 41451,
                                "nodeType": "Block",
                                "src": "29342:228:72",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "id": 41441,
                                          "name": "recipient",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 41336,
                                          "src": "29502:9:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "baseExpression": {
                                            "id": 41442,
                                            "name": "tokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 41343,
                                            "src": "29513:6:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_contract$_IERC20_$31889_$dyn_calldata_ptr",
                                              "typeString": "contract IERC20[] calldata"
                                            }
                                          },
                                          "id": 41444,
                                          "indexExpression": {
                                            "id": 41443,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 41397,
                                            "src": "29520:1:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "29513:9:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$31889",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        {
                                          "baseExpression": {
                                            "expression": {
                                              "id": 41445,
                                              "name": "queuedWithdrawal",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 41339,
                                              "src": "29524:16:72",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                                                "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                                              }
                                            },
                                            "id": 41446,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "shares",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 43989,
                                            "src": "29524:23:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                              "typeString": "uint256[] calldata"
                                            }
                                          },
                                          "id": 41448,
                                          "indexExpression": {
                                            "id": 41447,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 41397,
                                            "src": "29548:1:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "29524:26:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_contract$_IERC20_$31889",
                                            "typeString": "contract IERC20"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "baseExpression": {
                                            "expression": {
                                              "id": 41435,
                                              "name": "queuedWithdrawal",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 41339,
                                              "src": "29462:16:72",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                                                "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                                              }
                                            },
                                            "id": 41438,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "strategies",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 43986,
                                            "src": "29462:27:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                                              "typeString": "contract IStrategy[] calldata"
                                            }
                                          },
                                          "id": 41439,
                                          "indexExpression": {
                                            "id": 41437,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 41397,
                                            "src": "29490:1:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "29462:30:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IStrategy_$43971",
                                            "typeString": "contract IStrategy"
                                          }
                                        },
                                        "id": 41440,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "withdraw",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 43903,
                                        "src": "29462:39:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_IERC20_$31889_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,contract IERC20,uint256) external"
                                        }
                                      },
                                      "id": 41449,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "29462:89:72",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 41450,
                                    "nodeType": "ExpressionStatement",
                                    "src": "29462:89:72"
                                  }
                                ]
                              },
                              "id": 41452,
                              "nodeType": "IfStatement",
                              "src": "29076:494:72",
                              "trueBody": {
                                "id": 41434,
                                "nodeType": "Block",
                                "src": "29137:199:72",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 41425,
                                            "name": "queuedWithdrawal",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 41339,
                                            "src": "29251:16:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                                              "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                                            }
                                          },
                                          "id": 41426,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "depositor",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 43991,
                                          "src": "29251:26:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "id": 41427,
                                          "name": "recipient",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 41336,
                                          "src": "29279:9:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "baseExpression": {
                                            "expression": {
                                              "id": 41428,
                                              "name": "queuedWithdrawal",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 41339,
                                              "src": "29290:16:72",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                                                "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                                              }
                                            },
                                            "id": 41429,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "shares",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 43989,
                                            "src": "29290:23:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                              "typeString": "uint256[] calldata"
                                            }
                                          },
                                          "id": 41431,
                                          "indexExpression": {
                                            "id": 41430,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 41397,
                                            "src": "29314:1:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "29290:26:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 41424,
                                        "name": "_withdrawBeaconChainETH",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 42156,
                                        "src": "29227:23:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,address,uint256)"
                                        }
                                      },
                                      "id": 41432,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "29227:90:72",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 41433,
                                    "nodeType": "ExpressionStatement",
                                    "src": "29227:90:72"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 41456,
                              "nodeType": "UncheckedBlock",
                              "src": "29587:54:72",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 41454,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "29619:3:72",
                                    "subExpression": {
                                      "id": 41453,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41397,
                                      "src": "29621:1:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 41455,
                                  "nodeType": "ExpressionStatement",
                                  "src": "29619:3:72"
                                }
                              ]
                            }
                          ]
                        },
                        "id": 41458,
                        "nodeType": "IfStatement",
                        "src": "28860:795:72",
                        "trueBody": {
                          "id": 41417,
                          "nodeType": "Block",
                          "src": "28949:103:72",
                          "statements": [
                            {
                              "id": 41416,
                              "nodeType": "UncheckedBlock",
                              "src": "28967:71:72",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 41414,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "28999:20:72",
                                    "subExpression": {
                                      "id": 41413,
                                      "name": "indicesToSkipIndex",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41387,
                                      "src": "29001:18:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 41415,
                                  "nodeType": "ExpressionStatement",
                                  "src": "28999:20:72"
                                }
                              ]
                            }
                          ]
                        }
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41402,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41400,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41397,
                      "src": "28721:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 41401,
                      "name": "strategiesLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41391,
                      "src": "28725:16:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "28721:20:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41460,
                  "initializationExpression": {
                    "assignments": [
                      41397
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 41397,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "28714:1:72",
                        "nodeType": "VariableDeclaration",
                        "scope": 41460,
                        "src": "28706:9:72",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 41396,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "28706:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 41399,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 41398,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "28718:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "28706:13:72"
                  },
                  "nodeType": "ForStatement",
                  "src": "28701:964:72"
                }
              ]
            },
            "baseFunctions": [
              44175
            ],
            "documentation": {
              "id": 41334,
              "nodeType": "StructuredDocumentation",
              "src": "26676:980:72",
              "text": " @notice Slashes an existing queued withdrawal that was created by a 'frozen' operator (or a staker delegated to one)\n @param recipient The funds in the slashed withdrawal are withdrawn as tokens to this address.\n @param queuedWithdrawal The previously queued withdrawal to be slashed\n @param tokens Array in which the i-th entry specifies the `token` input to the 'withdraw' function of the i-th Strategy in the `strategies`\n array of the `queuedWithdrawal`.\n @param indicesToSkip Optional input parameter -- indices in the `strategies` array to skip (i.e. not call the 'withdraw' function on). This input exists\n so that, e.g., if the slashed QueuedWithdrawal contains a malicious strategy in the `strategies` array which always reverts on calls to its 'withdraw' function,\n then the malicious strategy can be skipped (with the shares in effect \"burned\"), while the non-malicious strategies are still called as normal."
            },
            "functionSelector": "43c09061",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 41349,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41348,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29056,
                  "src": "27840:9:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "27840:9:72"
              },
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 41351,
                      "name": "queuedWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41339,
                      "src": "27869:16:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                        "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                      }
                    },
                    "id": 41352,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "delegatedAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 43998,
                    "src": "27869:33:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 41353,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41350,
                  "name": "onlyFrozen",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40451,
                  "src": "27858:10:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "27858:45:72"
              },
              {
                "id": 41355,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41354,
                  "name": "nonReentrant",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29346,
                  "src": "27912:12:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "27912:12:72"
              }
            ],
            "name": "slashQueuedWithdrawal",
            "nameLocation": "27670:21:72",
            "parameters": {
              "id": 41347,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41336,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "27700:9:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41462,
                  "src": "27692:17:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41335,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "27692:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41339,
                  "mutability": "mutable",
                  "name": "queuedWithdrawal",
                  "nameLocation": "27737:16:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41462,
                  "src": "27711:42:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                    "typeString": "struct IStrategyManager.QueuedWithdrawal"
                  },
                  "typeName": {
                    "id": 41338,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41337,
                      "name": "QueuedWithdrawal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43999,
                      "src": "27711:16:72"
                    },
                    "referencedDeclaration": 43999,
                    "src": "27711:16:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_storage_ptr",
                      "typeString": "struct IStrategyManager.QueuedWithdrawal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41343,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "27773:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41462,
                  "src": "27755:24:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$31889_$dyn_calldata_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 41341,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 41340,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31889,
                        "src": "27755:6:72"
                      },
                      "referencedDeclaration": 31889,
                      "src": "27755:6:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$31889",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 41342,
                    "nodeType": "ArrayTypeName",
                    "src": "27755:8:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$31889_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41346,
                  "mutability": "mutable",
                  "name": "indicesToSkip",
                  "nameLocation": "27800:13:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41462,
                  "src": "27781:32:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 41344,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "27781:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 41345,
                    "nodeType": "ArrayTypeName",
                    "src": "27781:9:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "27691:123:72"
            },
            "returnParameters": {
              "id": 41356,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "27929:0:72"
            },
            "scope": 42304,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 41475,
            "nodeType": "FunctionDefinition",
            "src": "29778:151:72",
            "nodes": [],
            "body": {
              "id": 41474,
              "nodeType": "Block",
              "src": "29863:66:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41471,
                        "name": "_withdrawalDelayBlocks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41465,
                        "src": "29899:22:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 41470,
                      "name": "_setWithdrawalDelayBlocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42179,
                      "src": "29873:25:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_uint256_$returns$__$",
                        "typeString": "function (uint256)"
                      }
                    },
                    "id": 41472,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "29873:49:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41473,
                  "nodeType": "ExpressionStatement",
                  "src": "29873:49:72"
                }
              ]
            },
            "documentation": {
              "id": 41463,
              "nodeType": "StructuredDocumentation",
              "src": "29677:96:72",
              "text": "@notice Owner-only function for modifying the value of the `withdrawalDelayBlocks` variable."
            },
            "functionSelector": "4d50f9a4",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 41468,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41467,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29056,
                  "src": "29853:9:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "29853:9:72"
              }
            ],
            "name": "setWithdrawalDelayBlocks",
            "nameLocation": "29787:24:72",
            "parameters": {
              "id": 41466,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41465,
                  "mutability": "mutable",
                  "name": "_withdrawalDelayBlocks",
                  "nameLocation": "29820:22:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41475,
                  "src": "29812:30:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41464,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "29812:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "29811:32:72"
            },
            "returnParameters": {
              "id": 41469,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "29863:0:72"
            },
            "scope": 42304,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 41488,
            "nodeType": "FunctionDefinition",
            "src": "30016:147:72",
            "nodes": [],
            "body": {
              "id": 41487,
              "nodeType": "Block",
              "src": "30099:64:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41484,
                        "name": "newStrategyWhitelister",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41478,
                        "src": "30133:22:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 41483,
                      "name": "_setStrategyWhitelister",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42195,
                      "src": "30109:23:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address)"
                      }
                    },
                    "id": 41485,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "30109:47:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41486,
                  "nodeType": "ExpressionStatement",
                  "src": "30109:47:72"
                }
              ]
            },
            "documentation": {
              "id": 41476,
              "nodeType": "StructuredDocumentation",
              "src": "29935:76:72",
              "text": "@notice Owner-only function to change the `strategyWhitelister` address."
            },
            "functionSelector": "c6656702",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 41481,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41480,
                  "name": "onlyOwner",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 29056,
                  "src": "30089:9:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "30089:9:72"
              }
            ],
            "name": "setStrategyWhitelister",
            "nameLocation": "30025:22:72",
            "parameters": {
              "id": 41479,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41478,
                  "mutability": "mutable",
                  "name": "newStrategyWhitelister",
                  "nameLocation": "30056:22:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41488,
                  "src": "30048:30:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41477,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "30048:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30047:32:72"
            },
            "returnParameters": {
              "id": 41482,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30099:0:72"
            },
            "scope": 42304,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 41539,
            "nodeType": "FunctionDefinition",
            "src": "30302:678:72",
            "nodes": [],
            "body": {
              "id": 41538,
              "nodeType": "Block",
              "src": "30420:560:72",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    41499
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41499,
                      "mutability": "mutable",
                      "name": "strategiesToWhitelistLength",
                      "nameLocation": "30438:27:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 41538,
                      "src": "30430:35:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41498,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "30430:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41502,
                  "initialValue": {
                    "expression": {
                      "id": 41500,
                      "name": "strategiesToWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41493,
                      "src": "30468:21:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                        "typeString": "contract IStrategy[] calldata"
                      }
                    },
                    "id": 41501,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "30468:28:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "30430:66:72"
                },
                {
                  "body": {
                    "id": 41536,
                    "nodeType": "Block",
                    "src": "30560:414:72",
                    "statements": [
                      {
                        "condition": {
                          "id": 41515,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "UnaryOperation",
                          "operator": "!",
                          "prefix": true,
                          "src": "30668:58:72",
                          "subExpression": {
                            "baseExpression": {
                              "id": 41510,
                              "name": "strategyIsWhitelistedForDeposit",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42385,
                              "src": "30669:31:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$43971_$_t_bool_$",
                                "typeString": "mapping(contract IStrategy => bool)"
                              }
                            },
                            "id": 41514,
                            "indexExpression": {
                              "baseExpression": {
                                "id": 41511,
                                "name": "strategiesToWhitelist",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41493,
                                "src": "30701:21:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                                  "typeString": "contract IStrategy[] calldata"
                                }
                              },
                              "id": 41513,
                              "indexExpression": {
                                "id": 41512,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41504,
                                "src": "30723:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "30701:24:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$43971",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "30669:57:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_bool",
                              "typeString": "bool"
                            }
                          },
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 41531,
                        "nodeType": "IfStatement",
                        "src": "30664:241:72",
                        "trueBody": {
                          "id": 41530,
                          "nodeType": "Block",
                          "src": "30728:177:72",
                          "statements": [
                            {
                              "expression": {
                                "id": 41522,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 41516,
                                    "name": "strategyIsWhitelistedForDeposit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 42385,
                                    "src": "30746:31:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$43971_$_t_bool_$",
                                      "typeString": "mapping(contract IStrategy => bool)"
                                    }
                                  },
                                  "id": 41520,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 41517,
                                      "name": "strategiesToWhitelist",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41493,
                                      "src": "30778:21:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                                        "typeString": "contract IStrategy[] calldata"
                                      }
                                    },
                                    "id": 41519,
                                    "indexExpression": {
                                      "id": 41518,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41504,
                                      "src": "30800:1:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "30778:24:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$43971",
                                      "typeString": "contract IStrategy"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "30746:57:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "74727565",
                                  "id": 41521,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "30806:4:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "true"
                                },
                                "src": "30746:64:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 41523,
                              "nodeType": "ExpressionStatement",
                              "src": "30746:64:72"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 41525,
                                      "name": "strategiesToWhitelist",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41493,
                                      "src": "30865:21:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                                        "typeString": "contract IStrategy[] calldata"
                                      }
                                    },
                                    "id": 41527,
                                    "indexExpression": {
                                      "id": 41526,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41504,
                                      "src": "30887:1:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "30865:24:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$43971",
                                      "typeString": "contract IStrategy"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IStrategy_$43971",
                                      "typeString": "contract IStrategy"
                                    }
                                  ],
                                  "id": 41524,
                                  "name": "StrategyAddedToDepositWhitelist",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40409,
                                  "src": "30833:31:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IStrategy_$43971_$returns$__$",
                                    "typeString": "function (contract IStrategy)"
                                  }
                                },
                                "id": 41528,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "30833:57:72",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 41529,
                              "nodeType": "EmitStatement",
                              "src": "30828:62:72"
                            }
                          ]
                        }
                      },
                      {
                        "id": 41535,
                        "nodeType": "UncheckedBlock",
                        "src": "30918:46:72",
                        "statements": [
                          {
                            "expression": {
                              "id": 41533,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "30946:3:72",
                              "subExpression": {
                                "id": 41532,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41504,
                                "src": "30948:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 41534,
                            "nodeType": "ExpressionStatement",
                            "src": "30946:3:72"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41509,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41507,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41504,
                      "src": "30526:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 41508,
                      "name": "strategiesToWhitelistLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41499,
                      "src": "30530:27:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "30526:31:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41537,
                  "initializationExpression": {
                    "assignments": [
                      41504
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 41504,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "30519:1:72",
                        "nodeType": "VariableDeclaration",
                        "scope": 41537,
                        "src": "30511:9:72",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 41503,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "30511:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 41506,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 41505,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "30523:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "30511:13:72"
                  },
                  "nodeType": "ForStatement",
                  "src": "30506:468:72"
                }
              ]
            },
            "baseFunctions": [
              44192
            ],
            "documentation": {
              "id": 41489,
              "nodeType": "StructuredDocumentation",
              "src": "30169:128:72",
              "text": "@notice Owner-only function that adds the provided Strategies to the 'whitelist' of strategies that stakers can deposit into"
            },
            "functionSelector": "5de08ff2",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 41496,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41495,
                  "name": "onlyStrategyWhitelister",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40478,
                  "src": "30396:23:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "30396:23:72"
              }
            ],
            "name": "addStrategiesToDepositWhitelist",
            "nameLocation": "30311:31:72",
            "parameters": {
              "id": 41494,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41493,
                  "mutability": "mutable",
                  "name": "strategiesToWhitelist",
                  "nameLocation": "30364:21:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41539,
                  "src": "30343:42:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 41491,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 41490,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 43971,
                        "src": "30343:9:72"
                      },
                      "referencedDeclaration": 43971,
                      "src": "30343:9:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$43971",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 41492,
                    "nodeType": "ArrayTypeName",
                    "src": "30343:11:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "30342:44:72"
            },
            "returnParameters": {
              "id": 41497,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "30420:0:72"
            },
            "scope": 42304,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 41589,
            "nodeType": "FunctionDefinition",
            "src": "31125:753:72",
            "nodes": [],
            "body": {
              "id": 41588,
              "nodeType": "Block",
              "src": "31258:620:72",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    41550
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41550,
                      "mutability": "mutable",
                      "name": "strategiesToRemoveFromWhitelistLength",
                      "nameLocation": "31276:37:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 41588,
                      "src": "31268:45:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41549,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "31268:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41553,
                  "initialValue": {
                    "expression": {
                      "id": 41551,
                      "name": "strategiesToRemoveFromWhitelist",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41544,
                      "src": "31316:31:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                        "typeString": "contract IStrategy[] calldata"
                      }
                    },
                    "id": 41552,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "31316:38:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "31268:86:72"
                },
                {
                  "body": {
                    "id": 41586,
                    "nodeType": "Block",
                    "src": "31428:444:72",
                    "statements": [
                      {
                        "condition": {
                          "baseExpression": {
                            "id": 41561,
                            "name": "strategyIsWhitelistedForDeposit",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42385,
                            "src": "31532:31:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$43971_$_t_bool_$",
                              "typeString": "mapping(contract IStrategy => bool)"
                            }
                          },
                          "id": 41565,
                          "indexExpression": {
                            "baseExpression": {
                              "id": 41562,
                              "name": "strategiesToRemoveFromWhitelist",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41544,
                              "src": "31564:31:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                                "typeString": "contract IStrategy[] calldata"
                              }
                            },
                            "id": 41564,
                            "indexExpression": {
                              "id": 41563,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41555,
                              "src": "31596:1:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "31564:34:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$43971",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "nodeType": "IndexAccess",
                          "src": "31532:67:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 41581,
                        "nodeType": "IfStatement",
                        "src": "31528:275:72",
                        "trueBody": {
                          "id": 41580,
                          "nodeType": "Block",
                          "src": "31601:202:72",
                          "statements": [
                            {
                              "expression": {
                                "id": 41572,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 41566,
                                    "name": "strategyIsWhitelistedForDeposit",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 42385,
                                    "src": "31619:31:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$43971_$_t_bool_$",
                                      "typeString": "mapping(contract IStrategy => bool)"
                                    }
                                  },
                                  "id": 41570,
                                  "indexExpression": {
                                    "baseExpression": {
                                      "id": 41567,
                                      "name": "strategiesToRemoveFromWhitelist",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41544,
                                      "src": "31651:31:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                                        "typeString": "contract IStrategy[] calldata"
                                      }
                                    },
                                    "id": 41569,
                                    "indexExpression": {
                                      "id": 41568,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41555,
                                      "src": "31683:1:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "31651:34:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$43971",
                                      "typeString": "contract IStrategy"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "31619:67:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "66616c7365",
                                  "id": 41571,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "bool",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "31689:5:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_bool",
                                    "typeString": "bool"
                                  },
                                  "value": "false"
                                },
                                "src": "31619:75:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 41573,
                              "nodeType": "ExpressionStatement",
                              "src": "31619:75:72"
                            },
                            {
                              "eventCall": {
                                "arguments": [
                                  {
                                    "baseExpression": {
                                      "id": 41575,
                                      "name": "strategiesToRemoveFromWhitelist",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41544,
                                      "src": "31753:31:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                                        "typeString": "contract IStrategy[] calldata"
                                      }
                                    },
                                    "id": 41577,
                                    "indexExpression": {
                                      "id": 41576,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41555,
                                      "src": "31785:1:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "31753:34:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$43971",
                                      "typeString": "contract IStrategy"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_contract$_IStrategy_$43971",
                                      "typeString": "contract IStrategy"
                                    }
                                  ],
                                  "id": 41574,
                                  "name": "StrategyRemovedFromDepositWhitelist",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 40415,
                                  "src": "31717:35:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_event_nonpayable$_t_contract$_IStrategy_$43971_$returns$__$",
                                    "typeString": "function (contract IStrategy)"
                                  }
                                },
                                "id": 41578,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "31717:71:72",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 41579,
                              "nodeType": "EmitStatement",
                              "src": "31712:76:72"
                            }
                          ]
                        }
                      },
                      {
                        "id": 41585,
                        "nodeType": "UncheckedBlock",
                        "src": "31816:46:72",
                        "statements": [
                          {
                            "expression": {
                              "id": 41583,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "31844:3:72",
                              "subExpression": {
                                "id": 41582,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41555,
                                "src": "31846:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 41584,
                            "nodeType": "ExpressionStatement",
                            "src": "31844:3:72"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41560,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41558,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41555,
                      "src": "31384:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 41559,
                      "name": "strategiesToRemoveFromWhitelistLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41550,
                      "src": "31388:37:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "31384:41:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41587,
                  "initializationExpression": {
                    "assignments": [
                      41555
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 41555,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "31377:1:72",
                        "nodeType": "VariableDeclaration",
                        "scope": 41587,
                        "src": "31369:9:72",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 41554,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "31369:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 41557,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 41556,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "31381:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "31369:13:72"
                  },
                  "nodeType": "ForStatement",
                  "src": "31364:508:72"
                }
              ]
            },
            "baseFunctions": [
              44200
            ],
            "documentation": {
              "id": 41540,
              "nodeType": "StructuredDocumentation",
              "src": "30987:133:72",
              "text": "@notice Owner-only function that removes the provided Strategies from the 'whitelist' of strategies that stakers can deposit into"
            },
            "functionSelector": "b5d8b5b8",
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "id": 41547,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41546,
                  "name": "onlyStrategyWhitelister",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40478,
                  "src": "31234:23:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "31234:23:72"
              }
            ],
            "name": "removeStrategiesFromDepositWhitelist",
            "nameLocation": "31134:36:72",
            "parameters": {
              "id": 41545,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41544,
                  "mutability": "mutable",
                  "name": "strategiesToRemoveFromWhitelist",
                  "nameLocation": "31192:31:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41589,
                  "src": "31171:52:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 41542,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 41541,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 43971,
                        "src": "31171:9:72"
                      },
                      "referencedDeclaration": 43971,
                      "src": "31171:9:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$43971",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 41543,
                    "nodeType": "ArrayTypeName",
                    "src": "31171:11:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "31170:54:72"
            },
            "returnParameters": {
              "id": 41548,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "31258:0:72"
            },
            "scope": 42304,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 41660,
            "nodeType": "FunctionDefinition",
            "src": "32411:1038:72",
            "nodes": [],
            "body": {
              "id": 41659,
              "nodeType": "Block",
              "src": "32495:954:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 41606,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 41601,
                          "name": "depositor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41592,
                          "src": "32548:9:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 41604,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "32569:1:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 41603,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "32561:7:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 41602,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "32561:7:72",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 41605,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32561:10:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "32548:23:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e5f6164645368617265733a206465706f7369746f722063616e6e6f74206265207a65726f2061646472657373",
                        "id": 41607,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "32573:62:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_2942962f23892f9d129ad7018602a346ab70c5d92fb75dc7b6e5d9d9a1c095ef",
                          "typeString": "literal_string \"StrategyManager._addShares: depositor cannot be zero address\""
                        },
                        "value": "StrategyManager._addShares: depositor cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_2942962f23892f9d129ad7018602a346ab70c5d92fb75dc7b6e5d9d9a1c095ef",
                          "typeString": "literal_string \"StrategyManager._addShares: depositor cannot be zero address\""
                        }
                      ],
                      "id": 41600,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "32540:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 41608,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32540:96:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41609,
                  "nodeType": "ExpressionStatement",
                  "src": "32540:96:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41613,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 41611,
                          "name": "shares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41597,
                          "src": "32654:6:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 41612,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "32664:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "32654:11:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e5f6164645368617265733a207368617265732073686f756c64206e6f74206265207a65726f21",
                        "id": 41614,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "32667:56:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_ce519665a6b93fe095241af2c2664f6ed1e4ca920805999803e3ca90a4cff68c",
                          "typeString": "literal_string \"StrategyManager._addShares: shares should not be zero!\""
                        },
                        "value": "StrategyManager._addShares: shares should not be zero!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_ce519665a6b93fe095241af2c2664f6ed1e4ca920805999803e3ca90a4cff68c",
                          "typeString": "literal_string \"StrategyManager._addShares: shares should not be zero!\""
                        }
                      ],
                      "id": 41610,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "32646:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 41615,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "32646:78:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41616,
                  "nodeType": "ExpressionStatement",
                  "src": "32646:78:72"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41623,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 41617,
                          "name": "stakerStrategyShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42362,
                          "src": "32825:20:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IStrategy_$43971_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(contract IStrategy => uint256))"
                          }
                        },
                        "id": 41619,
                        "indexExpression": {
                          "id": 41618,
                          "name": "depositor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41592,
                          "src": "32846:9:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "32825:31:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$43971_$_t_uint256_$",
                          "typeString": "mapping(contract IStrategy => uint256)"
                        }
                      },
                      "id": 41621,
                      "indexExpression": {
                        "id": 41620,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41595,
                        "src": "32857:8:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$43971",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "32825:41:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 41622,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "32870:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "32825:46:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41642,
                  "nodeType": "IfStatement",
                  "src": "32821:344:72",
                  "trueBody": {
                    "id": 41641,
                    "nodeType": "Block",
                    "src": "32873:292:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 41630,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 41625,
                                    "name": "stakerStrategyList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 42369,
                                    "src": "32912:18:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$43971_$dyn_storage_$",
                                      "typeString": "mapping(address => contract IStrategy[] storage ref)"
                                    }
                                  },
                                  "id": 41627,
                                  "indexExpression": {
                                    "id": 41626,
                                    "name": "depositor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 41592,
                                    "src": "32931:9:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "32912:29:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_storage",
                                    "typeString": "contract IStrategy[] storage ref"
                                  }
                                },
                                "id": 41628,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "32912:36:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "<",
                              "rightExpression": {
                                "id": 41629,
                                "name": "MAX_STAKER_STRATEGY_LIST_LENGTH",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42336,
                                "src": "32951:31:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint8",
                                  "typeString": "uint8"
                                }
                              },
                              "src": "32912:70:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53747261746567794d616e616765722e5f6164645368617265733a206465706f73697420776f756c6420657863656564204d41585f5354414b45525f53545241544547595f4c4953545f4c454e475448",
                              "id": 41631,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "33000:82:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_818243ee92c680502bd49b10cd721b7368e6bf025348a28587882777b4d49231",
                                "typeString": "literal_string \"StrategyManager._addShares: deposit would exceed MAX_STAKER_STRATEGY_LIST_LENGTH\""
                              },
                              "value": "StrategyManager._addShares: deposit would exceed MAX_STAKER_STRATEGY_LIST_LENGTH"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_818243ee92c680502bd49b10cd721b7368e6bf025348a28587882777b4d49231",
                                "typeString": "literal_string \"StrategyManager._addShares: deposit would exceed MAX_STAKER_STRATEGY_LIST_LENGTH\""
                              }
                            ],
                            "id": 41624,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "32887:7:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 41632,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "32887:209:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 41633,
                        "nodeType": "ExpressionStatement",
                        "src": "32887:209:72"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 41638,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41595,
                              "src": "33145:8:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$43971",
                                "typeString": "contract IStrategy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_contract$_IStrategy_$43971",
                                "typeString": "contract IStrategy"
                              }
                            ],
                            "expression": {
                              "baseExpression": {
                                "id": 41634,
                                "name": "stakerStrategyList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42369,
                                "src": "33110:18:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$43971_$dyn_storage_$",
                                  "typeString": "mapping(address => contract IStrategy[] storage ref)"
                                }
                              },
                              "id": 41636,
                              "indexExpression": {
                                "id": 41635,
                                "name": "depositor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41592,
                                "src": "33129:9:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "33110:29:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_storage",
                                "typeString": "contract IStrategy[] storage ref"
                              }
                            },
                            "id": 41637,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "push",
                            "nodeType": "MemberAccess",
                            "src": "33110:34:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_arraypush_nonpayable$_t_array$_t_contract$_IStrategy_$43971_$dyn_storage_ptr_$_t_contract$_IStrategy_$43971_$returns$__$bound_to$_t_array$_t_contract$_IStrategy_$43971_$dyn_storage_ptr_$",
                              "typeString": "function (contract IStrategy[] storage pointer,contract IStrategy)"
                            }
                          },
                          "id": 41639,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "33110:44:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 41640,
                        "nodeType": "ExpressionStatement",
                        "src": "33110:44:72"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "id": 41649,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 41643,
                          "name": "stakerStrategyShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42362,
                          "src": "33253:20:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IStrategy_$43971_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(contract IStrategy => uint256))"
                          }
                        },
                        "id": 41646,
                        "indexExpression": {
                          "id": 41644,
                          "name": "depositor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41592,
                          "src": "33274:9:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "33253:31:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$43971_$_t_uint256_$",
                          "typeString": "mapping(contract IStrategy => uint256)"
                        }
                      },
                      "id": 41647,
                      "indexExpression": {
                        "id": 41645,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41595,
                        "src": "33285:8:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$43971",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "33253:41:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "id": 41648,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41597,
                      "src": "33298:6:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "33253:51:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41650,
                  "nodeType": "ExpressionStatement",
                  "src": "33253:51:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41654,
                        "name": "depositor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41592,
                        "src": "33414:9:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 41655,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41595,
                        "src": "33425:8:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$43971",
                          "typeString": "contract IStrategy"
                        }
                      },
                      {
                        "id": 41656,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41597,
                        "src": "33435:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$43971",
                          "typeString": "contract IStrategy"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 41651,
                        "name": "delegation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42339,
                        "src": "33379:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDelegationManager_$42848",
                          "typeString": "contract IDelegationManager"
                        }
                      },
                      "id": 41653,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "increaseDelegatedShares",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42810,
                      "src": "33379:34:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_IStrategy_$43971_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract IStrategy,uint256) external"
                      }
                    },
                    "id": 41657,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "33379:63:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41658,
                  "nodeType": "ExpressionStatement",
                  "src": "33379:63:72"
                }
              ]
            },
            "documentation": {
              "id": 41590,
              "nodeType": "StructuredDocumentation",
              "src": "31912:494:72",
              "text": " @notice This function adds `shares` for a given `strategy` to the `depositor` and runs through the necessary update logic.\n @dev In particular, this function calls `delegation.increaseDelegatedShares(depositor, strategy, shares)` to ensure that all\n delegated shares are tracked, increases the stored share amount in `stakerStrategyShares[depositor][strategy]`, and adds `strategy`\n to the `depositor`'s list of strategies, if it is not in the list already."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_addShares",
            "nameLocation": "32420:10:72",
            "parameters": {
              "id": 41598,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41592,
                  "mutability": "mutable",
                  "name": "depositor",
                  "nameLocation": "32439:9:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41660,
                  "src": "32431:17:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41591,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "32431:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41595,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "32460:8:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41660,
                  "src": "32450:18:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$43971",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 41594,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41593,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43971,
                      "src": "32450:9:72"
                    },
                    "referencedDeclaration": 43971,
                    "src": "32450:9:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$43971",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41597,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "32478:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41660,
                  "src": "32470:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41596,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "32470:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "32430:55:72"
            },
            "returnParameters": {
              "id": 41599,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "32495:0:72"
            },
            "scope": 42304,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 41715,
            "nodeType": "FunctionDefinition",
            "src": "33779:731:72",
            "nodes": [],
            "body": {
              "id": 41714,
              "nodeType": "Block",
              "src": "33986:524:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 41682,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "34078:3:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 41683,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "34078:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "arguments": [
                          {
                            "id": 41686,
                            "name": "strategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41666,
                            "src": "34098:8:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$43971",
                              "typeString": "contract IStrategy"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_contract$_IStrategy_$43971",
                              "typeString": "contract IStrategy"
                            }
                          ],
                          "id": 41685,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "lValueRequested": false,
                          "nodeType": "ElementaryTypeNameExpression",
                          "src": "34090:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_type$_t_address_$",
                            "typeString": "type(address)"
                          },
                          "typeName": {
                            "id": 41684,
                            "name": "address",
                            "nodeType": "ElementaryTypeName",
                            "src": "34090:7:72",
                            "typeDescriptions": {}
                          }
                        },
                        "id": 41687,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "typeConversion",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "34090:17:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 41688,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41671,
                        "src": "34109:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 41679,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41669,
                        "src": "34055:5:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$31889",
                          "typeString": "contract IERC20"
                        }
                      },
                      "id": 41681,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "safeTransferFrom",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 32081,
                      "src": "34055:22:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_contract$_IERC20_$31889_$_t_address_$_t_address_$_t_uint256_$returns$__$bound_to$_t_contract$_IERC20_$31889_$",
                        "typeString": "function (contract IERC20,address,address,uint256)"
                      }
                    },
                    "id": 41689,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34055:61:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41690,
                  "nodeType": "ExpressionStatement",
                  "src": "34055:61:72"
                },
                {
                  "expression": {
                    "id": 41697,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 41691,
                      "name": "shares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41677,
                      "src": "34242:6:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "arguments": [
                        {
                          "id": 41694,
                          "name": "token",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41669,
                          "src": "34268:5:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IERC20_$31889",
                            "typeString": "contract IERC20"
                          }
                        },
                        {
                          "id": 41695,
                          "name": "amount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41671,
                          "src": "34275:6:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_contract$_IERC20_$31889",
                            "typeString": "contract IERC20"
                          },
                          {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        ],
                        "expression": {
                          "id": 41692,
                          "name": "strategy",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41666,
                          "src": "34251:8:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$43971",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "id": 41693,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "deposit",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43892,
                        "src": "34251:16:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_external_nonpayable$_t_contract$_IERC20_$31889_$_t_uint256_$returns$_t_uint256_$",
                          "typeString": "function (contract IERC20,uint256) external returns (uint256)"
                        }
                      },
                      "id": 41696,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "34251:31:72",
                      "tryCall": false,
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "34242:40:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41698,
                  "nodeType": "ExpressionStatement",
                  "src": "34242:40:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 41700,
                        "name": "depositor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41663,
                        "src": "34392:9:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 41701,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41666,
                        "src": "34403:8:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$43971",
                          "typeString": "contract IStrategy"
                        }
                      },
                      {
                        "id": 41702,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41677,
                        "src": "34413:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$43971",
                          "typeString": "contract IStrategy"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 41699,
                      "name": "_addShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41660,
                      "src": "34381:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IStrategy_$43971_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract IStrategy,uint256)"
                      }
                    },
                    "id": 41703,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34381:39:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41704,
                  "nodeType": "ExpressionStatement",
                  "src": "34381:39:72"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 41706,
                        "name": "depositor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41663,
                        "src": "34444:9:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 41707,
                        "name": "token",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41669,
                        "src": "34455:5:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IERC20_$31889",
                          "typeString": "contract IERC20"
                        }
                      },
                      {
                        "id": 41708,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41666,
                        "src": "34462:8:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$43971",
                          "typeString": "contract IStrategy"
                        }
                      },
                      {
                        "id": 41709,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41677,
                        "src": "34472:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_contract$_IERC20_$31889",
                          "typeString": "contract IERC20"
                        },
                        {
                          "typeIdentifier": "t_contract$_IStrategy_$43971",
                          "typeString": "contract IStrategy"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 41705,
                      "name": "Deposit",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40360,
                      "src": "34436:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_contract$_IERC20_$31889_$_t_contract$_IStrategy_$43971_$_t_uint256_$returns$__$",
                        "typeString": "function (address,contract IERC20,contract IStrategy,uint256)"
                      }
                    },
                    "id": 41710,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "34436:43:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41711,
                  "nodeType": "EmitStatement",
                  "src": "34431:48:72"
                },
                {
                  "expression": {
                    "id": 41712,
                    "name": "shares",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41677,
                    "src": "34497:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 41678,
                  "id": 41713,
                  "nodeType": "Return",
                  "src": "34490:13:72"
                }
              ]
            },
            "documentation": {
              "id": 41661,
              "nodeType": "StructuredDocumentation",
              "src": "33455:319:72",
              "text": " @notice Internal function in which `amount` of ERC20 `token` is transferred from `msg.sender` to the Strategy-type contract\n `strategy`, with the resulting shares credited to `depositor`.\n @return shares The amount of *new* shares in `strategy` that have been credited to the `depositor`."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "id": 41674,
                    "name": "strategy",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41666,
                    "src": "33939:8:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$43971",
                      "typeString": "contract IStrategy"
                    }
                  }
                ],
                "id": 41675,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41673,
                  "name": "onlyStrategiesWhitelistedForDeposit",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40492,
                  "src": "33903:35:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "33903:45:72"
              }
            ],
            "name": "_depositIntoStrategy",
            "nameLocation": "33788:20:72",
            "parameters": {
              "id": 41672,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41663,
                  "mutability": "mutable",
                  "name": "depositor",
                  "nameLocation": "33817:9:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41715,
                  "src": "33809:17:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41662,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "33809:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41666,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "33838:8:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41715,
                  "src": "33828:18:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$43971",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 41665,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41664,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43971,
                      "src": "33828:9:72"
                    },
                    "referencedDeclaration": 43971,
                    "src": "33828:9:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$43971",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41669,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "33855:5:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41715,
                  "src": "33848:12:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$31889",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 41668,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41667,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31889,
                      "src": "33848:6:72"
                    },
                    "referencedDeclaration": 31889,
                    "src": "33848:6:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$31889",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41671,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "33870:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41715,
                  "src": "33862:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41670,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "33862:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "33808:69:72"
            },
            "returnParameters": {
              "id": 41678,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41677,
                  "mutability": "mutable",
                  "name": "shares",
                  "nameLocation": "33974:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41715,
                  "src": "33966:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41676,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "33966:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "33965:16:72"
            },
            "scope": 42304,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 41793,
            "nodeType": "FunctionDefinition",
            "src": "34844:1424:72",
            "nodes": [],
            "body": {
              "id": 41792,
              "nodeType": "Block",
              "src": "34994:1274:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 41736,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 41731,
                          "name": "depositor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41718,
                          "src": "35047:9:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "arguments": [
                            {
                              "hexValue": "30",
                              "id": 41734,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "35068:1:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              }
                            ],
                            "id": 41733,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "lValueRequested": false,
                            "nodeType": "ElementaryTypeNameExpression",
                            "src": "35060:7:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_type$_t_address_$",
                              "typeString": "type(address)"
                            },
                            "typeName": {
                              "id": 41732,
                              "name": "address",
                              "nodeType": "ElementaryTypeName",
                              "src": "35060:7:72",
                              "typeDescriptions": {}
                            }
                          },
                          "id": 41735,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "typeConversion",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "35060:10:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "35047:23:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e5f72656d6f76655368617265733a206465706f7369746f722063616e6e6f74206265207a65726f2061646472657373",
                        "id": 41737,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "35072:65:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_b17818a67202559a1dc50e1eb25b8e034395d603cb25e79f7b1132c91d07a377",
                          "typeString": "literal_string \"StrategyManager._removeShares: depositor cannot be zero address\""
                        },
                        "value": "StrategyManager._removeShares: depositor cannot be zero address"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_b17818a67202559a1dc50e1eb25b8e034395d603cb25e79f7b1132c91d07a377",
                          "typeString": "literal_string \"StrategyManager._removeShares: depositor cannot be zero address\""
                        }
                      ],
                      "id": 41730,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "35039:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 41738,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35039:99:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41739,
                  "nodeType": "ExpressionStatement",
                  "src": "35039:99:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41743,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 41741,
                          "name": "shareAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41725,
                          "src": "35156:11:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "!=",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 41742,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "35171:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "35156:16:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e5f72656d6f76655368617265733a207368617265416d6f756e742073686f756c64206e6f74206265207a65726f21",
                        "id": 41744,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "35174:64:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_5be1081ec55dae903ada20dc8f879f170e8d4fab2f39a48ab92e512958118a5a",
                          "typeString": "literal_string \"StrategyManager._removeShares: shareAmount should not be zero!\""
                        },
                        "value": "StrategyManager._removeShares: shareAmount should not be zero!"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_5be1081ec55dae903ada20dc8f879f170e8d4fab2f39a48ab92e512958118a5a",
                          "typeString": "literal_string \"StrategyManager._removeShares: shareAmount should not be zero!\""
                        }
                      ],
                      "id": 41740,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "35148:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 41745,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35148:91:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41746,
                  "nodeType": "ExpressionStatement",
                  "src": "35148:91:72"
                },
                {
                  "assignments": [
                    41748
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41748,
                      "mutability": "mutable",
                      "name": "userShares",
                      "nameLocation": "35310:10:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 41792,
                      "src": "35302:18:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41747,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "35302:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41754,
                  "initialValue": {
                    "baseExpression": {
                      "baseExpression": {
                        "id": 41749,
                        "name": "stakerStrategyShares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42362,
                        "src": "35323:20:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IStrategy_$43971_$_t_uint256_$_$",
                          "typeString": "mapping(address => mapping(contract IStrategy => uint256))"
                        }
                      },
                      "id": 41751,
                      "indexExpression": {
                        "id": 41750,
                        "name": "depositor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41718,
                        "src": "35344:9:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "35323:31:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$43971_$_t_uint256_$",
                        "typeString": "mapping(contract IStrategy => uint256)"
                      }
                    },
                    "id": 41753,
                    "indexExpression": {
                      "id": 41752,
                      "name": "strategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41723,
                      "src": "35355:8:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$43971",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "35323:41:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "35302:62:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 41758,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 41756,
                          "name": "shareAmount",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41725,
                          "src": "35391:11:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 41757,
                          "name": "userShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41748,
                          "src": "35406:10:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "35391:25:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e5f72656d6f76655368617265733a207368617265416d6f756e7420746f6f2068696768",
                        "id": 41759,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "35418:53:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_63d4303cc95bda825a5017e04e486f0a31d8e1b0d8608720315fcfb997e1096f",
                          "typeString": "literal_string \"StrategyManager._removeShares: shareAmount too high\""
                        },
                        "value": "StrategyManager._removeShares: shareAmount too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_63d4303cc95bda825a5017e04e486f0a31d8e1b0d8608720315fcfb997e1096f",
                          "typeString": "literal_string \"StrategyManager._removeShares: shareAmount too high\""
                        }
                      ],
                      "id": 41755,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "35383:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 41760,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "35383:89:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41761,
                  "nodeType": "ExpressionStatement",
                  "src": "35383:89:72"
                },
                {
                  "id": 41768,
                  "nodeType": "UncheckedBlock",
                  "src": "35546:72:72",
                  "statements": [
                    {
                      "expression": {
                        "id": 41766,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftHandSide": {
                          "id": 41762,
                          "name": "userShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41748,
                          "src": "35570:10:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "Assignment",
                        "operator": "=",
                        "rightHandSide": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 41765,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 41763,
                            "name": "userShares",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41748,
                            "src": "35583:10:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "-",
                          "rightExpression": {
                            "id": 41764,
                            "name": "shareAmount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41725,
                            "src": "35596:11:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "35583:24:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "35570:37:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "id": 41767,
                      "nodeType": "ExpressionStatement",
                      "src": "35570:37:72"
                    }
                  ]
                },
                {
                  "expression": {
                    "id": 41775,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 41769,
                          "name": "stakerStrategyShares",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42362,
                          "src": "35714:20:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IStrategy_$43971_$_t_uint256_$_$",
                            "typeString": "mapping(address => mapping(contract IStrategy => uint256))"
                          }
                        },
                        "id": 41772,
                        "indexExpression": {
                          "id": 41770,
                          "name": "depositor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41718,
                          "src": "35735:9:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "35714:31:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$43971_$_t_uint256_$",
                          "typeString": "mapping(contract IStrategy => uint256)"
                        }
                      },
                      "id": 41773,
                      "indexExpression": {
                        "id": 41771,
                        "name": "strategy",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41723,
                        "src": "35746:8:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IStrategy_$43971",
                          "typeString": "contract IStrategy"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "35714:41:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 41774,
                      "name": "userShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41748,
                      "src": "35758:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "35714:54:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 41776,
                  "nodeType": "ExpressionStatement",
                  "src": "35714:54:72"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 41779,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 41777,
                      "name": "userShares",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41748,
                      "src": "35886:10:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 41778,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "35900:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "35886:15:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41789,
                  "nodeType": "IfStatement",
                  "src": "35882:250:72",
                  "trueBody": {
                    "id": 41788,
                    "nodeType": "Block",
                    "src": "35903:229:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "id": 41781,
                              "name": "depositor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41718,
                              "src": "35955:9:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            {
                              "id": 41782,
                              "name": "strategyIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41720,
                              "src": "35966:13:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            {
                              "id": 41783,
                              "name": "strategy",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41723,
                              "src": "35981:8:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$43971",
                                "typeString": "contract IStrategy"
                              }
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              },
                              {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              {
                                "typeIdentifier": "t_contract$_IStrategy_$43971",
                                "typeString": "contract IStrategy"
                              }
                            ],
                            "id": 41780,
                            "name": "_removeStrategyFromStakerStrategyList",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41892,
                            "src": "35917:37:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_uint256_$_t_contract$_IStrategy_$43971_$returns$__$",
                              "typeString": "function (address,uint256,contract IStrategy)"
                            }
                          },
                          "id": 41784,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "35917:73:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 41785,
                        "nodeType": "ExpressionStatement",
                        "src": "35917:73:72"
                      },
                      {
                        "expression": {
                          "hexValue": "74727565",
                          "id": 41786,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "bool",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "36117:4:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          },
                          "value": "true"
                        },
                        "functionReturnParameters": 41729,
                        "id": 41787,
                        "nodeType": "Return",
                        "src": "36110:11:72"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "hexValue": "66616c7365",
                    "id": 41790,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": true,
                    "kind": "bool",
                    "lValueRequested": false,
                    "nodeType": "Literal",
                    "src": "36256:5:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    },
                    "value": "false"
                  },
                  "functionReturnParameters": 41729,
                  "id": 41791,
                  "nodeType": "Return",
                  "src": "36249:12:72"
                }
              ]
            },
            "documentation": {
              "id": 41716,
              "nodeType": "StructuredDocumentation",
              "src": "34516:323:72",
              "text": " @notice Decreases the shares that `depositor` holds in `strategy` by `shareAmount`.\n @dev If the amount of shares represents all of the depositor`s shares in said strategy,\n then the strategy is removed from stakerStrategyList[depositor] and 'true' is returned. Otherwise 'false' is returned."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeShares",
            "nameLocation": "34853:13:72",
            "parameters": {
              "id": 41726,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41718,
                  "mutability": "mutable",
                  "name": "depositor",
                  "nameLocation": "34875:9:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41793,
                  "src": "34867:17:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41717,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "34867:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41720,
                  "mutability": "mutable",
                  "name": "strategyIndex",
                  "nameLocation": "34894:13:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41793,
                  "src": "34886:21:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41719,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "34886:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41723,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "34919:8:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41793,
                  "src": "34909:18:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$43971",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 41722,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41721,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43971,
                      "src": "34909:9:72"
                    },
                    "referencedDeclaration": 43971,
                    "src": "34909:9:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$43971",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41725,
                  "mutability": "mutable",
                  "name": "shareAmount",
                  "nameLocation": "34937:11:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41793,
                  "src": "34929:19:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41724,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "34929:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "34866:83:72"
            },
            "returnParameters": {
              "id": 41729,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41728,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 41793,
                  "src": "34984:4:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 41727,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "34984:4:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "34983:6:72"
            },
            "scope": 42304,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 41892,
            "nodeType": "FunctionDefinition",
            "src": "36610:1414:72",
            "nodes": [],
            "body": {
              "id": 41891,
              "nodeType": "Block",
              "src": "36728:1296:72",
              "nodes": [],
              "statements": [
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_contract$_IStrategy_$43971",
                      "typeString": "contract IStrategy"
                    },
                    "id": 41810,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "baseExpression": {
                        "baseExpression": {
                          "id": 41804,
                          "name": "stakerStrategyList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42369,
                          "src": "36810:18:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$43971_$dyn_storage_$",
                            "typeString": "mapping(address => contract IStrategy[] storage ref)"
                          }
                        },
                        "id": 41806,
                        "indexExpression": {
                          "id": 41805,
                          "name": "depositor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41796,
                          "src": "36829:9:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "36810:29:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_storage",
                          "typeString": "contract IStrategy[] storage ref"
                        }
                      },
                      "id": 41808,
                      "indexExpression": {
                        "id": 41807,
                        "name": "strategyIndex",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41798,
                        "src": "36840:13:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "36810:44:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$43971",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "==",
                    "rightExpression": {
                      "id": 41809,
                      "name": "strategy",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41801,
                      "src": "36858:8:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$43971",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "src": "36810:56:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 41883,
                    "nodeType": "Block",
                    "src": "37104:809:72",
                    "statements": [
                      {
                        "assignments": [
                          41830
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 41830,
                            "mutability": "mutable",
                            "name": "stratsLength",
                            "nameLocation": "37209:12:72",
                            "nodeType": "VariableDeclaration",
                            "scope": 41883,
                            "src": "37201:20:72",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 41829,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "37201:7:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 41835,
                        "initialValue": {
                          "expression": {
                            "baseExpression": {
                              "id": 41831,
                              "name": "stakerStrategyList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42369,
                              "src": "37224:18:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$43971_$dyn_storage_$",
                                "typeString": "mapping(address => contract IStrategy[] storage ref)"
                              }
                            },
                            "id": 41833,
                            "indexExpression": {
                              "id": 41832,
                              "name": "depositor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41796,
                              "src": "37243:9:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "37224:29:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_storage",
                              "typeString": "contract IStrategy[] storage ref"
                            }
                          },
                          "id": 41834,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "37224:36:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "37201:59:72"
                      },
                      {
                        "assignments": [
                          41837
                        ],
                        "declarations": [
                          {
                            "constant": false,
                            "id": 41837,
                            "mutability": "mutable",
                            "name": "j",
                            "nameLocation": "37282:1:72",
                            "nodeType": "VariableDeclaration",
                            "scope": 41883,
                            "src": "37274:9:72",
                            "stateVariable": false,
                            "storageLocation": "default",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "typeName": {
                              "id": 41836,
                              "name": "uint256",
                              "nodeType": "ElementaryTypeName",
                              "src": "37274:7:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "visibility": "internal"
                          }
                        ],
                        "id": 41839,
                        "initialValue": {
                          "hexValue": "30",
                          "id": 41838,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "37286:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "nodeType": "VariableDeclarationStatement",
                        "src": "37274:13:72"
                      },
                      {
                        "body": {
                          "id": 41874,
                          "nodeType": "Block",
                          "src": "37327:405:72",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_contract$_IStrategy_$43971",
                                  "typeString": "contract IStrategy"
                                },
                                "id": 41849,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "baseExpression": {
                                      "id": 41843,
                                      "name": "stakerStrategyList",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 42369,
                                      "src": "37349:18:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$43971_$dyn_storage_$",
                                        "typeString": "mapping(address => contract IStrategy[] storage ref)"
                                      }
                                    },
                                    "id": 41845,
                                    "indexExpression": {
                                      "id": 41844,
                                      "name": "depositor",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41796,
                                      "src": "37368:9:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_address",
                                        "typeString": "address"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": true,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "37349:29:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_storage",
                                      "typeString": "contract IStrategy[] storage ref"
                                    }
                                  },
                                  "id": 41847,
                                  "indexExpression": {
                                    "id": 41846,
                                    "name": "j",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 41837,
                                    "src": "37379:1:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "37349:32:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$43971",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 41848,
                                  "name": "strategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41801,
                                  "src": "37385:8:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$43971",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "src": "37349:44:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "id": 41869,
                              "nodeType": "IfStatement",
                              "src": "37345:302:72",
                              "trueBody": {
                                "id": 41868,
                                "nodeType": "Block",
                                "src": "37395:252:72",
                                "statements": [
                                  {
                                    "expression": {
                                      "id": 41865,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftHandSide": {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "id": 41850,
                                            "name": "stakerStrategyList",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 42369,
                                            "src": "37495:18:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$43971_$dyn_storage_$",
                                              "typeString": "mapping(address => contract IStrategy[] storage ref)"
                                            }
                                          },
                                          "id": 41853,
                                          "indexExpression": {
                                            "id": 41851,
                                            "name": "depositor",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 41796,
                                            "src": "37514:9:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "37495:29:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_storage",
                                            "typeString": "contract IStrategy[] storage ref"
                                          }
                                        },
                                        "id": 41854,
                                        "indexExpression": {
                                          "id": 41852,
                                          "name": "j",
                                          "nodeType": "Identifier",
                                          "overloadedDeclarations": [],
                                          "referencedDeclaration": 41837,
                                          "src": "37525:1:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": true,
                                        "nodeType": "IndexAccess",
                                        "src": "37495:32:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IStrategy_$43971",
                                          "typeString": "contract IStrategy"
                                        }
                                      },
                                      "nodeType": "Assignment",
                                      "operator": "=",
                                      "rightHandSide": {
                                        "baseExpression": {
                                          "baseExpression": {
                                            "id": 41855,
                                            "name": "stakerStrategyList",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 42369,
                                            "src": "37530:18:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$43971_$dyn_storage_$",
                                              "typeString": "mapping(address => contract IStrategy[] storage ref)"
                                            }
                                          },
                                          "id": 41857,
                                          "indexExpression": {
                                            "id": 41856,
                                            "name": "depositor",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 41796,
                                            "src": "37549:9:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_address",
                                              "typeString": "address"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": true,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "37530:29:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_storage",
                                            "typeString": "contract IStrategy[] storage ref"
                                          }
                                        },
                                        "id": 41864,
                                        "indexExpression": {
                                          "commonType": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          },
                                          "id": 41863,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "leftExpression": {
                                            "expression": {
                                              "baseExpression": {
                                                "id": 41858,
                                                "name": "stakerStrategyList",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 42369,
                                                "src": "37560:18:72",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$43971_$dyn_storage_$",
                                                  "typeString": "mapping(address => contract IStrategy[] storage ref)"
                                                }
                                              },
                                              "id": 41860,
                                              "indexExpression": {
                                                "id": 41859,
                                                "name": "depositor",
                                                "nodeType": "Identifier",
                                                "overloadedDeclarations": [],
                                                "referencedDeclaration": 41796,
                                                "src": "37579:9:72",
                                                "typeDescriptions": {
                                                  "typeIdentifier": "t_address",
                                                  "typeString": "address"
                                                }
                                              },
                                              "isConstant": false,
                                              "isLValue": true,
                                              "isPure": false,
                                              "lValueRequested": false,
                                              "nodeType": "IndexAccess",
                                              "src": "37560:29:72",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_storage",
                                                "typeString": "contract IStrategy[] storage ref"
                                              }
                                            },
                                            "id": 41861,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "length",
                                            "nodeType": "MemberAccess",
                                            "src": "37560:36:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "nodeType": "BinaryOperation",
                                          "operator": "-",
                                          "rightExpression": {
                                            "hexValue": "31",
                                            "id": 41862,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": true,
                                            "kind": "number",
                                            "lValueRequested": false,
                                            "nodeType": "Literal",
                                            "src": "37599:1:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_rational_1_by_1",
                                              "typeString": "int_const 1"
                                            },
                                            "value": "1"
                                          },
                                          "src": "37560:40:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        },
                                        "isConstant": false,
                                        "isLValue": true,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "nodeType": "IndexAccess",
                                        "src": "37530:71:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_contract$_IStrategy_$43971",
                                          "typeString": "contract IStrategy"
                                        }
                                      },
                                      "src": "37495:106:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_contract$_IStrategy_$43971",
                                        "typeString": "contract IStrategy"
                                      }
                                    },
                                    "id": 41866,
                                    "nodeType": "ExpressionStatement",
                                    "src": "37495:106:72"
                                  },
                                  {
                                    "id": 41867,
                                    "nodeType": "Break",
                                    "src": "37623:5:72"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 41873,
                              "nodeType": "UncheckedBlock",
                              "src": "37664:54:72",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 41871,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "37696:3:72",
                                    "subExpression": {
                                      "id": 41870,
                                      "name": "j",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41837,
                                      "src": "37698:1:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 41872,
                                  "nodeType": "ExpressionStatement",
                                  "src": "37696:3:72"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 41842,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 41840,
                            "name": "j",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41837,
                            "src": "37308:1:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 41841,
                            "name": "stratsLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41830,
                            "src": "37312:12:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "37308:16:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 41875,
                        "nodeType": "ForStatement",
                        "src": "37301:431:72"
                      },
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 41879,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "id": 41877,
                                "name": "j",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41837,
                                "src": "37807:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "!=",
                              "rightExpression": {
                                "id": 41878,
                                "name": "stratsLength",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41830,
                                "src": "37812:12:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "37807:17:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53747261746567794d616e616765722e5f72656d6f7665537472617465677946726f6d5374616b657253747261746567794c6973743a207374726174656779206e6f7420666f756e64",
                              "id": 41880,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "37826:75:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_4e2f86725d8cb8d317a350c002495b7b912f6b12104c9f90f18fe4424b84e247",
                                "typeString": "literal_string \"StrategyManager._removeStrategyFromStakerStrategyList: strategy not found\""
                              },
                              "value": "StrategyManager._removeStrategyFromStakerStrategyList: strategy not found"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_4e2f86725d8cb8d317a350c002495b7b912f6b12104c9f90f18fe4424b84e247",
                                "typeString": "literal_string \"StrategyManager._removeStrategyFromStakerStrategyList: strategy not found\""
                              }
                            ],
                            "id": 41876,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "37799:7:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 41881,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "37799:103:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 41882,
                        "nodeType": "ExpressionStatement",
                        "src": "37799:103:72"
                      }
                    ]
                  },
                  "id": 41884,
                  "nodeType": "IfStatement",
                  "src": "36806:1107:72",
                  "trueBody": {
                    "id": 41828,
                    "nodeType": "Block",
                    "src": "36868:230:72",
                    "statements": [
                      {
                        "expression": {
                          "id": 41826,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 41811,
                                "name": "stakerStrategyList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42369,
                                "src": "36953:18:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$43971_$dyn_storage_$",
                                  "typeString": "mapping(address => contract IStrategy[] storage ref)"
                                }
                              },
                              "id": 41814,
                              "indexExpression": {
                                "id": 41812,
                                "name": "depositor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41796,
                                "src": "36972:9:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "36953:29:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_storage",
                                "typeString": "contract IStrategy[] storage ref"
                              }
                            },
                            "id": 41815,
                            "indexExpression": {
                              "id": 41813,
                              "name": "strategyIndex",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41798,
                              "src": "36983:13:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "36953:44:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$43971",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 41816,
                                "name": "stakerStrategyList",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42369,
                                "src": "37016:18:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$43971_$dyn_storage_$",
                                  "typeString": "mapping(address => contract IStrategy[] storage ref)"
                                }
                              },
                              "id": 41818,
                              "indexExpression": {
                                "id": 41817,
                                "name": "depositor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41796,
                                "src": "37035:9:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "37016:29:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_storage",
                                "typeString": "contract IStrategy[] storage ref"
                              }
                            },
                            "id": 41825,
                            "indexExpression": {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 41824,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "baseExpression": {
                                    "id": 41819,
                                    "name": "stakerStrategyList",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 42369,
                                    "src": "37046:18:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$43971_$dyn_storage_$",
                                      "typeString": "mapping(address => contract IStrategy[] storage ref)"
                                    }
                                  },
                                  "id": 41821,
                                  "indexExpression": {
                                    "id": 41820,
                                    "name": "depositor",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 41796,
                                    "src": "37065:9:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "37046:29:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_storage",
                                    "typeString": "contract IStrategy[] storage ref"
                                  }
                                },
                                "id": 41822,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "37046:36:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "-",
                              "rightExpression": {
                                "hexValue": "31",
                                "id": 41823,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": true,
                                "kind": "number",
                                "lValueRequested": false,
                                "nodeType": "Literal",
                                "src": "37085:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_rational_1_by_1",
                                  "typeString": "int_const 1"
                                },
                                "value": "1"
                              },
                              "src": "37046:40:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "37016:71:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$43971",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "src": "36953:134:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_contract$_IStrategy_$43971",
                            "typeString": "contract IStrategy"
                          }
                        },
                        "id": 41827,
                        "nodeType": "ExpressionStatement",
                        "src": "36953:134:72"
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [],
                    "expression": {
                      "argumentTypes": [],
                      "expression": {
                        "baseExpression": {
                          "id": 41885,
                          "name": "stakerStrategyList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42369,
                          "src": "37982:18:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$43971_$dyn_storage_$",
                            "typeString": "mapping(address => contract IStrategy[] storage ref)"
                          }
                        },
                        "id": 41887,
                        "indexExpression": {
                          "id": 41886,
                          "name": "depositor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41796,
                          "src": "38001:9:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "37982:29:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_storage",
                          "typeString": "contract IStrategy[] storage ref"
                        }
                      },
                      "id": 41888,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "pop",
                      "nodeType": "MemberAccess",
                      "src": "37982:33:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_arraypop_nonpayable$_t_array$_t_contract$_IStrategy_$43971_$dyn_storage_ptr_$returns$__$bound_to$_t_array$_t_contract$_IStrategy_$43971_$dyn_storage_ptr_$",
                        "typeString": "function (contract IStrategy[] storage pointer)"
                      }
                    },
                    "id": 41889,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "37982:35:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41890,
                  "nodeType": "ExpressionStatement",
                  "src": "37982:35:72"
                }
              ]
            },
            "documentation": {
              "id": 41794,
              "nodeType": "StructuredDocumentation",
              "src": "36274:331:72",
              "text": " @notice Removes `strategy` from `depositor`'s dynamic array of strategies, i.e. from `stakerStrategyList[depositor]`\n @dev the provided `strategyIndex` input is optimistically used to find the strategy quickly in the list. If the specified\n index is incorrect, then we revert to a brute-force search."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_removeStrategyFromStakerStrategyList",
            "nameLocation": "36619:37:72",
            "parameters": {
              "id": 41802,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41796,
                  "mutability": "mutable",
                  "name": "depositor",
                  "nameLocation": "36665:9:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41892,
                  "src": "36657:17:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 41795,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "36657:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41798,
                  "mutability": "mutable",
                  "name": "strategyIndex",
                  "nameLocation": "36684:13:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41892,
                  "src": "36676:21:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41797,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "36676:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41801,
                  "mutability": "mutable",
                  "name": "strategy",
                  "nameLocation": "36709:8:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 41892,
                  "src": "36699:18:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IStrategy_$43971",
                    "typeString": "contract IStrategy"
                  },
                  "typeName": {
                    "id": 41800,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41799,
                      "name": "IStrategy",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43971,
                      "src": "36699:9:72"
                    },
                    "referencedDeclaration": 43971,
                    "src": "36699:9:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IStrategy_$43971",
                      "typeString": "contract IStrategy"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "36656:62:72"
            },
            "returnParameters": {
              "id": 41803,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "36728:0:72"
            },
            "scope": 42304,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 42078,
            "nodeType": "FunctionDefinition",
            "src": "38125:3183:72",
            "nodes": [],
            "body": {
              "id": 42077,
              "nodeType": "Block",
              "src": "38340:2968:72",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    41912
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41912,
                      "mutability": "mutable",
                      "name": "withdrawalRoot",
                      "nameLocation": "38393:14:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 42077,
                      "src": "38385:22:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bytes32",
                        "typeString": "bytes32"
                      },
                      "typeName": {
                        "id": 41911,
                        "name": "bytes32",
                        "nodeType": "ElementaryTypeName",
                        "src": "38385:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41916,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 41914,
                        "name": "queuedWithdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41896,
                        "src": "38434:16:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                          "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                          "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                        }
                      ],
                      "id": 41913,
                      "name": "calculateWithdrawalRoot",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42303,
                      "src": "38410:23:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_internal_pure$_t_struct$_QueuedWithdrawal_$43999_memory_ptr_$returns$_t_bytes32_$",
                        "typeString": "function (struct IStrategyManager.QueuedWithdrawal memory) pure returns (bytes32)"
                      }
                    },
                    "id": 41915,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "38410:41:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "38385:66:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "baseExpression": {
                          "id": 41918,
                          "name": "withdrawalRootPending",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42374,
                          "src": "38539:21:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                            "typeString": "mapping(bytes32 => bool)"
                          }
                        },
                        "id": 41920,
                        "indexExpression": {
                          "id": 41919,
                          "name": "withdrawalRoot",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41912,
                          "src": "38561:14:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bytes32",
                            "typeString": "bytes32"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "38539:37:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e636f6d706c6574655175657565645769746864726177616c3a207769746864726177616c206973206e6f742070656e64696e67",
                        "id": 41921,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "38590:69:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_286aaff90341c700b352f98505c3174e6398c6976b4e50906153e17db8893bee",
                          "typeString": "literal_string \"StrategyManager.completeQueuedWithdrawal: withdrawal is not pending\""
                        },
                        "value": "StrategyManager.completeQueuedWithdrawal: withdrawal is not pending"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_286aaff90341c700b352f98505c3174e6398c6976b4e50906153e17db8893bee",
                          "typeString": "literal_string \"StrategyManager.completeQueuedWithdrawal: withdrawal is not pending\""
                        }
                      ],
                      "id": 41917,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "38518:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 41922,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "38518:151:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41923,
                  "nodeType": "ExpressionStatement",
                  "src": "38518:151:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "arguments": [
                          {
                            "expression": {
                              "id": 41927,
                              "name": "queuedWithdrawal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41896,
                              "src": "38721:16:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                                "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                              }
                            },
                            "id": 41928,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "delegatedAddress",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43998,
                            "src": "38721:33:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            }
                          },
                          {
                            "expression": {
                              "id": 41929,
                              "name": "queuedWithdrawal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41896,
                              "src": "38756:16:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                                "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                              }
                            },
                            "id": 41930,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawalStartBlock",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43996,
                            "src": "38756:37:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            }
                          },
                          {
                            "id": 41931,
                            "name": "middlewareTimesIndex",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41902,
                            "src": "38795:20:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_address",
                              "typeString": "address"
                            },
                            {
                              "typeIdentifier": "t_uint32",
                              "typeString": "uint32"
                            },
                            {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          ],
                          "expression": {
                            "id": 41925,
                            "name": "slasher",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42345,
                            "src": "38701:7:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_ISlasher_$43877",
                              "typeString": "contract ISlasher"
                            }
                          },
                          "id": 41926,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "canWithdraw",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43815,
                          "src": "38701:19:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_uint32_$_t_uint256_$returns$_t_bool_$",
                            "typeString": "function (address,uint32,uint256) external returns (bool)"
                          }
                        },
                        "id": 41932,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "38701:115:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e636f6d706c6574655175657565645769746864726177616c3a207368617265732070656e64696e67207769746864726177616c20617265207374696c6c20736c61736861626c65",
                        "id": 41933,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "38830:89:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_92ac8dc9cc18d8aff0a54b72e7fd6b341ba462c685674a2b8e80fadee2421578",
                          "typeString": "literal_string \"StrategyManager.completeQueuedWithdrawal: shares pending withdrawal are still slashable\""
                        },
                        "value": "StrategyManager.completeQueuedWithdrawal: shares pending withdrawal are still slashable"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_92ac8dc9cc18d8aff0a54b72e7fd6b341ba462c685674a2b8e80fadee2421578",
                          "typeString": "literal_string \"StrategyManager.completeQueuedWithdrawal: shares pending withdrawal are still slashable\""
                        }
                      ],
                      "id": 41924,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "38680:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 41934,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "38680:249:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41935,
                  "nodeType": "ExpressionStatement",
                  "src": "38680:249:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        "id": 41950,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 41943,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "commonType": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            },
                            "id": 41940,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "leftExpression": {
                              "expression": {
                                "id": 41937,
                                "name": "queuedWithdrawal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41896,
                                "src": "39079:16:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                                  "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                                }
                              },
                              "id": 41938,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "withdrawalStartBlock",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43996,
                              "src": "39079:37:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint32",
                                "typeString": "uint32"
                              }
                            },
                            "nodeType": "BinaryOperation",
                            "operator": "+",
                            "rightExpression": {
                              "id": 41939,
                              "name": "withdrawalDelayBlocks",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42351,
                              "src": "39119:21:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "src": "39079:61:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<=",
                          "rightExpression": {
                            "expression": {
                              "id": 41941,
                              "name": "block",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": -4,
                              "src": "39144:5:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_magic_block",
                                "typeString": "block"
                              }
                            },
                            "id": 41942,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "number",
                            "nodeType": "MemberAccess",
                            "src": "39144:12:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "39079:77:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "||",
                        "rightExpression": {
                          "commonType": {
                            "typeIdentifier": "t_contract$_IStrategy_$43971",
                            "typeString": "contract IStrategy"
                          },
                          "id": 41949,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "baseExpression": {
                              "expression": {
                                "id": 41944,
                                "name": "queuedWithdrawal",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 41896,
                                "src": "39177:16:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                                  "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                                }
                              },
                              "id": 41945,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "memberName": "strategies",
                              "nodeType": "MemberAccess",
                              "referencedDeclaration": 43986,
                              "src": "39177:27:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                                "typeString": "contract IStrategy[] calldata"
                              }
                            },
                            "id": 41947,
                            "indexExpression": {
                              "hexValue": "30",
                              "id": 41946,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "number",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "39205:1:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_rational_0_by_1",
                                "typeString": "int_const 0"
                              },
                              "value": "0"
                            },
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "39177:30:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$43971",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "==",
                          "rightExpression": {
                            "id": 41948,
                            "name": "beaconChainETHStrategy",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42395,
                            "src": "39211:22:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_contract$_IStrategy_$43971",
                              "typeString": "contract IStrategy"
                            }
                          },
                          "src": "39177:56:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "src": "39079:154:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e636f6d706c6574655175657565645769746864726177616c3a207769746864726177616c44656c6179426c6f636b7320706572696f6420686173206e6f742079657420706173736564",
                        "id": 41951,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "39247:91:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_eb53514ab18ec36c50c8cb56ce8bd2b5c16fe1605fe386ba572c8c44a468c981",
                          "typeString": "literal_string \"StrategyManager.completeQueuedWithdrawal: withdrawalDelayBlocks period has not yet passed\""
                        },
                        "value": "StrategyManager.completeQueuedWithdrawal: withdrawalDelayBlocks period has not yet passed"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_eb53514ab18ec36c50c8cb56ce8bd2b5c16fe1605fe386ba572c8c44a468c981",
                          "typeString": "literal_string \"StrategyManager.completeQueuedWithdrawal: withdrawalDelayBlocks period has not yet passed\""
                        }
                      ],
                      "id": 41936,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "39071:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 41952,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "39071:277:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41953,
                  "nodeType": "ExpressionStatement",
                  "src": "39071:277:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        "id": 41960,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "id": 41955,
                            "name": "msg",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": -15,
                            "src": "39380:3:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_magic_message",
                              "typeString": "msg"
                            }
                          },
                          "id": 41956,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "sender",
                          "nodeType": "MemberAccess",
                          "src": "39380:10:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "expression": {
                            "expression": {
                              "id": 41957,
                              "name": "queuedWithdrawal",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 41896,
                              "src": "39394:16:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                                "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                              }
                            },
                            "id": 41958,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "lValueRequested": false,
                            "memberName": "withdrawerAndNonce",
                            "nodeType": "MemberAccess",
                            "referencedDeclaration": 43994,
                            "src": "39394:35:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_WithdrawerAndNonce_$43982_calldata_ptr",
                              "typeString": "struct IStrategyManager.WithdrawerAndNonce calldata"
                            }
                          },
                          "id": 41959,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawer",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43979,
                          "src": "39394:46:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "src": "39380:60:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e636f6d706c6574655175657565645769746864726177616c3a206f6e6c792073706563696669656420776974686472617765722063616e20636f6d706c657465206120717565756564207769746864726177616c",
                        "id": 41961,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "39454:102:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_54592613d689205043a047a8ea5b245f6b7204b264336f09aeb4027bbc98459a",
                          "typeString": "literal_string \"StrategyManager.completeQueuedWithdrawal: only specified withdrawer can complete a queued withdrawal\""
                        },
                        "value": "StrategyManager.completeQueuedWithdrawal: only specified withdrawer can complete a queued withdrawal"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_54592613d689205043a047a8ea5b245f6b7204b264336f09aeb4027bbc98459a",
                          "typeString": "literal_string \"StrategyManager.completeQueuedWithdrawal: only specified withdrawer can complete a queued withdrawal\""
                        }
                      ],
                      "id": 41954,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "39359:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 41962,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "39359:207:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 41963,
                  "nodeType": "ExpressionStatement",
                  "src": "39359:207:72"
                },
                {
                  "expression": {
                    "id": 41968,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "baseExpression": {
                        "id": 41964,
                        "name": "withdrawalRootPending",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42374,
                        "src": "39644:21:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_bytes32_$_t_bool_$",
                          "typeString": "mapping(bytes32 => bool)"
                        }
                      },
                      "id": 41966,
                      "indexExpression": {
                        "id": 41965,
                        "name": "withdrawalRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41912,
                        "src": "39666:14:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "nodeType": "IndexAccess",
                      "src": "39644:37:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "hexValue": "66616c7365",
                      "id": 41967,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "bool",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "39684:5:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_bool",
                        "typeString": "bool"
                      },
                      "value": "false"
                    },
                    "src": "39644:45:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 41969,
                  "nodeType": "ExpressionStatement",
                  "src": "39644:45:72"
                },
                {
                  "assignments": [
                    41971
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 41971,
                      "mutability": "mutable",
                      "name": "strategiesLength",
                      "nameLocation": "39748:16:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 42077,
                      "src": "39740:24:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 41970,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "39740:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 41975,
                  "initialValue": {
                    "expression": {
                      "expression": {
                        "id": 41972,
                        "name": "queuedWithdrawal",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41896,
                        "src": "39767:16:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                          "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                        }
                      },
                      "id": 41973,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "strategies",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43986,
                      "src": "39767:27:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                        "typeString": "contract IStrategy[] calldata"
                      }
                    },
                    "id": 41974,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "39767:34:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "39740:61:72"
                },
                {
                  "condition": {
                    "id": 41976,
                    "name": "receiveAsTokens",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 41904,
                    "src": "39913:15:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "falseBody": {
                    "id": 42064,
                    "nodeType": "Block",
                    "src": "40874:295:72",
                    "statements": [
                      {
                        "body": {
                          "id": 42062,
                          "nodeType": "Block",
                          "src": "40973:186:72",
                          "statements": [
                            {
                              "expression": {
                                "arguments": [
                                  {
                                    "expression": {
                                      "id": 42046,
                                      "name": "msg",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": -15,
                                      "src": "41002:3:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_magic_message",
                                        "typeString": "msg"
                                      }
                                    },
                                    "id": 42047,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "sender",
                                    "nodeType": "MemberAccess",
                                    "src": "41002:10:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 42048,
                                        "name": "queuedWithdrawal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 41896,
                                        "src": "41014:16:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                                          "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                                        }
                                      },
                                      "id": 42049,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "strategies",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 43986,
                                      "src": "41014:27:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                                        "typeString": "contract IStrategy[] calldata"
                                      }
                                    },
                                    "id": 42051,
                                    "indexExpression": {
                                      "id": 42050,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 42039,
                                      "src": "41042:1:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "41014:30:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_contract$_IStrategy_$43971",
                                      "typeString": "contract IStrategy"
                                    }
                                  },
                                  {
                                    "baseExpression": {
                                      "expression": {
                                        "id": 42052,
                                        "name": "queuedWithdrawal",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 41896,
                                        "src": "41046:16:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                                          "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                                        }
                                      },
                                      "id": 42053,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "memberName": "shares",
                                      "nodeType": "MemberAccess",
                                      "referencedDeclaration": 43989,
                                      "src": "41046:23:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                        "typeString": "uint256[] calldata"
                                      }
                                    },
                                    "id": 42055,
                                    "indexExpression": {
                                      "id": 42054,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 42039,
                                      "src": "41070:1:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "IndexAccess",
                                    "src": "41046:26:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  }
                                ],
                                "expression": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    },
                                    {
                                      "typeIdentifier": "t_contract$_IStrategy_$43971",
                                      "typeString": "contract IStrategy"
                                    },
                                    {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  ],
                                  "id": 42045,
                                  "name": "_addShares",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41660,
                                  "src": "40991:10:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_contract$_IStrategy_$43971_$_t_uint256_$returns$__$",
                                    "typeString": "function (address,contract IStrategy,uint256)"
                                  }
                                },
                                "id": 42056,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "kind": "functionCall",
                                "lValueRequested": false,
                                "names": [],
                                "nodeType": "FunctionCall",
                                "src": "40991:82:72",
                                "tryCall": false,
                                "typeDescriptions": {
                                  "typeIdentifier": "t_tuple$__$",
                                  "typeString": "tuple()"
                                }
                              },
                              "id": 42057,
                              "nodeType": "ExpressionStatement",
                              "src": "40991:82:72"
                            },
                            {
                              "id": 42061,
                              "nodeType": "UncheckedBlock",
                              "src": "41091:54:72",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 42059,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "41123:3:72",
                                    "subExpression": {
                                      "id": 42058,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 42039,
                                      "src": "41125:1:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 42060,
                                  "nodeType": "ExpressionStatement",
                                  "src": "41123:3:72"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 42044,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 42042,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42039,
                            "src": "40950:1:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 42043,
                            "name": "strategiesLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41971,
                            "src": "40954:16:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "40950:20:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 42063,
                        "initializationExpression": {
                          "assignments": [
                            42039
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 42039,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "40943:1:72",
                              "nodeType": "VariableDeclaration",
                              "scope": 42063,
                              "src": "40935:9:72",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 42038,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "40935:7:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 42041,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 42040,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "40947:1:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "40935:13:72"
                        },
                        "nodeType": "ForStatement",
                        "src": "40930:229:72"
                      }
                    ]
                  },
                  "id": 42065,
                  "nodeType": "IfStatement",
                  "src": "39909:1260:72",
                  "trueBody": {
                    "id": 42037,
                    "nodeType": "Block",
                    "src": "39930:938:72",
                    "statements": [
                      {
                        "expression": {
                          "arguments": [
                            {
                              "commonType": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "id": 41983,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "leftExpression": {
                                "expression": {
                                  "id": 41978,
                                  "name": "tokens",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 41900,
                                  "src": "39952:6:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IERC20_$31889_$dyn_calldata_ptr",
                                    "typeString": "contract IERC20[] calldata"
                                  }
                                },
                                "id": 41979,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "39952:13:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "nodeType": "BinaryOperation",
                              "operator": "==",
                              "rightExpression": {
                                "expression": {
                                  "expression": {
                                    "id": 41980,
                                    "name": "queuedWithdrawal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 41896,
                                    "src": "39969:16:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                                      "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                                    }
                                  },
                                  "id": 41981,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "memberName": "strategies",
                                  "nodeType": "MemberAccess",
                                  "referencedDeclaration": 43986,
                                  "src": "39969:27:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                                    "typeString": "contract IStrategy[] calldata"
                                  }
                                },
                                "id": 41982,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "length",
                                "nodeType": "MemberAccess",
                                "src": "39969:34:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "src": "39952:51:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              }
                            },
                            {
                              "hexValue": "53747261746567794d616e616765722e636f6d706c6574655175657565645769746864726177616c3a20696e707574206c656e677468206d69736d61746368",
                              "id": 41984,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "kind": "string",
                              "lValueRequested": false,
                              "nodeType": "Literal",
                              "src": "40005:65:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_stringliteral_e9f4a9d64c475fcf42585dd723807cf68a7da8fd45164847d9926159703c921c",
                                "typeString": "literal_string \"StrategyManager.completeQueuedWithdrawal: input length mismatch\""
                              },
                              "value": "StrategyManager.completeQueuedWithdrawal: input length mismatch"
                            }
                          ],
                          "expression": {
                            "argumentTypes": [
                              {
                                "typeIdentifier": "t_bool",
                                "typeString": "bool"
                              },
                              {
                                "typeIdentifier": "t_stringliteral_e9f4a9d64c475fcf42585dd723807cf68a7da8fd45164847d9926159703c921c",
                                "typeString": "literal_string \"StrategyManager.completeQueuedWithdrawal: input length mismatch\""
                              }
                            ],
                            "id": 41977,
                            "name": "require",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [
                              -18,
                              -18
                            ],
                            "referencedDeclaration": -18,
                            "src": "39944:7:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                              "typeString": "function (bool,string memory) pure"
                            }
                          },
                          "id": 41985,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "kind": "functionCall",
                          "lValueRequested": false,
                          "names": [],
                          "nodeType": "FunctionCall",
                          "src": "39944:127:72",
                          "tryCall": false,
                          "typeDescriptions": {
                            "typeIdentifier": "t_tuple$__$",
                            "typeString": "tuple()"
                          }
                        },
                        "id": 41986,
                        "nodeType": "ExpressionStatement",
                        "src": "39944:127:72"
                      },
                      {
                        "body": {
                          "id": 42035,
                          "nodeType": "Block",
                          "src": "40171:687:72",
                          "statements": [
                            {
                              "condition": {
                                "commonType": {
                                  "typeIdentifier": "t_contract$_IStrategy_$43971",
                                  "typeString": "contract IStrategy"
                                },
                                "id": 41999,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftExpression": {
                                  "baseExpression": {
                                    "expression": {
                                      "id": 41994,
                                      "name": "queuedWithdrawal",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41896,
                                      "src": "40193:16:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                                        "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                                      }
                                    },
                                    "id": 41995,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "memberName": "strategies",
                                    "nodeType": "MemberAccess",
                                    "referencedDeclaration": 43986,
                                    "src": "40193:27:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                                      "typeString": "contract IStrategy[] calldata"
                                    }
                                  },
                                  "id": 41997,
                                  "indexExpression": {
                                    "id": 41996,
                                    "name": "i",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 41988,
                                    "src": "40221:1:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "IndexAccess",
                                  "src": "40193:30:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$43971",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "nodeType": "BinaryOperation",
                                "operator": "==",
                                "rightExpression": {
                                  "id": 41998,
                                  "name": "beaconChainETHStrategy",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42395,
                                  "src": "40227:22:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_contract$_IStrategy_$43971",
                                    "typeString": "contract IStrategy"
                                  }
                                },
                                "src": "40193:56:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_bool",
                                  "typeString": "bool"
                                }
                              },
                              "falseBody": {
                                "id": 42029,
                                "nodeType": "Block",
                                "src": "40498:275:72",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 42018,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "40683:3:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 42019,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "40683:10:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "baseExpression": {
                                            "id": 42020,
                                            "name": "tokens",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 41900,
                                            "src": "40695:6:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_contract$_IERC20_$31889_$dyn_calldata_ptr",
                                              "typeString": "contract IERC20[] calldata"
                                            }
                                          },
                                          "id": 42022,
                                          "indexExpression": {
                                            "id": 42021,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 41988,
                                            "src": "40702:1:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "40695:9:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IERC20_$31889",
                                            "typeString": "contract IERC20"
                                          }
                                        },
                                        {
                                          "baseExpression": {
                                            "expression": {
                                              "id": 42023,
                                              "name": "queuedWithdrawal",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 41896,
                                              "src": "40706:16:72",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                                                "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                                              }
                                            },
                                            "id": 42024,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "shares",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 43989,
                                            "src": "40706:23:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                              "typeString": "uint256[] calldata"
                                            }
                                          },
                                          "id": 42026,
                                          "indexExpression": {
                                            "id": 42025,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 41988,
                                            "src": "40730:1:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "40706:26:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_contract$_IERC20_$31889",
                                            "typeString": "contract IERC20"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "expression": {
                                          "baseExpression": {
                                            "expression": {
                                              "id": 42012,
                                              "name": "queuedWithdrawal",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 41896,
                                              "src": "40618:16:72",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                                                "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                                              }
                                            },
                                            "id": 42015,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "strategies",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 43986,
                                            "src": "40618:27:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_calldata_ptr",
                                              "typeString": "contract IStrategy[] calldata"
                                            }
                                          },
                                          "id": 42016,
                                          "indexExpression": {
                                            "id": 42014,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 41988,
                                            "src": "40646:1:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "40618:30:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_contract$_IStrategy_$43971",
                                            "typeString": "contract IStrategy"
                                          }
                                        },
                                        "id": 42017,
                                        "isConstant": false,
                                        "isLValue": false,
                                        "isPure": false,
                                        "lValueRequested": false,
                                        "memberName": "withdraw",
                                        "nodeType": "MemberAccess",
                                        "referencedDeclaration": 43903,
                                        "src": "40618:39:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_contract$_IERC20_$31889_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,contract IERC20,uint256) external"
                                        }
                                      },
                                      "id": 42027,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "40618:136:72",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 42028,
                                    "nodeType": "ExpressionStatement",
                                    "src": "40618:136:72"
                                  }
                                ]
                              },
                              "id": 42030,
                              "nodeType": "IfStatement",
                              "src": "40189:584:72",
                              "trueBody": {
                                "id": 42011,
                                "nodeType": "Block",
                                "src": "40251:241:72",
                                "statements": [
                                  {
                                    "expression": {
                                      "arguments": [
                                        {
                                          "expression": {
                                            "id": 42001,
                                            "name": "queuedWithdrawal",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 41896,
                                            "src": "40406:16:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                                              "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                                            }
                                          },
                                          "id": 42002,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "depositor",
                                          "nodeType": "MemberAccess",
                                          "referencedDeclaration": 43991,
                                          "src": "40406:26:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "expression": {
                                            "id": 42003,
                                            "name": "msg",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": -15,
                                            "src": "40434:3:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_magic_message",
                                              "typeString": "msg"
                                            }
                                          },
                                          "id": 42004,
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "memberName": "sender",
                                          "nodeType": "MemberAccess",
                                          "src": "40434:10:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          }
                                        },
                                        {
                                          "baseExpression": {
                                            "expression": {
                                              "id": 42005,
                                              "name": "queuedWithdrawal",
                                              "nodeType": "Identifier",
                                              "overloadedDeclarations": [],
                                              "referencedDeclaration": 41896,
                                              "src": "40446:16:72",
                                              "typeDescriptions": {
                                                "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                                                "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                                              }
                                            },
                                            "id": 42006,
                                            "isConstant": false,
                                            "isLValue": false,
                                            "isPure": false,
                                            "lValueRequested": false,
                                            "memberName": "shares",
                                            "nodeType": "MemberAccess",
                                            "referencedDeclaration": 43989,
                                            "src": "40446:23:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_array$_t_uint256_$dyn_calldata_ptr",
                                              "typeString": "uint256[] calldata"
                                            }
                                          },
                                          "id": 42008,
                                          "indexExpression": {
                                            "id": 42007,
                                            "name": "i",
                                            "nodeType": "Identifier",
                                            "overloadedDeclarations": [],
                                            "referencedDeclaration": 41988,
                                            "src": "40470:1:72",
                                            "typeDescriptions": {
                                              "typeIdentifier": "t_uint256",
                                              "typeString": "uint256"
                                            }
                                          },
                                          "isConstant": false,
                                          "isLValue": false,
                                          "isPure": false,
                                          "lValueRequested": false,
                                          "nodeType": "IndexAccess",
                                          "src": "40446:26:72",
                                          "typeDescriptions": {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        }
                                      ],
                                      "expression": {
                                        "argumentTypes": [
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_address",
                                            "typeString": "address"
                                          },
                                          {
                                            "typeIdentifier": "t_uint256",
                                            "typeString": "uint256"
                                          }
                                        ],
                                        "id": 42000,
                                        "name": "_withdrawBeaconChainETH",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 42156,
                                        "src": "40382:23:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_function_internal_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                                          "typeString": "function (address,address,uint256)"
                                        }
                                      },
                                      "id": 42009,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "kind": "functionCall",
                                      "lValueRequested": false,
                                      "names": [],
                                      "nodeType": "FunctionCall",
                                      "src": "40382:91:72",
                                      "tryCall": false,
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_tuple$__$",
                                        "typeString": "tuple()"
                                      }
                                    },
                                    "id": 42010,
                                    "nodeType": "ExpressionStatement",
                                    "src": "40382:91:72"
                                  }
                                ]
                              }
                            },
                            {
                              "id": 42034,
                              "nodeType": "UncheckedBlock",
                              "src": "40790:54:72",
                              "statements": [
                                {
                                  "expression": {
                                    "id": 42032,
                                    "isConstant": false,
                                    "isLValue": false,
                                    "isPure": false,
                                    "lValueRequested": false,
                                    "nodeType": "UnaryOperation",
                                    "operator": "++",
                                    "prefix": true,
                                    "src": "40822:3:72",
                                    "subExpression": {
                                      "id": 42031,
                                      "name": "i",
                                      "nodeType": "Identifier",
                                      "overloadedDeclarations": [],
                                      "referencedDeclaration": 41988,
                                      "src": "40824:1:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    },
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_uint256",
                                      "typeString": "uint256"
                                    }
                                  },
                                  "id": 42033,
                                  "nodeType": "ExpressionStatement",
                                  "src": "40822:3:72"
                                }
                              ]
                            }
                          ]
                        },
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 41993,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 41991,
                            "name": "i",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41988,
                            "src": "40148:1:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": "<",
                          "rightExpression": {
                            "id": 41992,
                            "name": "strategiesLength",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41971,
                            "src": "40152:16:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "40148:20:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "id": 42036,
                        "initializationExpression": {
                          "assignments": [
                            41988
                          ],
                          "declarations": [
                            {
                              "constant": false,
                              "id": 41988,
                              "mutability": "mutable",
                              "name": "i",
                              "nameLocation": "40141:1:72",
                              "nodeType": "VariableDeclaration",
                              "scope": 42036,
                              "src": "40133:9:72",
                              "stateVariable": false,
                              "storageLocation": "default",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              },
                              "typeName": {
                                "id": 41987,
                                "name": "uint256",
                                "nodeType": "ElementaryTypeName",
                                "src": "40133:7:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "visibility": "internal"
                            }
                          ],
                          "id": 41990,
                          "initialValue": {
                            "hexValue": "30",
                            "id": 41989,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": true,
                            "kind": "number",
                            "lValueRequested": false,
                            "nodeType": "Literal",
                            "src": "40145:1:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_rational_0_by_1",
                              "typeString": "int_const 0"
                            },
                            "value": "0"
                          },
                          "nodeType": "VariableDeclarationStatement",
                          "src": "40133:13:72"
                        },
                        "nodeType": "ForStatement",
                        "src": "40128:730:72"
                      }
                    ]
                  }
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "expression": {
                          "id": 42067,
                          "name": "queuedWithdrawal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 41896,
                          "src": "41203:16:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                            "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                          }
                        },
                        "id": 42068,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "depositor",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43991,
                        "src": "41203:26:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "expression": {
                          "expression": {
                            "id": 42069,
                            "name": "queuedWithdrawal",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 41896,
                            "src": "41231:16:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                              "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                            }
                          },
                          "id": 42070,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "withdrawerAndNonce",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 43994,
                          "src": "41231:35:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_struct$_WithdrawerAndNonce_$43982_calldata_ptr",
                            "typeString": "struct IStrategyManager.WithdrawerAndNonce calldata"
                          }
                        },
                        "id": 42071,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "nonce",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 43981,
                        "src": "41231:41:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        }
                      },
                      {
                        "expression": {
                          "id": 42072,
                          "name": "msg",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -15,
                          "src": "41274:3:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_magic_message",
                            "typeString": "msg"
                          }
                        },
                        "id": 42073,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sender",
                        "nodeType": "MemberAccess",
                        "src": "41274:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42074,
                        "name": "withdrawalRoot",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 41912,
                        "src": "41286:14:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint96",
                          "typeString": "uint96"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      ],
                      "id": 42066,
                      "name": "WithdrawalCompleted",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40396,
                      "src": "41183:19:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_uint96_$_t_address_$_t_bytes32_$returns$__$",
                        "typeString": "function (address,uint96,address,bytes32)"
                      }
                    },
                    "id": 42075,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "41183:118:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42076,
                  "nodeType": "EmitStatement",
                  "src": "41178:123:72"
                }
              ]
            },
            "documentation": {
              "id": 41893,
              "nodeType": "StructuredDocumentation",
              "src": "38030:90:72",
              "text": " @notice Internal function for completeing the given `queuedWithdrawal`."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [
              {
                "arguments": [
                  {
                    "expression": {
                      "id": 41907,
                      "name": "queuedWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 41896,
                      "src": "38296:16:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                        "typeString": "struct IStrategyManager.QueuedWithdrawal calldata"
                      }
                    },
                    "id": 41908,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "delegatedAddress",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 43998,
                    "src": "38296:33:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  }
                ],
                "id": 41909,
                "kind": "modifierInvocation",
                "modifierName": {
                  "id": 41906,
                  "name": "onlyNotFrozen",
                  "nodeType": "IdentifierPath",
                  "referencedDeclaration": 40437,
                  "src": "38282:13:72"
                },
                "nodeType": "ModifierInvocation",
                "src": "38282:48:72"
              }
            ],
            "name": "_completeQueuedWithdrawal",
            "nameLocation": "38134:25:72",
            "parameters": {
              "id": 41905,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 41896,
                  "mutability": "mutable",
                  "name": "queuedWithdrawal",
                  "nameLocation": "38186:16:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 42078,
                  "src": "38160:42:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_calldata_ptr",
                    "typeString": "struct IStrategyManager.QueuedWithdrawal"
                  },
                  "typeName": {
                    "id": 41895,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 41894,
                      "name": "QueuedWithdrawal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43999,
                      "src": "38160:16:72"
                    },
                    "referencedDeclaration": 43999,
                    "src": "38160:16:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_storage_ptr",
                      "typeString": "struct IStrategyManager.QueuedWithdrawal"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41900,
                  "mutability": "mutable",
                  "name": "tokens",
                  "nameLocation": "38222:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 42078,
                  "src": "38204:24:72",
                  "stateVariable": false,
                  "storageLocation": "calldata",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IERC20_$31889_$dyn_calldata_ptr",
                    "typeString": "contract IERC20[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 41898,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 41897,
                        "name": "IERC20",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 31889,
                        "src": "38204:6:72"
                      },
                      "referencedDeclaration": 31889,
                      "src": "38204:6:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IERC20_$31889",
                        "typeString": "contract IERC20"
                      }
                    },
                    "id": 41899,
                    "nodeType": "ArrayTypeName",
                    "src": "38204:8:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IERC20_$31889_$dyn_storage_ptr",
                      "typeString": "contract IERC20[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41902,
                  "mutability": "mutable",
                  "name": "middlewareTimesIndex",
                  "nameLocation": "38238:20:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 42078,
                  "src": "38230:28:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 41901,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "38230:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 41904,
                  "mutability": "mutable",
                  "name": "receiveAsTokens",
                  "nameLocation": "38265:15:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 42078,
                  "src": "38260:20:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bool",
                    "typeString": "bool"
                  },
                  "typeName": {
                    "id": 41903,
                    "name": "bool",
                    "nodeType": "ElementaryTypeName",
                    "src": "38260:4:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "38159:122:72"
            },
            "returnParameters": {
              "id": 41910,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "38340:0:72"
            },
            "scope": 42304,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 42101,
            "nodeType": "FunctionDefinition",
            "src": "41544:220:72",
            "nodes": [],
            "body": {
              "id": 42100,
              "nodeType": "Block",
              "src": "41593:171:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 42090,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "expression": {
                            "baseExpression": {
                              "id": 42085,
                              "name": "stakerStrategyList",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42369,
                              "src": "41611:18:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$43971_$dyn_storage_$",
                                "typeString": "mapping(address => contract IStrategy[] storage ref)"
                              }
                            },
                            "id": 42087,
                            "indexExpression": {
                              "id": 42086,
                              "name": "depositor",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42081,
                              "src": "41630:9:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_address",
                                "typeString": "address"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "41611:29:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_storage",
                              "typeString": "contract IStrategy[] storage ref"
                            }
                          },
                          "id": 42088,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "length",
                          "nodeType": "MemberAccess",
                          "src": "41611:36:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "==",
                        "rightExpression": {
                          "hexValue": "30",
                          "id": 42089,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "41651:1:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_0_by_1",
                            "typeString": "int_const 0"
                          },
                          "value": "0"
                        },
                        "src": "41611:41:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e5f756e64656c65676174653a206465706f7369746f722068617320616374697665206465706f73697473",
                        "id": 42091,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "41654:60:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_6a2e333abae2b6c4206fc08ad4dd48035513944ed498919185693d32566a192b",
                          "typeString": "literal_string \"StrategyManager._undelegate: depositor has active deposits\""
                        },
                        "value": "StrategyManager._undelegate: depositor has active deposits"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_6a2e333abae2b6c4206fc08ad4dd48035513944ed498919185693d32566a192b",
                          "typeString": "literal_string \"StrategyManager._undelegate: depositor has active deposits\""
                        }
                      ],
                      "id": 42084,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "41603:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 42092,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "41603:112:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42093,
                  "nodeType": "ExpressionStatement",
                  "src": "41603:112:72"
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42097,
                        "name": "depositor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42081,
                        "src": "41747:9:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "expression": {
                        "id": 42094,
                        "name": "delegation",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42339,
                        "src": "41725:10:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IDelegationManager_$42848",
                          "typeString": "contract IDelegationManager"
                        }
                      },
                      "id": 42096,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "undelegate",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 42771,
                      "src": "41725:21:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$returns$__$",
                        "typeString": "function (address) external"
                      }
                    },
                    "id": 42098,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "41725:32:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42099,
                  "nodeType": "ExpressionStatement",
                  "src": "41725:32:72"
                }
              ]
            },
            "documentation": {
              "id": 42079,
              "nodeType": "StructuredDocumentation",
              "src": "41314:225:72",
              "text": " @notice If the `depositor` has no existing shares, then they can `undelegate` themselves.\n This allows people a \"hard reset\" in their relationship with EigenLayer after withdrawing all of their stake."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_undelegate",
            "nameLocation": "41553:11:72",
            "parameters": {
              "id": 42082,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42081,
                  "mutability": "mutable",
                  "name": "depositor",
                  "nameLocation": "41573:9:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 42101,
                  "src": "41565:17:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42080,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "41565:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "41564:19:72"
            },
            "returnParameters": {
              "id": 42083,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "41593:0:72"
            },
            "scope": 42304,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 42156,
            "nodeType": "FunctionDefinition",
            "src": "42194:850:72",
            "nodes": [],
            "body": {
              "id": 42155,
              "nodeType": "Block",
              "src": "42287:757:72",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    42111
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42111,
                      "mutability": "mutable",
                      "name": "amountToDecrement",
                      "nameLocation": "42305:17:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 42155,
                      "src": "42297:25:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42110,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "42297:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42115,
                  "initialValue": {
                    "baseExpression": {
                      "id": 42112,
                      "name": "beaconChainETHSharesToDecrementOnWithdrawal",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42389,
                      "src": "42325:43:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                        "typeString": "mapping(address => uint256)"
                      }
                    },
                    "id": 42114,
                    "indexExpression": {
                      "id": 42113,
                      "name": "staker",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42103,
                      "src": "42369:6:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "IndexAccess",
                    "src": "42325:51:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "42297:79:72"
                },
                {
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 42118,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 42116,
                      "name": "amountToDecrement",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42111,
                      "src": "42390:17:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "!=",
                    "rightExpression": {
                      "hexValue": "30",
                      "id": 42117,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "42411:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "src": "42390:22:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42146,
                  "nodeType": "IfStatement",
                  "src": "42386:513:72",
                  "trueBody": {
                    "id": 42145,
                    "nodeType": "Block",
                    "src": "42414:485:72",
                    "statements": [
                      {
                        "condition": {
                          "commonType": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          },
                          "id": 42121,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftExpression": {
                            "id": 42119,
                            "name": "amount",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42107,
                            "src": "42432:6:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "BinaryOperation",
                          "operator": ">",
                          "rightExpression": {
                            "id": 42120,
                            "name": "amountToDecrement",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 42111,
                            "src": "42441:17:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "42432:26:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_bool",
                            "typeString": "bool"
                          }
                        },
                        "falseBody": {
                          "id": 42143,
                          "nodeType": "Block",
                          "src": "42678:211:72",
                          "statements": [
                            {
                              "expression": {
                                "id": 42140,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 42133,
                                    "name": "beaconChainETHSharesToDecrementOnWithdrawal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 42389,
                                    "src": "42696:43:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 42135,
                                  "indexExpression": {
                                    "id": 42134,
                                    "name": "staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 42103,
                                    "src": "42740:6:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "42696:51:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "components": [
                                    {
                                      "commonType": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      },
                                      "id": 42138,
                                      "isConstant": false,
                                      "isLValue": false,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "leftExpression": {
                                        "id": 42136,
                                        "name": "amountToDecrement",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 42111,
                                        "src": "42751:17:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "nodeType": "BinaryOperation",
                                      "operator": "-",
                                      "rightExpression": {
                                        "id": 42137,
                                        "name": "amount",
                                        "nodeType": "Identifier",
                                        "overloadedDeclarations": [],
                                        "referencedDeclaration": 42107,
                                        "src": "42771:6:72",
                                        "typeDescriptions": {
                                          "typeIdentifier": "t_uint256",
                                          "typeString": "uint256"
                                        }
                                      },
                                      "src": "42751:26:72",
                                      "typeDescriptions": {
                                        "typeIdentifier": "t_uint256",
                                        "typeString": "uint256"
                                      }
                                    }
                                  ],
                                  "id": 42139,
                                  "isConstant": false,
                                  "isInlineArray": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "nodeType": "TupleExpression",
                                  "src": "42750:28:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "42696:82:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 42141,
                              "nodeType": "ExpressionStatement",
                              "src": "42696:82:72"
                            },
                            {
                              "functionReturnParameters": 42109,
                              "id": 42142,
                              "nodeType": "Return",
                              "src": "42868:7:72"
                            }
                          ]
                        },
                        "id": 42144,
                        "nodeType": "IfStatement",
                        "src": "42428:461:72",
                        "trueBody": {
                          "id": 42132,
                          "nodeType": "Block",
                          "src": "42460:212:72",
                          "statements": [
                            {
                              "expression": {
                                "id": 42126,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "baseExpression": {
                                    "id": 42122,
                                    "name": "beaconChainETHSharesToDecrementOnWithdrawal",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 42389,
                                    "src": "42478:43:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_mapping$_t_address_$_t_uint256_$",
                                      "typeString": "mapping(address => uint256)"
                                    }
                                  },
                                  "id": 42124,
                                  "indexExpression": {
                                    "id": 42123,
                                    "name": "staker",
                                    "nodeType": "Identifier",
                                    "overloadedDeclarations": [],
                                    "referencedDeclaration": 42103,
                                    "src": "42522:6:72",
                                    "typeDescriptions": {
                                      "typeIdentifier": "t_address",
                                      "typeString": "address"
                                    }
                                  },
                                  "isConstant": false,
                                  "isLValue": true,
                                  "isPure": false,
                                  "lValueRequested": true,
                                  "nodeType": "IndexAccess",
                                  "src": "42478:51:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "=",
                                "rightHandSide": {
                                  "hexValue": "30",
                                  "id": 42125,
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "kind": "number",
                                  "lValueRequested": false,
                                  "nodeType": "Literal",
                                  "src": "42532:1:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_rational_0_by_1",
                                    "typeString": "int_const 0"
                                  },
                                  "value": "0"
                                },
                                "src": "42478:55:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 42127,
                              "nodeType": "ExpressionStatement",
                              "src": "42478:55:72"
                            },
                            {
                              "expression": {
                                "id": 42130,
                                "isConstant": false,
                                "isLValue": false,
                                "isPure": false,
                                "lValueRequested": false,
                                "leftHandSide": {
                                  "id": 42128,
                                  "name": "amount",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42107,
                                  "src": "42630:6:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "nodeType": "Assignment",
                                "operator": "-=",
                                "rightHandSide": {
                                  "id": 42129,
                                  "name": "amountToDecrement",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42111,
                                  "src": "42640:17:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_uint256",
                                    "typeString": "uint256"
                                  }
                                },
                                "src": "42630:27:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "id": 42131,
                              "nodeType": "ExpressionStatement",
                              "src": "42630:27:72"
                            }
                          ]
                        }
                      }
                    ]
                  }
                },
                {
                  "expression": {
                    "arguments": [
                      {
                        "id": 42150,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42103,
                        "src": "43011:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42151,
                        "name": "recipient",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42105,
                        "src": "43019:9:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42152,
                        "name": "amount",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42107,
                        "src": "43030:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "expression": {
                        "id": 42147,
                        "name": "eigenPodManager",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42342,
                        "src": "42964:15:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_contract$_IEigenPodManager_$43208",
                          "typeString": "contract IEigenPodManager"
                        }
                      },
                      "id": 42149,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "lValueRequested": false,
                      "memberName": "withdrawRestakedBeaconChainETH",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 43146,
                      "src": "42964:46:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_external_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$",
                        "typeString": "function (address,address,uint256) external"
                      }
                    },
                    "id": 42153,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "42964:73:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42154,
                  "nodeType": "ExpressionStatement",
                  "src": "42964:73:72"
                }
              ]
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_withdrawBeaconChainETH",
            "nameLocation": "42203:23:72",
            "parameters": {
              "id": 42108,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42103,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "42235:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 42156,
                  "src": "42227:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42102,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "42227:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42105,
                  "mutability": "mutable",
                  "name": "recipient",
                  "nameLocation": "42251:9:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 42156,
                  "src": "42243:17:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42104,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "42243:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42107,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "42270:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 42156,
                  "src": "42262:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42106,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "42262:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "42226:51:72"
            },
            "returnParameters": {
              "id": 42109,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "42287:0:72"
            },
            "scope": 42304,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 42179,
            "nodeType": "FunctionDefinition",
            "src": "43182:368:72",
            "nodes": [],
            "body": {
              "id": 42178,
              "nodeType": "Block",
              "src": "43258:292:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "arguments": [
                      {
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 42165,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "id": 42163,
                          "name": "_withdrawalDelayBlocks",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42159,
                          "src": "43276:22:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "id": 42164,
                          "name": "MAX_WITHDRAWAL_DELAY_BLOCKS",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42354,
                          "src": "43302:27:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "43276:53:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      },
                      {
                        "hexValue": "53747261746567794d616e616765722e7365745769746864726177616c44656c61793a205f7769746864726177616c44656c6179426c6f636b7320746f6f2068696768",
                        "id": 42166,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": true,
                        "kind": "string",
                        "lValueRequested": false,
                        "nodeType": "Literal",
                        "src": "43331:69:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_stringliteral_12e8c660d2c8fcb7f47eb8c6690d9db193ba014cf8764801dde1d81224239e44",
                          "typeString": "literal_string \"StrategyManager.setWithdrawalDelay: _withdrawalDelayBlocks too high\""
                        },
                        "value": "StrategyManager.setWithdrawalDelay: _withdrawalDelayBlocks too high"
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        },
                        {
                          "typeIdentifier": "t_stringliteral_12e8c660d2c8fcb7f47eb8c6690d9db193ba014cf8764801dde1d81224239e44",
                          "typeString": "literal_string \"StrategyManager.setWithdrawalDelay: _withdrawalDelayBlocks too high\""
                        }
                      ],
                      "id": 42162,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [
                        -18,
                        -18
                      ],
                      "referencedDeclaration": -18,
                      "src": "43268:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$",
                        "typeString": "function (bool,string memory) pure"
                      }
                    },
                    "id": 42167,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "43268:133:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42168,
                  "nodeType": "ExpressionStatement",
                  "src": "43268:133:72"
                },
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 42170,
                        "name": "withdrawalDelayBlocks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42351,
                        "src": "43441:21:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      {
                        "id": 42171,
                        "name": "_withdrawalDelayBlocks",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42159,
                        "src": "43464:22:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 42169,
                      "name": "WithdrawalDelayBlocksSet",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40422,
                      "src": "43416:24:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_uint256_$_t_uint256_$returns$__$",
                        "typeString": "function (uint256,uint256)"
                      }
                    },
                    "id": 42172,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "43416:71:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42173,
                  "nodeType": "EmitStatement",
                  "src": "43411:76:72"
                },
                {
                  "expression": {
                    "id": 42176,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42174,
                      "name": "withdrawalDelayBlocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42351,
                      "src": "43497:21:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 42175,
                      "name": "_withdrawalDelayBlocks",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42159,
                      "src": "43521:22:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "43497:46:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 42177,
                  "nodeType": "ExpressionStatement",
                  "src": "43497:46:72"
                }
              ]
            },
            "documentation": {
              "id": 42157,
              "nodeType": "StructuredDocumentation",
              "src": "43050:127:72",
              "text": "@notice internal function for changing the value of `withdrawalDelayBlocks`. Also performs sanity check and emits an event."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setWithdrawalDelayBlocks",
            "nameLocation": "43191:25:72",
            "parameters": {
              "id": 42160,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42159,
                  "mutability": "mutable",
                  "name": "_withdrawalDelayBlocks",
                  "nameLocation": "43225:22:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 42179,
                  "src": "43217:30:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42158,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "43217:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "43216:32:72"
            },
            "returnParameters": {
              "id": 42161,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "43258:0:72"
            },
            "scope": 42304,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 42195,
            "nodeType": "FunctionDefinition",
            "src": "43703:221:72",
            "nodes": [],
            "body": {
              "id": 42194,
              "nodeType": "Block",
              "src": "43777:147:72",
              "nodes": [],
              "statements": [
                {
                  "eventCall": {
                    "arguments": [
                      {
                        "id": 42186,
                        "name": "strategyWhitelister",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42348,
                        "src": "43819:19:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      {
                        "id": 42187,
                        "name": "newStrategyWhitelister",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42182,
                        "src": "43840:22:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        },
                        {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      ],
                      "id": 42185,
                      "name": "StrategyWhitelisterChanged",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 40403,
                      "src": "43792:26:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_event_nonpayable$_t_address_$_t_address_$returns$__$",
                        "typeString": "function (address,address)"
                      }
                    },
                    "id": 42188,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "43792:71:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 42189,
                  "nodeType": "EmitStatement",
                  "src": "43787:76:72"
                },
                {
                  "expression": {
                    "id": 42192,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "id": 42190,
                      "name": "strategyWhitelister",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42348,
                      "src": "43873:19:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "id": 42191,
                      "name": "newStrategyWhitelister",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42182,
                      "src": "43895:22:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_address",
                        "typeString": "address"
                      }
                    },
                    "src": "43873:44:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "id": 42193,
                  "nodeType": "ExpressionStatement",
                  "src": "43873:44:72"
                }
              ]
            },
            "documentation": {
              "id": 42180,
              "nodeType": "StructuredDocumentation",
              "src": "43556:142:72",
              "text": "@notice Internal function for modifying the `strategyWhitelister`. Used inside of the `setStrategyWhitelister` and `initialize` functions."
            },
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "_setStrategyWhitelister",
            "nameLocation": "43712:23:72",
            "parameters": {
              "id": 42183,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42182,
                  "mutability": "mutable",
                  "name": "newStrategyWhitelister",
                  "nameLocation": "43744:22:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 42195,
                  "src": "43736:30:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42181,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "43736:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "43735:32:72"
            },
            "returnParameters": {
              "id": 42184,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "43777:0:72"
            },
            "scope": 42304,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "internal"
          },
          {
            "id": 42260,
            "nodeType": "FunctionDefinition",
            "src": "44121:518:72",
            "nodes": [],
            "body": {
              "id": 42259,
              "nodeType": "Block",
              "src": "44222:417:72",
              "nodes": [],
              "statements": [
                {
                  "assignments": [
                    42209
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42209,
                      "mutability": "mutable",
                      "name": "strategiesLength",
                      "nameLocation": "44240:16:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 42259,
                      "src": "44232:24:72",
                      "stateVariable": false,
                      "storageLocation": "default",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      },
                      "typeName": {
                        "id": 42208,
                        "name": "uint256",
                        "nodeType": "ElementaryTypeName",
                        "src": "44232:7:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42214,
                  "initialValue": {
                    "expression": {
                      "baseExpression": {
                        "id": 42210,
                        "name": "stakerStrategyList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42369,
                        "src": "44259:18:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$43971_$dyn_storage_$",
                          "typeString": "mapping(address => contract IStrategy[] storage ref)"
                        }
                      },
                      "id": 42212,
                      "indexExpression": {
                        "id": 42211,
                        "name": "depositor",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42198,
                        "src": "44278:9:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "44259:29:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_storage",
                        "typeString": "contract IStrategy[] storage ref"
                      }
                    },
                    "id": 42213,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "44259:36:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "44232:63:72"
                },
                {
                  "assignments": [
                    42219
                  ],
                  "declarations": [
                    {
                      "constant": false,
                      "id": 42219,
                      "mutability": "mutable",
                      "name": "shares",
                      "nameLocation": "44322:6:72",
                      "nodeType": "VariableDeclaration",
                      "scope": 42259,
                      "src": "44305:23:72",
                      "stateVariable": false,
                      "storageLocation": "memory",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                        "typeString": "uint256[]"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 42217,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "44305:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 42218,
                        "nodeType": "ArrayTypeName",
                        "src": "44305:9:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      },
                      "visibility": "internal"
                    }
                  ],
                  "id": 42225,
                  "initialValue": {
                    "arguments": [
                      {
                        "id": 42223,
                        "name": "strategiesLength",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42209,
                        "src": "44345:16:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        }
                      ],
                      "id": 42222,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "lValueRequested": false,
                      "nodeType": "NewExpression",
                      "src": "44331:13:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$",
                        "typeString": "function (uint256) pure returns (uint256[] memory)"
                      },
                      "typeName": {
                        "baseType": {
                          "id": 42220,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "44335:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 42221,
                        "nodeType": "ArrayTypeName",
                        "src": "44335:9:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                          "typeString": "uint256[]"
                        }
                      }
                    },
                    "id": 42224,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "44331:31:72",
                    "tryCall": false,
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                      "typeString": "uint256[] memory"
                    }
                  },
                  "nodeType": "VariableDeclarationStatement",
                  "src": "44305:57:72"
                },
                {
                  "body": {
                    "id": 42251,
                    "nodeType": "Block",
                    "src": "44416:161:72",
                    "statements": [
                      {
                        "expression": {
                          "id": 42245,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "leftHandSide": {
                            "baseExpression": {
                              "id": 42233,
                              "name": "shares",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42219,
                              "src": "44430:6:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                "typeString": "uint256[] memory"
                              }
                            },
                            "id": 42235,
                            "indexExpression": {
                              "id": 42234,
                              "name": "i",
                              "nodeType": "Identifier",
                              "overloadedDeclarations": [],
                              "referencedDeclaration": 42227,
                              "src": "44437:1:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": true,
                            "nodeType": "IndexAccess",
                            "src": "44430:9:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "nodeType": "Assignment",
                          "operator": "=",
                          "rightHandSide": {
                            "baseExpression": {
                              "baseExpression": {
                                "id": 42236,
                                "name": "stakerStrategyShares",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42362,
                                "src": "44442:20:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_mapping$_t_address_$_t_mapping$_t_contract$_IStrategy_$43971_$_t_uint256_$_$",
                                  "typeString": "mapping(address => mapping(contract IStrategy => uint256))"
                                }
                              },
                              "id": 42238,
                              "indexExpression": {
                                "id": 42237,
                                "name": "depositor",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42198,
                                "src": "44463:9:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "44442:31:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_mapping$_t_contract$_IStrategy_$43971_$_t_uint256_$",
                                "typeString": "mapping(contract IStrategy => uint256)"
                              }
                            },
                            "id": 42244,
                            "indexExpression": {
                              "baseExpression": {
                                "baseExpression": {
                                  "id": 42239,
                                  "name": "stakerStrategyList",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42369,
                                  "src": "44474:18:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$43971_$dyn_storage_$",
                                    "typeString": "mapping(address => contract IStrategy[] storage ref)"
                                  }
                                },
                                "id": 42241,
                                "indexExpression": {
                                  "id": 42240,
                                  "name": "depositor",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42198,
                                  "src": "44493:9:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_address",
                                    "typeString": "address"
                                  }
                                },
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "nodeType": "IndexAccess",
                                "src": "44474:29:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_storage",
                                  "typeString": "contract IStrategy[] storage ref"
                                }
                              },
                              "id": 42243,
                              "indexExpression": {
                                "id": 42242,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42227,
                                "src": "44504:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "IndexAccess",
                              "src": "44474:32:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_contract$_IStrategy_$43971",
                                "typeString": "contract IStrategy"
                              }
                            },
                            "isConstant": false,
                            "isLValue": true,
                            "isPure": false,
                            "lValueRequested": false,
                            "nodeType": "IndexAccess",
                            "src": "44442:65:72",
                            "typeDescriptions": {
                              "typeIdentifier": "t_uint256",
                              "typeString": "uint256"
                            }
                          },
                          "src": "44430:77:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 42246,
                        "nodeType": "ExpressionStatement",
                        "src": "44430:77:72"
                      },
                      {
                        "id": 42250,
                        "nodeType": "UncheckedBlock",
                        "src": "44521:46:72",
                        "statements": [
                          {
                            "expression": {
                              "id": 42248,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "lValueRequested": false,
                              "nodeType": "UnaryOperation",
                              "operator": "++",
                              "prefix": true,
                              "src": "44549:3:72",
                              "subExpression": {
                                "id": 42247,
                                "name": "i",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": 42227,
                                "src": "44551:1:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint256",
                                  "typeString": "uint256"
                                }
                              },
                              "typeDescriptions": {
                                "typeIdentifier": "t_uint256",
                                "typeString": "uint256"
                              }
                            },
                            "id": 42249,
                            "nodeType": "ExpressionStatement",
                            "src": "44549:3:72"
                          }
                        ]
                      }
                    ]
                  },
                  "condition": {
                    "commonType": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    },
                    "id": 42232,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftExpression": {
                      "id": 42230,
                      "name": "i",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42227,
                      "src": "44393:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "BinaryOperation",
                    "operator": "<",
                    "rightExpression": {
                      "id": 42231,
                      "name": "strategiesLength",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 42209,
                      "src": "44397:16:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "44393:20:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bool",
                      "typeString": "bool"
                    }
                  },
                  "id": 42252,
                  "initializationExpression": {
                    "assignments": [
                      42227
                    ],
                    "declarations": [
                      {
                        "constant": false,
                        "id": 42227,
                        "mutability": "mutable",
                        "name": "i",
                        "nameLocation": "44386:1:72",
                        "nodeType": "VariableDeclaration",
                        "scope": 42252,
                        "src": "44378:9:72",
                        "stateVariable": false,
                        "storageLocation": "default",
                        "typeDescriptions": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "typeName": {
                          "id": 42226,
                          "name": "uint256",
                          "nodeType": "ElementaryTypeName",
                          "src": "44378:7:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "visibility": "internal"
                      }
                    ],
                    "id": 42229,
                    "initialValue": {
                      "hexValue": "30",
                      "id": 42228,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "44390:1:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_0_by_1",
                        "typeString": "int_const 0"
                      },
                      "value": "0"
                    },
                    "nodeType": "VariableDeclarationStatement",
                    "src": "44378:13:72"
                  },
                  "nodeType": "ForStatement",
                  "src": "44373:204:72"
                },
                {
                  "expression": {
                    "components": [
                      {
                        "baseExpression": {
                          "id": 42253,
                          "name": "stakerStrategyList",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42369,
                          "src": "44594:18:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$43971_$dyn_storage_$",
                            "typeString": "mapping(address => contract IStrategy[] storage ref)"
                          }
                        },
                        "id": 42255,
                        "indexExpression": {
                          "id": 42254,
                          "name": "depositor",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 42198,
                          "src": "44613:9:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_address",
                            "typeString": "address"
                          }
                        },
                        "isConstant": false,
                        "isLValue": true,
                        "isPure": false,
                        "lValueRequested": false,
                        "nodeType": "IndexAccess",
                        "src": "44594:29:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_storage",
                          "typeString": "contract IStrategy[] storage ref"
                        }
                      },
                      {
                        "id": 42256,
                        "name": "shares",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42219,
                        "src": "44625:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                          "typeString": "uint256[] memory"
                        }
                      }
                    ],
                    "id": 42257,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "44593:39:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$_t_array$_t_contract$_IStrategy_$43971_$dyn_storage_$_t_array$_t_uint256_$dyn_memory_ptr_$",
                      "typeString": "tuple(contract IStrategy[] storage ref,uint256[] memory)"
                    }
                  },
                  "functionReturnParameters": 42207,
                  "id": 42258,
                  "nodeType": "Return",
                  "src": "44586:46:72"
                }
              ]
            },
            "baseFunctions": [
              44075
            ],
            "documentation": {
              "id": 42196,
              "nodeType": "StructuredDocumentation",
              "src": "43953:163:72",
              "text": " @notice Get all details on the depositor's deposits and corresponding shares\n @return (depositor's strategies, shares in these strategies)"
            },
            "functionSelector": "94f649dd",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "getDeposits",
            "nameLocation": "44130:11:72",
            "parameters": {
              "id": 42199,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42198,
                  "mutability": "mutable",
                  "name": "depositor",
                  "nameLocation": "44150:9:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 42260,
                  "src": "44142:17:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42197,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "44142:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "44141:19:72"
            },
            "returnParameters": {
              "id": 42207,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42203,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42260,
                  "src": "44184:18:72",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_memory_ptr",
                    "typeString": "contract IStrategy[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42201,
                      "nodeType": "UserDefinedTypeName",
                      "pathNode": {
                        "id": 42200,
                        "name": "IStrategy",
                        "nodeType": "IdentifierPath",
                        "referencedDeclaration": 43971,
                        "src": "44184:9:72"
                      },
                      "referencedDeclaration": 43971,
                      "src": "44184:9:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_contract$_IStrategy_$43971",
                        "typeString": "contract IStrategy"
                      }
                    },
                    "id": 42202,
                    "nodeType": "ArrayTypeName",
                    "src": "44184:11:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_storage_ptr",
                      "typeString": "contract IStrategy[]"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 42206,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42260,
                  "src": "44204:16:72",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                    "typeString": "uint256[]"
                  },
                  "typeName": {
                    "baseType": {
                      "id": 42204,
                      "name": "uint256",
                      "nodeType": "ElementaryTypeName",
                      "src": "44204:7:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "id": 42205,
                    "nodeType": "ArrayTypeName",
                    "src": "44204:9:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_array$_t_uint256_$dyn_storage_ptr",
                      "typeString": "uint256[]"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "44183:38:72"
            },
            "scope": 42304,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 42274,
            "nodeType": "FunctionDefinition",
            "src": "44734:139:72",
            "nodes": [],
            "body": {
              "id": 42273,
              "nodeType": "Block",
              "src": "44816:57:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "expression": {
                      "baseExpression": {
                        "id": 42268,
                        "name": "stakerStrategyList",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42369,
                        "src": "44833:18:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_mapping$_t_address_$_t_array$_t_contract$_IStrategy_$43971_$dyn_storage_$",
                          "typeString": "mapping(address => contract IStrategy[] storage ref)"
                        }
                      },
                      "id": 42270,
                      "indexExpression": {
                        "id": 42269,
                        "name": "staker",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 42263,
                        "src": "44852:6:72",
                        "typeDescriptions": {
                          "typeIdentifier": "t_address",
                          "typeString": "address"
                        }
                      },
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": false,
                      "nodeType": "IndexAccess",
                      "src": "44833:26:72",
                      "typeDescriptions": {
                        "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_storage",
                        "typeString": "contract IStrategy[] storage ref"
                      }
                    },
                    "id": 42271,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "length",
                    "nodeType": "MemberAccess",
                    "src": "44833:33:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 42267,
                  "id": 42272,
                  "nodeType": "Return",
                  "src": "44826:40:72"
                }
              ]
            },
            "baseFunctions": [
              44083
            ],
            "documentation": {
              "id": 42261,
              "nodeType": "StructuredDocumentation",
              "src": "44645:84:72",
              "text": "@notice Simple getter function that returns `stakerStrategyList[staker].length`."
            },
            "functionSelector": "8b8aac3c",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "stakerStrategyListLength",
            "nameLocation": "44743:24:72",
            "parameters": {
              "id": 42264,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42263,
                  "mutability": "mutable",
                  "name": "staker",
                  "nameLocation": "44776:6:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 42274,
                  "src": "44768:14:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 42262,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "44768:7:72",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "44767:16:72"
            },
            "returnParameters": {
              "id": 42267,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42266,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42274,
                  "src": "44807:7:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 42265,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "44807:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "44806:9:72"
            },
            "scope": 42304,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 42303,
            "nodeType": "FunctionDefinition",
            "src": "44945:535:72",
            "nodes": [],
            "body": {
              "id": 42302,
              "nodeType": "Block",
              "src": "45050:430:72",
              "nodes": [],
              "statements": [
                {
                  "expression": {
                    "components": [
                      {
                        "arguments": [
                          {
                            "arguments": [
                              {
                                "expression": {
                                  "id": 42286,
                                  "name": "queuedWithdrawal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42278,
                                  "src": "45140:16:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_memory_ptr",
                                    "typeString": "struct IStrategyManager.QueuedWithdrawal memory"
                                  }
                                },
                                "id": 42287,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "strategies",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 43986,
                                "src": "45140:27:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_memory_ptr",
                                  "typeString": "contract IStrategy[] memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 42288,
                                  "name": "queuedWithdrawal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42278,
                                  "src": "45189:16:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_memory_ptr",
                                    "typeString": "struct IStrategyManager.QueuedWithdrawal memory"
                                  }
                                },
                                "id": 42289,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "shares",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 43989,
                                "src": "45189:23:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 42290,
                                  "name": "queuedWithdrawal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42278,
                                  "src": "45234:16:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_memory_ptr",
                                    "typeString": "struct IStrategyManager.QueuedWithdrawal memory"
                                  }
                                },
                                "id": 42291,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "depositor",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 43991,
                                "src": "45234:26:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              },
                              {
                                "expression": {
                                  "id": 42292,
                                  "name": "queuedWithdrawal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42278,
                                  "src": "45282:16:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_memory_ptr",
                                    "typeString": "struct IStrategyManager.QueuedWithdrawal memory"
                                  }
                                },
                                "id": 42293,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "withdrawerAndNonce",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 43994,
                                "src": "45282:35:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_struct$_WithdrawerAndNonce_$43982_memory_ptr",
                                  "typeString": "struct IStrategyManager.WithdrawerAndNonce memory"
                                }
                              },
                              {
                                "expression": {
                                  "id": 42294,
                                  "name": "queuedWithdrawal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42278,
                                  "src": "45339:16:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_memory_ptr",
                                    "typeString": "struct IStrategyManager.QueuedWithdrawal memory"
                                  }
                                },
                                "id": 42295,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "withdrawalStartBlock",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 43996,
                                "src": "45339:37:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                }
                              },
                              {
                                "expression": {
                                  "id": 42296,
                                  "name": "queuedWithdrawal",
                                  "nodeType": "Identifier",
                                  "overloadedDeclarations": [],
                                  "referencedDeclaration": 42278,
                                  "src": "45398:16:72",
                                  "typeDescriptions": {
                                    "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_memory_ptr",
                                    "typeString": "struct IStrategyManager.QueuedWithdrawal memory"
                                  }
                                },
                                "id": 42297,
                                "isConstant": false,
                                "isLValue": true,
                                "isPure": false,
                                "lValueRequested": false,
                                "memberName": "delegatedAddress",
                                "nodeType": "MemberAccess",
                                "referencedDeclaration": 43998,
                                "src": "45398:33:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              }
                            ],
                            "expression": {
                              "argumentTypes": [
                                {
                                  "typeIdentifier": "t_array$_t_contract$_IStrategy_$43971_$dyn_memory_ptr",
                                  "typeString": "contract IStrategy[] memory"
                                },
                                {
                                  "typeIdentifier": "t_array$_t_uint256_$dyn_memory_ptr",
                                  "typeString": "uint256[] memory"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                },
                                {
                                  "typeIdentifier": "t_struct$_WithdrawerAndNonce_$43982_memory_ptr",
                                  "typeString": "struct IStrategyManager.WithdrawerAndNonce memory"
                                },
                                {
                                  "typeIdentifier": "t_uint32",
                                  "typeString": "uint32"
                                },
                                {
                                  "typeIdentifier": "t_address",
                                  "typeString": "address"
                                }
                              ],
                              "expression": {
                                "id": 42284,
                                "name": "abi",
                                "nodeType": "Identifier",
                                "overloadedDeclarations": [],
                                "referencedDeclaration": -1,
                                "src": "45108:3:72",
                                "typeDescriptions": {
                                  "typeIdentifier": "t_magic_abi",
                                  "typeString": "abi"
                                }
                              },
                              "id": 42285,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "memberName": "encode",
                              "nodeType": "MemberAccess",
                              "src": "45108:10:72",
                              "typeDescriptions": {
                                "typeIdentifier": "t_function_abiencode_pure$__$returns$_t_bytes_memory_ptr_$",
                                "typeString": "function () pure returns (bytes memory)"
                              }
                            },
                            "id": 42298,
                            "isConstant": false,
                            "isLValue": false,
                            "isPure": false,
                            "kind": "functionCall",
                            "lValueRequested": false,
                            "names": [],
                            "nodeType": "FunctionCall",
                            "src": "45108:341:72",
                            "tryCall": false,
                            "typeDescriptions": {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          }
                        ],
                        "expression": {
                          "argumentTypes": [
                            {
                              "typeIdentifier": "t_bytes_memory_ptr",
                              "typeString": "bytes memory"
                            }
                          ],
                          "id": 42283,
                          "name": "keccak256",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": -8,
                          "src": "45081:9:72",
                          "typeDescriptions": {
                            "typeIdentifier": "t_function_keccak256_pure$_t_bytes_memory_ptr_$returns$_t_bytes32_$",
                            "typeString": "function (bytes memory) pure returns (bytes32)"
                          }
                        },
                        "id": 42299,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "kind": "functionCall",
                        "lValueRequested": false,
                        "names": [],
                        "nodeType": "FunctionCall",
                        "src": "45081:382:72",
                        "tryCall": false,
                        "typeDescriptions": {
                          "typeIdentifier": "t_bytes32",
                          "typeString": "bytes32"
                        }
                      }
                    ],
                    "id": 42300,
                    "isConstant": false,
                    "isInlineArray": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "nodeType": "TupleExpression",
                    "src": "45067:406:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "functionReturnParameters": 42282,
                  "id": 42301,
                  "nodeType": "Return",
                  "src": "45060:413:72"
                }
              ]
            },
            "baseFunctions": [
              44184
            ],
            "documentation": {
              "id": 42275,
              "nodeType": "StructuredDocumentation",
              "src": "44879:61:72",
              "text": "@notice Returns the keccak256 hash of `queuedWithdrawal`."
            },
            "functionSelector": "b43b514b",
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "calculateWithdrawalRoot",
            "nameLocation": "44954:23:72",
            "parameters": {
              "id": 42279,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42278,
                  "mutability": "mutable",
                  "name": "queuedWithdrawal",
                  "nameLocation": "45002:16:72",
                  "nodeType": "VariableDeclaration",
                  "scope": 42303,
                  "src": "44978:40:72",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_memory_ptr",
                    "typeString": "struct IStrategyManager.QueuedWithdrawal"
                  },
                  "typeName": {
                    "id": 42277,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 42276,
                      "name": "QueuedWithdrawal",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 43999,
                      "src": "44978:16:72"
                    },
                    "referencedDeclaration": 43999,
                    "src": "44978:16:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_QueuedWithdrawal_$43999_storage_ptr",
                      "typeString": "struct IStrategyManager.QueuedWithdrawal"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "44977:42:72"
            },
            "returnParameters": {
              "id": 42282,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 42281,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 42303,
                  "src": "45041:7:72",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_bytes32",
                    "typeString": "bytes32"
                  },
                  "typeName": {
                    "id": 42280,
                    "name": "bytes32",
                    "nodeType": "ElementaryTypeName",
                    "src": "45041:7:72",
                    "typeDescriptions": {
                      "typeIdentifier": "t_bytes32",
                      "typeString": "bytes32"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "45040:9:72"
            },
            "scope": 42304,
            "stateMutability": "pure",
            "virtual": false,
            "visibility": "public"
          }
        ],
        "abstract": false,
        "baseContracts": [
          {
            "baseName": {
              "id": 40320,
              "name": "Initializable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29293,
              "src": "1208:13:72"
            },
            "id": 40321,
            "nodeType": "InheritanceSpecifier",
            "src": "1208:13:72"
          },
          {
            "baseName": {
              "id": 40322,
              "name": "OwnableUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29142,
              "src": "1227:18:72"
            },
            "id": 40323,
            "nodeType": "InheritanceSpecifier",
            "src": "1227:18:72"
          },
          {
            "baseName": {
              "id": 40324,
              "name": "ReentrancyGuardUpgradeable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 29352,
              "src": "1251:26:72"
            },
            "id": 40325,
            "nodeType": "InheritanceSpecifier",
            "src": "1251:26:72"
          },
          {
            "baseName": {
              "id": 40326,
              "name": "Pausable",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 53480,
              "src": "1283:8:72"
            },
            "id": 40327,
            "nodeType": "InheritanceSpecifier",
            "src": "1283:8:72"
          },
          {
            "baseName": {
              "id": 40328,
              "name": "StrategyManagerStorage",
              "nodeType": "IdentifierPath",
              "referencedDeclaration": 42426,
              "src": "1297:22:72"
            },
            "id": 40329,
            "nodeType": "InheritanceSpecifier",
            "src": "1297:22:72"
          }
        ],
        "canonicalName": "StrategyManager",
        "contractDependencies": [],
        "contractKind": "contract",
        "documentation": {
          "id": 40319,
          "nodeType": "StructuredDocumentation",
          "src": "654:521:72",
          "text": " @title The primary entry- and exit-point for funds into and out of EigenLayer.\n @author Layr Labs, Inc.\n @notice This contract is for managing deposits in different strategies. The main\n functionalities are:\n - adding and removing strategies that any delegator can deposit into\n - enabling deposit of assets into specified strategy(s)\n - enabling withdrawal of assets from specified strategy(s)\n - recording deposit of ETH into settlement layer\n - slashing of assets for permissioned strategies"
        },
        "fullyImplemented": true,
        "linearizedBaseContracts": [
          42304,
          42426,
          44228,
          53480,
          43250,
          29352,
          29142,
          29637,
          29293
        ],
        "name": "StrategyManager",
        "nameLocation": "1185:15:72",
        "scope": 42305,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 72
}