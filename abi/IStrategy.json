{
  "abi": [
    {
      "inputs": [
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "deposit",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "explanation",
      "outputs": [
        {
          "internalType": "string",
          "name": "",
          "type": "string"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountShares",
          "type": "uint256"
        }
      ],
      "name": "sharesToUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountShares",
          "type": "uint256"
        }
      ],
      "name": "sharesToUnderlyingView",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "totalShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountUnderlying",
          "type": "uint256"
        }
      ],
      "name": "underlyingToShares",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "uint256",
          "name": "amountUnderlying",
          "type": "uint256"
        }
      ],
      "name": "underlyingToSharesView",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [],
      "name": "underlyingToken",
      "outputs": [
        {
          "internalType": "contract IERC20",
          "name": "",
          "type": "address"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "userUnderlying",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "user",
          "type": "address"
        }
      ],
      "name": "userUnderlyingView",
      "outputs": [
        {
          "internalType": "uint256",
          "name": "",
          "type": "uint256"
        }
      ],
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "internalType": "address",
          "name": "depositor",
          "type": "address"
        },
        {
          "internalType": "contract IERC20",
          "name": "token",
          "type": "address"
        },
        {
          "internalType": "uint256",
          "name": "amountShares",
          "type": "uint256"
        }
      ],
      "name": "withdraw",
      "outputs": [],
      "stateMutability": "nonpayable",
      "type": "function"
    }
  ],
  "bytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "0x",
    "sourceMap": "",
    "linkReferences": {}
  },
  "methodIdentifiers": {
    "deposit(address,uint256)": "47e7ef24",
    "explanation()": "ab5921e1",
    "sharesToUnderlying(uint256)": "f3e73875",
    "sharesToUnderlyingView(uint256)": "7a8b2637",
    "totalShares()": "3a98ef39",
    "underlyingToShares(uint256)": "8c871019",
    "underlyingToSharesView(uint256)": "e3dae51c",
    "underlyingToken()": "2495a599",
    "userUnderlying(address)": "8f6a6240",
    "userUnderlyingView(address)": "553ca5f8",
    "withdraw(address,address,uint256)": "d9caed12"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.12+commit.f00d7308\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"deposit\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"explanation\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountShares\",\"type\":\"uint256\"}],\"name\":\"sharesToUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountShares\",\"type\":\"uint256\"}],\"name\":\"sharesToUnderlyingView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"}],\"name\":\"underlyingToShares\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"amountUnderlying\",\"type\":\"uint256\"}],\"name\":\"underlyingToSharesView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"underlyingToken\",\"outputs\":[{\"internalType\":\"contract IERC20\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"userUnderlying\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"userUnderlyingView\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"depositor\",\"type\":\"address\"},{\"internalType\":\"contract IERC20\",\"name\":\"token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amountShares\",\"type\":\"uint256\"}],\"name\":\"withdraw\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Layr Labs, Inc.\",\"kind\":\"dev\",\"methods\":{\"deposit(address,uint256)\":{\"details\":\"This function is only callable by the strategyManager contract. It is invoked inside of the strategyManager's `depositIntoStrategy` function, and individual share balances are recorded in the strategyManager as well.\",\"params\":{\"amount\":\"is the amount of token being deposited\",\"token\":\"is the ERC20 token being deposited\"},\"returns\":{\"_0\":\"newShares is the number of new shares issued at the current exchange ratio.\"}},\"sharesToUnderlying(uint256)\":{\"details\":\"Implementation for these functions in particular may vary signifcantly for different strategies\",\"params\":{\"amountShares\":\"is the amount of shares to calculate its conversion into the underlying token\"}},\"sharesToUnderlyingView(uint256)\":{\"details\":\"Implementation for these functions in particular may vary signifcantly for different strategies\",\"params\":{\"amountShares\":\"is the amount of shares to calculate its conversion into the underlying token\"}},\"underlyingToShares(uint256)\":{\"details\":\"Implementation for these functions in particular may vary signifcantly for different strategies\",\"params\":{\"amountUnderlying\":\"is the amount of `underlyingToken` to calculate its conversion into strategy shares\"}},\"underlyingToSharesView(uint256)\":{\"details\":\"Implementation for these functions in particular may vary signifcantly for different strategies\",\"params\":{\"amountUnderlying\":\"is the amount of `underlyingToken` to calculate its conversion into strategy shares\"}},\"withdraw(address,address,uint256)\":{\"details\":\"This function is only callable by the strategyManager contract. It is invoked inside of the strategyManager's other functions, and individual share balances are recorded in the strategyManager as well.\",\"params\":{\"amountShares\":\"is the amount of shares being withdrawn\",\"token\":\"is the ERC20 token being transferred out\"}}},\"title\":\"Minimal interface for an `Strategy` contract.\",\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{\"deposit(address,uint256)\":{\"notice\":\"Used to deposit tokens into this Strategy\"},\"explanation()\":{\"notice\":\"Returns either a brief string explaining the strategy's goal & purpose, or a link to metadata that explains in more detail.\"},\"sharesToUnderlying(uint256)\":{\"notice\":\"Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.In contrast to `sharesToUnderlyingView`, this function **may** make state modifications\"},\"sharesToUnderlyingView(uint256)\":{\"notice\":\"Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.In contrast to `sharesToUnderlying`, this function guarantees no state modifications\"},\"totalShares()\":{\"notice\":\"The total number of extant shares in thie Strategy\"},\"underlyingToShares(uint256)\":{\"notice\":\"Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToSharesView`, this function **may** make state modifications\"},\"underlyingToSharesView(uint256)\":{\"notice\":\"Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToShares`, this function guarantees no state modifications\"},\"underlyingToken()\":{\"notice\":\"The underyling token for shares in this Strategy\"},\"userUnderlying(address)\":{\"notice\":\"convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlyingView`, this function **may** make state modifications\"},\"userUnderlyingView(address)\":{\"notice\":\"convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlying`, this function guarantees no state modifications\"},\"withdraw(address,address,uint256)\":{\"notice\":\"Used to withdraw tokens from this Strategy, to the `depositor`'s address\"}},\"notice\":\"Custom `Strategy` implementations may expand extensively on this interface.\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/contracts/interfaces/IStrategy.sol\":\"IStrategy\"},\"evmVersion\":\"london\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/\",\":@openzeppelin/=lib/openzeppelin-contracts/\",\":ds-test/=lib/ds-test/src/\",\":forge-std/=lib/forge-std/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34\",\"dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr\"]},\"src/contracts/interfaces/IStrategy.sol\":{\"keccak256\":\"0x0c3daab62258fedec77cf8208533e6e58514b28cfb5bed97e58ec90ed41074d1\",\"license\":\"BUSL-1.1\",\"urls\":[\"bzz-raw://791c6196dacfe02aaf5fa19e78cd32f5a175344de5891ba6a2c8a4ba989c0263\",\"dweb:/ipfs/QmWJV7fR168qspKpSadFyKMwmwvPU9qiv5GyzuDYgNGWL7\"]}},\"version\":1}",
  "metadata": {
    "compiler": {
      "version": "0.8.12+commit.f00d7308"
    },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "deposit",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "explanation",
          "outputs": [
            {
              "internalType": "string",
              "name": "",
              "type": "string"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountShares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "sharesToUnderlying",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountShares",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "sharesToUnderlyingView",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "totalShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountUnderlying",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "underlyingToShares",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "uint256",
              "name": "amountUnderlying",
              "type": "uint256"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "underlyingToSharesView",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "underlyingToken",
          "outputs": [
            {
              "internalType": "contract IERC20",
              "name": "",
              "type": "address"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "userUnderlying",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "user",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "userUnderlyingView",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "depositor",
              "type": "address"
            },
            {
              "internalType": "contract IERC20",
              "name": "token",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "amountShares",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdraw"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "deposit(address,uint256)": {
            "details": "This function is only callable by the strategyManager contract. It is invoked inside of the strategyManager's `depositIntoStrategy` function, and individual share balances are recorded in the strategyManager as well.",
            "params": {
              "amount": "is the amount of token being deposited",
              "token": "is the ERC20 token being deposited"
            },
            "returns": {
              "_0": "newShares is the number of new shares issued at the current exchange ratio."
            }
          },
          "sharesToUnderlying(uint256)": {
            "details": "Implementation for these functions in particular may vary signifcantly for different strategies",
            "params": {
              "amountShares": "is the amount of shares to calculate its conversion into the underlying token"
            }
          },
          "sharesToUnderlyingView(uint256)": {
            "details": "Implementation for these functions in particular may vary signifcantly for different strategies",
            "params": {
              "amountShares": "is the amount of shares to calculate its conversion into the underlying token"
            }
          },
          "underlyingToShares(uint256)": {
            "details": "Implementation for these functions in particular may vary signifcantly for different strategies",
            "params": {
              "amountUnderlying": "is the amount of `underlyingToken` to calculate its conversion into strategy shares"
            }
          },
          "underlyingToSharesView(uint256)": {
            "details": "Implementation for these functions in particular may vary signifcantly for different strategies",
            "params": {
              "amountUnderlying": "is the amount of `underlyingToken` to calculate its conversion into strategy shares"
            }
          },
          "withdraw(address,address,uint256)": {
            "details": "This function is only callable by the strategyManager contract. It is invoked inside of the strategyManager's other functions, and individual share balances are recorded in the strategyManager as well.",
            "params": {
              "amountShares": "is the amount of shares being withdrawn",
              "token": "is the ERC20 token being transferred out"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "deposit(address,uint256)": {
            "notice": "Used to deposit tokens into this Strategy"
          },
          "explanation()": {
            "notice": "Returns either a brief string explaining the strategy's goal & purpose, or a link to metadata that explains in more detail."
          },
          "sharesToUnderlying(uint256)": {
            "notice": "Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.In contrast to `sharesToUnderlyingView`, this function **may** make state modifications"
          },
          "sharesToUnderlyingView(uint256)": {
            "notice": "Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.In contrast to `sharesToUnderlying`, this function guarantees no state modifications"
          },
          "totalShares()": {
            "notice": "The total number of extant shares in thie Strategy"
          },
          "underlyingToShares(uint256)": {
            "notice": "Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToSharesView`, this function **may** make state modifications"
          },
          "underlyingToSharesView(uint256)": {
            "notice": "Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.In contrast to `underlyingToShares`, this function guarantees no state modifications"
          },
          "underlyingToken()": {
            "notice": "The underyling token for shares in this Strategy"
          },
          "userUnderlying(address)": {
            "notice": "convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlyingView`, this function **may** make state modifications"
          },
          "userUnderlyingView(address)": {
            "notice": "convenience function for fetching the current underlying value of all of the `user`'s shares in this strategy. In contrast to `userUnderlying`, this function guarantees no state modifications"
          },
          "withdraw(address,address,uint256)": {
            "notice": "Used to withdraw tokens from this Strategy, to the `depositor`'s address"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        ":@openzeppelin-upgrades/=lib/openzeppelin-contracts-upgradeable/",
        ":@openzeppelin/=lib/openzeppelin-contracts/",
        ":ds-test/=lib/ds-test/src/",
        ":forge-std/=lib/forge-std/src/",
        ":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        ":openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": {
        "enabled": true,
        "runs": 200
      },
      "metadata": {
        "bytecodeHash": "ipfs"
      },
      "compilationTarget": {
        "src/contracts/interfaces/IStrategy.sol": "IStrategy"
      },
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0x9750c6b834f7b43000631af5cc30001c5f547b3ceb3635488f140f60e897ea6b",
        "urls": [
          "bzz-raw://5a7d5b1ef5d8d5889ad2ed89d8619c09383b80b72ab226e0fe7bde1636481e34",
          "dweb:/ipfs/QmebXWgtEfumQGBdVeM6c71McLixYXQP5Bk6kKXuoY4Bmr"
        ],
        "license": "MIT"
      },
      "src/contracts/interfaces/IStrategy.sol": {
        "keccak256": "0x0c3daab62258fedec77cf8208533e6e58514b28cfb5bed97e58ec90ed41074d1",
        "urls": [
          "bzz-raw://791c6196dacfe02aaf5fa19e78cd32f5a175344de5891ba6a2c8a4ba989c0263",
          "dweb:/ipfs/QmWJV7fR168qspKpSadFyKMwmwvPU9qiv5GyzuDYgNGWL7"
        ],
        "license": "BUSL-1.1"
      }
    },
    "version": 1
  },
  "ast": {
    "absolutePath": "src/contracts/interfaces/IStrategy.sol",
    "id": 43972,
    "exportedSymbols": {
      "IERC20": [
        31889
      ],
      "IStrategy": [
        43971
      ]
    },
    "nodeType": "SourceUnit",
    "src": "37:4660:91",
    "nodes": [
      {
        "id": 43879,
        "nodeType": "PragmaDirective",
        "src": "37:24:91",
        "nodes": [],
        "literals": [
          "solidity",
          "=",
          "0.8",
          ".12"
        ]
      },
      {
        "id": 43880,
        "nodeType": "ImportDirective",
        "src": "63:56:91",
        "nodes": [],
        "absolutePath": "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol",
        "file": "@openzeppelin/contracts/token/ERC20/IERC20.sol",
        "nameLocation": "-1:-1:-1",
        "scope": 43972,
        "sourceUnit": 31890,
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "id": 43971,
        "nodeType": "ContractDefinition",
        "src": "299:4397:91",
        "nodes": [
          {
            "id": 43892,
            "nodeType": "FunctionDefinition",
            "src": "840:74:91",
            "nodes": [],
            "documentation": {
              "id": 43882,
              "nodeType": "StructuredDocumentation",
              "src": "325:510:91",
              "text": " @notice Used to deposit tokens into this Strategy\n @param token is the ERC20 token being deposited\n @param amount is the amount of token being deposited\n @dev This function is only callable by the strategyManager contract. It is invoked inside of the strategyManager's\n `depositIntoStrategy` function, and individual share balances are recorded in the strategyManager as well.\n @return newShares is the number of new shares issued at the current exchange ratio."
            },
            "functionSelector": "47e7ef24",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "deposit",
            "nameLocation": "849:7:91",
            "parameters": {
              "id": 43888,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43885,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "864:5:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 43892,
                  "src": "857:12:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$31889",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 43884,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 43883,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31889,
                      "src": "857:6:91"
                    },
                    "referencedDeclaration": 31889,
                    "src": "857:6:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$31889",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43887,
                  "mutability": "mutable",
                  "name": "amount",
                  "nameLocation": "879:6:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 43892,
                  "src": "871:14:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43886,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "871:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "856:30:91"
            },
            "returnParameters": {
              "id": 43891,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43890,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43892,
                  "src": "905:7:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43889,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "905:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "904:9:91"
            },
            "scope": 43971,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43903,
            "nodeType": "FunctionDefinition",
            "src": "1373:82:91",
            "nodes": [],
            "documentation": {
              "id": 43893,
              "nodeType": "StructuredDocumentation",
              "src": "920:448:91",
              "text": " @notice Used to withdraw tokens from this Strategy, to the `depositor`'s address\n @param token is the ERC20 token being transferred out\n @param amountShares is the amount of shares being withdrawn\n @dev This function is only callable by the strategyManager contract. It is invoked inside of the strategyManager's\n other functions, and individual share balances are recorded in the strategyManager as well."
            },
            "functionSelector": "d9caed12",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "withdraw",
            "nameLocation": "1382:8:91",
            "parameters": {
              "id": 43901,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43895,
                  "mutability": "mutable",
                  "name": "depositor",
                  "nameLocation": "1399:9:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 43903,
                  "src": "1391:17:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43894,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1391:7:91",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43898,
                  "mutability": "mutable",
                  "name": "token",
                  "nameLocation": "1417:5:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 43903,
                  "src": "1410:12:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$31889",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 43897,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 43896,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31889,
                      "src": "1410:6:91"
                    },
                    "referencedDeclaration": 31889,
                    "src": "1410:6:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$31889",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 43900,
                  "mutability": "mutable",
                  "name": "amountShares",
                  "nameLocation": "1432:12:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 43903,
                  "src": "1424:20:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43899,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1424:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1390:55:91"
            },
            "returnParameters": {
              "id": 43902,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1454:0:91"
            },
            "scope": 43971,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43911,
            "nodeType": "FunctionDefinition",
            "src": "1908:77:91",
            "nodes": [],
            "documentation": {
              "id": 43904,
              "nodeType": "StructuredDocumentation",
              "src": "1461:442:91",
              "text": " @notice Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.\n @notice In contrast to `sharesToUnderlyingView`, this function **may** make state modifications\n @param amountShares is the amount of shares to calculate its conversion into the underlying token\n @dev Implementation for these functions in particular may vary signifcantly for different strategies"
            },
            "functionSelector": "f3e73875",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "sharesToUnderlying",
            "nameLocation": "1917:18:91",
            "parameters": {
              "id": 43907,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43906,
                  "mutability": "mutable",
                  "name": "amountShares",
                  "nameLocation": "1944:12:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 43911,
                  "src": "1936:20:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43905,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1936:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1935:22:91"
            },
            "returnParameters": {
              "id": 43910,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43909,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43911,
                  "src": "1976:7:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43908,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1976:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "1975:9:91"
            },
            "scope": 43971,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43919,
            "nodeType": "FunctionDefinition",
            "src": "2448:81:91",
            "nodes": [],
            "documentation": {
              "id": 43912,
              "nodeType": "StructuredDocumentation",
              "src": "1991:452:91",
              "text": " @notice Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.\n @notice In contrast to `underlyingToSharesView`, this function **may** make state modifications\n @param amountUnderlying is the amount of `underlyingToken` to calculate its conversion into strategy shares\n @dev Implementation for these functions in particular may vary signifcantly for different strategies"
            },
            "functionSelector": "8c871019",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "underlyingToShares",
            "nameLocation": "2457:18:91",
            "parameters": {
              "id": 43915,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43914,
                  "mutability": "mutable",
                  "name": "amountUnderlying",
                  "nameLocation": "2484:16:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 43919,
                  "src": "2476:24:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43913,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2476:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2475:26:91"
            },
            "returnParameters": {
              "id": 43918,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43917,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43919,
                  "src": "2520:7:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43916,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2520:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2519:9:91"
            },
            "scope": 43971,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43927,
            "nodeType": "FunctionDefinition",
            "src": "2768:65:91",
            "nodes": [],
            "documentation": {
              "id": 43920,
              "nodeType": "StructuredDocumentation",
              "src": "2535:228:91",
              "text": " @notice convenience function for fetching the current underlying value of all of the `user`'s shares in\n this strategy. In contrast to `userUnderlyingView`, this function **may** make state modifications"
            },
            "functionSelector": "8f6a6240",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "userUnderlying",
            "nameLocation": "2777:14:91",
            "parameters": {
              "id": 43923,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43922,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "2800:4:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 43927,
                  "src": "2792:12:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43921,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "2792:7:91",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2791:14:91"
            },
            "returnParameters": {
              "id": 43926,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43925,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43927,
                  "src": "2824:7:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43924,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "2824:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "2823:9:91"
            },
            "scope": 43971,
            "stateMutability": "nonpayable",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43935,
            "nodeType": "FunctionDefinition",
            "src": "3284:86:91",
            "nodes": [],
            "documentation": {
              "id": 43928,
              "nodeType": "StructuredDocumentation",
              "src": "2840:439:91",
              "text": " @notice Used to convert a number of shares to the equivalent amount of underlying tokens for this strategy.\n @notice In contrast to `sharesToUnderlying`, this function guarantees no state modifications\n @param amountShares is the amount of shares to calculate its conversion into the underlying token\n @dev Implementation for these functions in particular may vary signifcantly for different strategies"
            },
            "functionSelector": "7a8b2637",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "sharesToUnderlyingView",
            "nameLocation": "3293:22:91",
            "parameters": {
              "id": 43931,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43930,
                  "mutability": "mutable",
                  "name": "amountShares",
                  "nameLocation": "3324:12:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 43935,
                  "src": "3316:20:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43929,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3316:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3315:22:91"
            },
            "returnParameters": {
              "id": 43934,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43933,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43935,
                  "src": "3361:7:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43932,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3361:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3360:9:91"
            },
            "scope": 43971,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43943,
            "nodeType": "FunctionDefinition",
            "src": "3830:90:91",
            "nodes": [],
            "documentation": {
              "id": 43936,
              "nodeType": "StructuredDocumentation",
              "src": "3376:449:91",
              "text": " @notice Used to convert an amount of underlying tokens to the equivalent amount of shares in this strategy.\n @notice In contrast to `underlyingToShares`, this function guarantees no state modifications\n @param amountUnderlying is the amount of `underlyingToken` to calculate its conversion into strategy shares\n @dev Implementation for these functions in particular may vary signifcantly for different strategies"
            },
            "functionSelector": "e3dae51c",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "underlyingToSharesView",
            "nameLocation": "3839:22:91",
            "parameters": {
              "id": 43939,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43938,
                  "mutability": "mutable",
                  "name": "amountUnderlying",
                  "nameLocation": "3870:16:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 43943,
                  "src": "3862:24:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43937,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3862:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3861:26:91"
            },
            "returnParameters": {
              "id": 43942,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43941,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43943,
                  "src": "3911:7:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43940,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "3911:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "3910:9:91"
            },
            "scope": 43971,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43951,
            "nodeType": "FunctionDefinition",
            "src": "4156:74:91",
            "nodes": [],
            "documentation": {
              "id": 43944,
              "nodeType": "StructuredDocumentation",
              "src": "3926:225:91",
              "text": " @notice convenience function for fetching the current underlying value of all of the `user`'s shares in\n this strategy. In contrast to `userUnderlying`, this function guarantees no state modifications"
            },
            "functionSelector": "553ca5f8",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "userUnderlyingView",
            "nameLocation": "4165:18:91",
            "parameters": {
              "id": 43947,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43946,
                  "mutability": "mutable",
                  "name": "user",
                  "nameLocation": "4192:4:91",
                  "nodeType": "VariableDeclaration",
                  "scope": 43951,
                  "src": "4184:12:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 43945,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "4184:7:91",
                    "stateMutability": "nonpayable",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4183:14:91"
            },
            "returnParameters": {
              "id": 43950,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43949,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43951,
                  "src": "4221:7:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43948,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4221:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4220:9:91"
            },
            "scope": 43971,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43958,
            "nodeType": "FunctionDefinition",
            "src": "4301:58:91",
            "nodes": [],
            "documentation": {
              "id": 43952,
              "nodeType": "StructuredDocumentation",
              "src": "4236:60:91",
              "text": "@notice The underyling token for shares in this Strategy"
            },
            "functionSelector": "2495a599",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "underlyingToken",
            "nameLocation": "4310:15:91",
            "parameters": {
              "id": 43953,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4325:2:91"
            },
            "returnParameters": {
              "id": 43957,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43956,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43958,
                  "src": "4351:6:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_IERC20_$31889",
                    "typeString": "contract IERC20"
                  },
                  "typeName": {
                    "id": 43955,
                    "nodeType": "UserDefinedTypeName",
                    "pathNode": {
                      "id": 43954,
                      "name": "IERC20",
                      "nodeType": "IdentifierPath",
                      "referencedDeclaration": 31889,
                      "src": "4351:6:91"
                    },
                    "referencedDeclaration": 31889,
                    "src": "4351:6:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_IERC20_$31889",
                      "typeString": "contract IERC20"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4350:8:91"
            },
            "scope": 43971,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43964,
            "nodeType": "FunctionDefinition",
            "src": "4432:55:91",
            "nodes": [],
            "documentation": {
              "id": 43959,
              "nodeType": "StructuredDocumentation",
              "src": "4365:62:91",
              "text": "@notice The total number of extant shares in thie Strategy"
            },
            "functionSelector": "3a98ef39",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "totalShares",
            "nameLocation": "4441:11:91",
            "parameters": {
              "id": 43960,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4452:2:91"
            },
            "returnParameters": {
              "id": 43963,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43962,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43964,
                  "src": "4478:7:91",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 43961,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "4478:7:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4477:9:91"
            },
            "scope": 43971,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          },
          {
            "id": 43970,
            "nodeType": "FunctionDefinition",
            "src": "4633:61:91",
            "nodes": [],
            "documentation": {
              "id": 43965,
              "nodeType": "StructuredDocumentation",
              "src": "4493:135:91",
              "text": "@notice Returns either a brief string explaining the strategy's goal & purpose, or a link to metadata that explains in more detail."
            },
            "functionSelector": "ab5921e1",
            "implemented": false,
            "kind": "function",
            "modifiers": [],
            "name": "explanation",
            "nameLocation": "4642:11:91",
            "parameters": {
              "id": 43966,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "4653:2:91"
            },
            "returnParameters": {
              "id": 43969,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 43968,
                  "mutability": "mutable",
                  "name": "",
                  "nameLocation": "-1:-1:-1",
                  "nodeType": "VariableDeclaration",
                  "scope": 43970,
                  "src": "4679:13:91",
                  "stateVariable": false,
                  "storageLocation": "memory",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string"
                  },
                  "typeName": {
                    "id": 43967,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "4679:6:91",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string"
                    }
                  },
                  "visibility": "internal"
                }
              ],
              "src": "4678:15:91"
            },
            "scope": 43971,
            "stateMutability": "view",
            "virtual": false,
            "visibility": "external"
          }
        ],
        "abstract": false,
        "baseContracts": [],
        "canonicalName": "IStrategy",
        "contractDependencies": [],
        "contractKind": "interface",
        "documentation": {
          "id": 43881,
          "nodeType": "StructuredDocumentation",
          "src": "121:177:91",
          "text": " @title Minimal interface for an `Strategy` contract.\n @author Layr Labs, Inc.\n @notice Custom `Strategy` implementations may expand extensively on this interface."
        },
        "fullyImplemented": false,
        "linearizedBaseContracts": [
          43971
        ],
        "name": "IStrategy",
        "nameLocation": "309:9:91",
        "scope": 43972,
        "usedErrors": []
      }
    ],
    "license": "BUSL-1.1"
  },
  "id": 91
}